{"version":3,"file":"static/js/main.7c100e82.js","mappings":"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","sources":["assets/icons/logoSvg.js","components/buttons/headerButton.js","components/buttons/headerButton.module.js","screens/styles/greetingsScreen.module.js","context/ImageContext.js","context/AuthContext.js","screens/GreetingsScreen.js","assets/icons/createSvg.js","assets/icons/searchSvg.js","assets/icons/crossSvg.js","assets/icons/plusSvg.js","components/Avatar/ShowAvatar/showAvatar.js","components/Avatar/ShowAvatar/showAvatar.module.js","assets/icons/deleteSvg.js","components/searchBodies/searchBody.js","components/searchBodies/searchBodies.module.js","components/inputs/searchInput/searchInput.js","components/inputs/searchInput/searchInput.modules.js","screens/MainUnauthScreen.js","components/inputs/textInput/textInput.js","components/inputs/textInput/textInput.module.js","screens/AuthScreen.js","screens/RegScreen.js","screens/ForgotScreen.js","assets/icons/headerLogoSvg.js","screens/styles/mainAuthScreen.module.js","components/buttons/borderButton.js","components/buttons/borderButton.module.js","components/forwardMessage/forwardMessage.js","components/forwardMessage/forwardMessage.module.js","context/MessageContext.js","context/AsyncStorageUtil.js","screens/MainAuthScreen.js","assets/icons/cameraSvg.js","components/ImageViewer/ImageViewer.js","components/ImageViewer/ImageViewer.module.js","components/Avatar/ChangeAvatar/changeAvatar.js","components/Avatar/ChangeAvatar/changeAvatar.module.js","assets/icons/backSvg.js","assets/icons/addSvg.js","components/inputs/nicknameInput/nicknameInput.js","components/inputs/nicknameInput/nicknameInput.module.js","screens/ProfileScreen.js","screens/ChangeEmailScreen.js","screens/ChangePasswordScreen.js","assets/icons/forwardSvg.js","assets/icons/forwardFocusSvg.js","components/messageBody/messageBody.js","components/messageBody/messageBody.module.js","assets/icons/sendSvg.js","components/inputs/messageInput/messageInput.js","components/inputs/messageInput/messageInput.module.js","screens/ChatScreen.js","assets/icons/settingsSvg.js","screens/ChannelScreen.js","assets/icons/changeSvg.js","assets/icons/adminSvg.js","assets/icons/adminFocusSvg.js","components/settingsBody/settingsBody.js","components/settingsBody/settingsBody.module.js","screens/SettingsScreen.js","screens/ChannelUnauthScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst LogoSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={588}\r\n    height={285}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#000\"\r\n      d=\"M92.94 177V87.4h12.8v78.464h48.512V177H92.94Zm74.208 0v-67.84h12.288V177h-12.288Zm6.144-80.896c-2.389 0-4.395-.768-6.016-2.304-1.536-1.536-2.304-3.413-2.304-5.632 0-2.304.768-4.224 2.304-5.76 1.621-1.536 3.627-2.304 6.016-2.304 2.389 0 4.352.768 5.888 2.304 1.621 1.45 2.432 3.285 2.432 5.504 0 2.304-.768 4.267-2.304 5.888-1.536 1.536-3.541 2.304-6.016 2.304Zm65.83 12.416c5.547 0 10.411 1.067 14.592 3.2 4.267 2.133 7.595 5.376 9.984 9.728 2.389 4.352 3.584 9.856 3.584 16.512V177h-12.288v-37.632c0-6.571-1.621-11.52-4.864-14.848-3.157-3.328-7.637-4.992-13.44-4.992-4.352 0-8.149.853-11.392 2.56-3.243 1.707-5.76 4.224-7.552 7.552-1.707 3.328-2.56 7.467-2.56 12.416V177h-12.288v-67.84h11.776v18.304l-1.92-4.864c2.219-4.437 5.632-7.893 10.24-10.368 4.608-2.475 9.984-3.712 16.128-3.712Zm60.885 52.096.256-15.744 39.04-35.712h14.848l-29.952 29.44-6.656 5.632-17.536 16.384ZM290.023 177V82.024h12.288V177h-12.288Zm51.84 0-26.624-33.024 7.936-9.856L356.967 177h-15.104Zm27.035 0v-67.84h12.288V177h-12.288Zm6.144-80.896c-2.389 0-4.395-.768-6.016-2.304-1.536-1.536-2.304-3.413-2.304-5.632 0-2.304.768-4.224 2.304-5.76 1.621-1.536 3.627-2.304 6.016-2.304 2.389 0 4.352.768 5.888 2.304 1.621 1.45 2.432 3.285 2.432 5.504 0 2.304-.768 4.267-2.304 5.888-1.536 1.536-3.541 2.304-6.016 2.304Zm65.83 12.416c5.547 0 10.411 1.067 14.592 3.2 4.267 2.133 7.595 5.376 9.984 9.728 2.389 4.352 3.584 9.856 3.584 16.512V177h-12.288v-37.632c0-6.571-1.621-11.52-4.864-14.848-3.157-3.328-7.637-4.992-13.44-4.992-4.352 0-8.149.853-11.392 2.56-3.243 1.707-5.76 4.224-7.552 7.552-1.707 3.328-2.56 7.467-2.56 12.416V177h-12.288v-67.84h11.776v18.304l-1.92-4.864c2.219-4.437 5.632-7.893 10.24-10.368 4.608-2.475 9.984-3.712 16.128-3.712Zm80.597 94.08a62.083 62.083 0 0 1-18.176-2.688c-5.803-1.707-10.539-4.181-14.208-7.424l5.888-9.472c3.157 2.731 7.04 4.864 11.648 6.4 4.608 1.621 9.429 2.432 14.464 2.432 8.021 0 13.909-1.877 17.664-5.632 3.755-3.755 5.632-9.472 5.632-17.152v-14.336l1.28-13.44-.64-13.568v-18.56h11.648v58.624c0 11.947-2.987 20.736-8.96 26.368-5.973 5.632-14.72 8.448-26.24 8.448Zm-1.536-28.416c-6.571 0-12.459-1.365-17.664-4.096-5.12-2.816-9.216-6.699-12.288-11.648-2.987-4.949-4.48-10.667-4.48-17.152 0-6.571 1.493-12.288 4.48-17.152 3.072-4.949 7.168-8.789 12.288-11.52 5.205-2.731 11.093-4.096 17.664-4.096 5.803 0 11.093 1.195 15.872 3.584 4.779 2.304 8.576 5.888 11.392 10.752 2.901 4.864 4.352 11.008 4.352 18.432 0 7.339-1.451 13.44-4.352 18.304-2.816 4.864-6.613 8.533-11.392 11.008-4.779 2.389-10.069 3.584-15.872 3.584Zm1.408-10.752c4.523 0 8.533-.939 12.032-2.816 3.499-1.877 6.229-4.48 8.192-7.808 2.048-3.328 3.072-7.168 3.072-11.52 0-4.352-1.024-8.192-3.072-11.52-1.963-3.328-4.693-5.888-8.192-7.68-3.499-1.877-7.509-2.816-12.032-2.816s-8.576.939-12.16 2.816c-3.499 1.792-6.272 4.352-8.32 7.68-1.963 3.328-2.944 7.168-2.944 11.52 0 4.352.981 8.192 2.944 11.52 2.048 3.328 4.821 5.931 8.32 7.808 3.584 1.877 7.637 2.816 12.16 2.816Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M228.523 201.561a5 5 0 0 1 1.447-7.4l11.54-6.661a5 5 0 0 1 6.83 1.83l50.17 86.906a4.732 4.732 0 0 1-7.834 5.27l-62.153-79.945Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M228.523 201.561a5 5 0 0 1 1.447-7.4l11.54-6.661a5 5 0 0 1 6.83 1.83l50.17 86.906a4.732 4.732 0 0 1-7.834 5.27l-62.153-79.945Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M256.664 213.001A139 139 0 0 1 .512 150.914 138.998 138.998 0 0 1 168.54 3.175a139.003 139.003 0 0 1 73.756 42.814l-24.723 22.262A105.735 105.735 0 0 0 96.909 42.008 105.731 105.731 0 1 0 228.502 195.29l28.162 17.711Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M256.664 213.001A139 139 0 0 1 .512 150.914 138.998 138.998 0 0 1 168.54 3.175a139.003 139.003 0 0 1 73.756 42.814l-24.723 22.262A105.735 105.735 0 0 0 96.909 42.008 105.731 105.731 0 1 0 228.502 195.29l28.162 17.711Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default LogoSvg\r\n","import { View } from \"react-native-web\";\r\nimport useStyles from \"./headerButton.module\";\r\n\r\nimport { Text, TouchableHighlight} from 'react-native-web';\r\n\r\n\r\nexport default function HeaderButton({title, onPress, disabled}) {\r\n  const styles = useStyles(disabled);\r\n \r\n  return (\r\n    <TouchableHighlight style={styles.button} onPress={onPress} disabled={disabled}>\r\n      \r\n        <Text style={styles.buttonText}>{title}</Text>\r\n      \r\n    </TouchableHighlight>\r\n  );\r\n} ","import { StyleSheet, useWindowDimensions } from 'react-native';\r\n\r\nexport default function useStyles(disabled) {\r\n  const buttonWidth = width * 0.1;\r\n  const { width, height } = useWindowDimensions();\r\n  const buttonColor = disabled ? 'rgba(0, 0, 0, 0.35)' : 'rgba(0, 118, 185, 0.35)';\r\n\r\n  return StyleSheet.create({\r\n    button: {\r\n      backgroundColor: buttonColor,\r\n      borderRadius: 14,\r\n      minWidth: buttonWidth,\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 20,\r\n      alignSelf: 'right',\r\n      marginVertical: 10,\r\n      marginRight: 20,\r\n      flex: 1\r\n    },\r\n    buttonText: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: Math.min(width * 0.015, height * 0.05),\r\n      textAlign: 'center',\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native-web';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport default function useStyles() {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n      setWindowHeight(window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFFFFF',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    headerButton: {\r\n      marginTop: 30,\r\n    },\r\n    containerMain: {\r\n      flex: 1,\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    bottomLeft: {\r\n      position: 'absolute',\r\n      bottom: 20,\r\n      left: 20,\r\n    },\r\n    topLeft: {\r\n      position: 'absolute',\r\n      top: 20,\r\n      left: 20,\r\n    },\r\n    textContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 30,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      alignSelf: 'auto',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    messageContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      width: '40%',\r\n      height: '40%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    text: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: 24,\r\n      textAlign: 'center',\r\n    },\r\n    inputContainer: {\r\n      width: '80%',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      paddingTop: 20,\r\n    },\r\n  });\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ImageContext = createContext();\r\n\r\nexport const ImageProvider = ({ children }) => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedImage = localStorage.getItem('selectedImage');\r\n    if (storedImage) {\r\n      setSelectedImage(JSON.parse(storedImage));\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const updateSelectedImage = (image) => {\r\n    setSelectedImage(image);\r\n    localStorage.setItem('selectedImage', JSON.stringify(image));\r\n  };\r\n\r\n  return (\r\n    <ImageContext.Provider value={{ selectedImage, updateSelectedImage }}>\r\n      {children}\r\n    </ImageContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useEffect, useState, useContext } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ImageContext } from './ImageContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const { updateSelectedImage } = useContext(ImageContext);\r\n \r\n  useEffect(() => {\r\n    checkLoginStatus();\r\n  }, []);\r\n\r\n  const checkLoginStatus = async () => {\r\n    try {\r\n      const isLoggedInValue = await AsyncStorage.getItem('isLoggedIn');\r\n      const userData = await AsyncStorage.getItem('user');\r\n      if (isLoggedInValue === 'true' && userData) {\r\n        setIsLoggedIn(true);\r\n        setUser(JSON.parse(userData));\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при проверке статуса пользователя:', error);\r\n    }\r\n  };\r\n\r\n  const login = async (userData) => {\r\n    setIsLoggedIn(true);\r\n    setUser(userData);\r\n    try {\r\n      await AsyncStorage.clear(); \r\n      await AsyncStorage.setItem('isLoggedIn', 'true');\r\n      await AsyncStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      console.error('Ошибкра при входе:', error);\r\n    }\r\n  };\r\n\r\n  const storeCurrentScreen = (screenName) => {\r\n    AsyncStorage.setItem('currentScreen', screenName);\r\n  };\r\n\r\n  const logout = async () => {\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n    updateSelectedImage(null); \r\n    try {\r\n      await AsyncStorage.removeItem('isLoggedIn');\r\n      await AsyncStorage.removeItem('user');\r\n      await AsyncStorage.removeItem('currentScreen')\r\n   \r\n    } catch (error) {\r\n      console.error('Ошибка при выходе:', error);\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    setUser(updatedUser);\r\n  };\r\n\r\n  const getCurrentScreen = async () => {\r\n    try {\r\n      const currentScreen = await AsyncStorage.getItem('currentScreen');\r\n     \r\n      return currentScreen;\r\n    } catch (error) {\r\n      console.error('Error retrieving current screen:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const authContextValue = {\r\n    isLoggedIn,\r\n    user,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    storeCurrentScreen,\r\n    getCurrentScreen\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { View} from 'react-native-web';\r\nimport LogoSvg from '../assets/icons/logoSvg';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction GreetingsScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const { isLoggedIn, getCurrentScreen } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchCurrentScreen = async () => {\r\n      if (isLoggedIn) {\r\n        const screenName = await getCurrentScreen();\r\n        navigation.navigate(screenName);\r\n      }\r\n    };\r\n\r\n    fetchCurrentScreen();\r\n  }, [isLoggedIn, getCurrentScreen, navigation]);\r\n  return (\r\n    <View style={styles.container}>\r\n      <LogoSvg />\r\n      <View style={styles.headerButton}>\r\n        <HeaderButton\r\n          title={\"Начать\"}\r\n          onPress={() => navigation.navigate('MainUnauth')}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GreetingsScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Circle, Path } from \"react-native-svg\"\r\nconst CreateSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={72}\r\n    height={72}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={36} cy={36} r={36} fill=\"#0076B9\" />\r\n    <Circle cx={36} cy={36} r={36} fill=\"#000\" fillOpacity={0.2} />\r\n    <Path\r\n      fill=\"#fff\"\r\n      d=\"M15 55.444v-8.5l24.5-23 8.5 8-24.5 23.5H15ZM52 27.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n    <Path\r\n      stroke=\"#fff\"\r\n      strokeWidth={1.9}\r\n      d=\"M15 55.444v-8.5l24.5-23 8.5 8-24.5 23.5H15ZM52 27.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default CreateSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst SearchSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={32}\r\n    height={32}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#7C858E\"\r\n      d=\"M25.253 23.026 32 29.77 29.771 32l-6.745-6.747a14.114 14.114 0 0 1-8.849 3.102C6.351 28.355 0 22.003 0 14.177 0 6.351 6.351 0 14.177 0s14.178 6.351 14.178 14.177a14.114 14.114 0 0 1-3.102 8.849Zm-3.16-1.17a10.99 10.99 0 0 0 3.111-7.679c0-6.093-4.935-11.026-11.027-11.026-6.093 0-11.026 4.933-11.026 11.026 0 6.092 4.933 11.027 11.026 11.027a10.99 10.99 0 0 0 7.68-3.11l.236-.237Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default SearchSvg \r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst CrossSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={33}\r\n    height={33}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={1.9}\r\n      d=\"m1 1 31 31M1 1v31M1 1h31m0 31H1m31 0V1M1 32 32 1\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default CrossSvg\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst PlusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={37}\r\n    height={37}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#fff\"\r\n      d=\"M35.303 14.924v6.032H.704v-6.032h34.599ZM21.228.19v36.748h-6.414V.19h6.413Z\"\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default PlusSvg;\r\n","import { useEffect, useState } from 'react';\r\nimport React, { useContext } from 'react';\r\nimport { View, Image } from 'react-native-web';\r\nimport useStyles from './showAvatar.module';\r\nimport { Text } from 'react-native';\r\nimport PlusSvg from '../../../assets/icons/plusSvg';\r\nimport { ImageContext } from '../../../context/ImageContext';\r\nimport AuthContext from '../../../context/AuthContext';\r\n\r\nexport default function ShowAvatar({ imageUrl, profile, }) {\r\n  const styles = useStyles({ profile });\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user } = useContext(AuthContext); // Use `useContext` instead of `useState`\r\n\r\n  const renderAvatar = () => {\r\n    if (imageUrl && imageUrl.startsWith('data:image')) {\r\n      return <Image style={styles.image} source={{ uri: imageUrl }} />;\r\n    } else if (imageUrl) {\r\n      return <Image style={styles.image} source={{ uri: `data:image/jpeg;base64,${imageUrl}` }} />;\r\n    } else if (user.image) {\r\n      const base64Image = `data:image/jpeg;base64,${user.image}`;\r\n      return <Image style={styles.image} source={{ uri: base64Image }} />;\r\n    } else {\r\n      return (\r\n        <View style={styles.nonePhoto}>\r\n          <PlusSvg style={{ transform: [{ scale: 0.5 }] }} />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.round}>\r\n      {renderAvatar()}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles(props) {\r\n    const { width, height } = useWindowDimensions();\r\n    const { profile } = props;\r\n    \r\n    const containerWidth = profile ? width* 0.08 : width* 0.025;\r\n    const imageWidth = profile ? containerWidth : width* 0.025;\r\n    const imageHeight = profile ? containerWidth : width* 0.025;\r\n    const nonePhotoWidth = profile ? containerWidth : width* 0.08;\r\n    const nonePhotoHeight = profile ? containerWidth : width* 0.08;\r\n  \r\n    return StyleSheet.create({\r\n      container: {\r\n        flexDirection: \"row\",\r\n      },\r\n      image: {\r\n        width: imageWidth,\r\n        height: imageHeight,\r\n        borderRadius: 100,\r\n      },\r\n      round: {\r\n        padding: 5,\r\n        borderRadius: 100,\r\n        marginRight: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#0076B9',\r\n      },\r\n      nonePhoto: {\r\n        height: nonePhotoHeight,\r\n        width: nonePhotoWidth,\r\n        backgroundColor: \"#D9D9D9\",\r\n        borderRadius: 100, \r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      info: {\r\n        marginTop: 10,\r\n        flexDirection: \"column\",\r\n      },\r\n      nickname: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 5,\r\n        marginTop: 4\r\n      },\r\n      dateOfBirth: {\r\n        fontSize: 14,\r\n        color: \"#999999\",\r\n      },\r\n    });\r\n  }\r\n  ","import * as React from \"react\"\r\nimport Svg, { Circle, Path } from \"react-native-svg\"\r\nconst DeleteSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={62}\r\n    height={63}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={31} cy={31.445} r={30} stroke=\"#000\" strokeWidth={2} />\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={2}\r\n      d=\"m16.5 16.944 28.5 28.5m-28.5 0 28.5-28.5\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default DeleteSvg\r\n","import React from \"react\";\r\nimport { View, StyleSheet, Text, TouchableHighlight, Image } from \"react-native-web\";\r\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\r\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\r\nimport useStyles from \"./searchBodies.module\";\r\n\r\nexport default function SearchBody({ data }) {\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const { avatarUrl, username, channelName, onPress, containerStyle, main, id} = data;\r\n  const name = 'admin';\r\n  const password = 'root';\r\n  const styles = useStyles();\r\n  const deleteChat = () => {\r\n    \r\n    fetch(`https://backend-web-service-test.onrender.com/api/chats/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${name}:${password}`)}`,\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          alert(\"Чат успешно удалён\");\r\n          window.location.reload();\r\n        } else {\r\n          alert(\"Не удалоось удалить чат\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert(\"Ошибка при удалении чата:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <TouchableHighlight\r\n      style={[styles.container, containerStyle, isHovered && { backgroundColor: \"#E7DEDE\" }]}\r\n      onPress={onPress}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <View style={styles.rowContainer}>\r\n        {avatarUrl && (\r\n          <View style={styles.avatarContainer}>\r\n            <ShowAvatar imageUrl={avatarUrl} />\r\n            <Text style={styles.username}>{username}</Text>\r\n          </View>\r\n        )}\r\n        {!avatarUrl && <Text style={styles.channelName}>{username}</Text>}\r\n        {main && (\r\n          <View style={[styles.deleteContainer, { transform: [{ scale: 0.5 }] }]}>\r\n            <TouchableHighlight onPress={deleteChat}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n          backgroundColor: \"#FFFFFF\",\r\n          borderRadius: 26,\r\n          paddingVertical: 12,\r\n          paddingHorizontal: 16,\r\n        },\r\n        rowContainer: {\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        },\r\n        avatarContainer: {\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n        },\r\n        username: {\r\n          fontFamily: \"Montserrat-Regular\",\r\n          fontSize: Math.min(width * 0.012, height * 0.032),\r\n          fontWeight: \"bold\",\r\n          marginLeft: 8,\r\n        },\r\n        channelName: {\r\n          fontFamily: \"Montserrat-Regular\",\r\n          fontSize: Math.min(width * 0.012, height * 0.032),\r\n          fontWeight: \"bold\",\r\n        },\r\n        deleteContainer: {\r\n          marginLeft: \"auto\",\r\n        },\r\n      });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, TextInput, TouchableOpacity, ScrollView } from \"react-native-web\";\r\nimport useStyles from \"./searchInput.modules\";\r\nimport SearchSvg from \"../../../assets/icons/searchSvg\";\r\nimport CrossSvg from \"../../../assets/icons/crossSvg\";\r\nimport SearchBody from \"../../searchBodies/searchBody\";\r\nimport { useNavigation, useIsFocused } from '@react-navigation/native';\r\n\r\nexport default function SearchInput({ value, setValue, navigation, unauth, ...data }) {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n  const isComponentFocused = useIsFocused(); // Check if the component is focused\r\n\r\n  const navigationt = useNavigation();\r\n\r\n  const handlePress = (channelId) => {\r\n    navigationt.navigate('Channel', { channelId });\r\n  };\r\n\r\n  const handlePressChat = (chatUser) => {\r\n    navigationt.navigate('Chat', { chatUser});\r\n  };\r\n\r\n  const handlePressUnauth = (channelId) => {\r\n    navigationt.navigate('ChannelUnauth', { channelId });\r\n  };\r\n\r\n  const styles = useStyles();\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    setIsDropdownVisible(true);\r\n    fetchData(); // Fetch data when the input is in focus\r\n  };\r\n\r\n  const handleCrossSvgPress = () => {\r\n    setValue(\"\");\r\n    setIsFocused(false);\r\n    setIsDropdownVisible(false);\r\n  };\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [results, setResults] = useState([]);\r\n  const [resultsUnauth, setResultsUnauth] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const channelResponse = await fetch('https://backend-web-service-test.onrender.com/api/channels', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (channelResponse.ok) {\r\n        const channelData = await channelResponse.json();\r\n        const formattedResults = [];\r\n        const unauthResults = [];\r\n\r\n        for (let i = 0; i < channelData.length; i++) {\r\n          const channel = channelData[i];\r\n\r\n          formattedResults.push({\r\n            name: channel.name,\r\n            onPress: () => handlePress(channel.id),\r\n            avatarUrl: null\r\n          });\r\n\r\n          unauthResults.push({\r\n            name: channel.name,\r\n            onPress: () => handlePressUnauth(channel.id),\r\n            avatarUrl: null\r\n          });\r\n        }\r\n\r\n        const userResponse = await fetch('https://backend-web-service-test.onrender.com/api/users', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n\r\n        if (userResponse.ok) {\r\n          const userData = await userResponse.json();\r\n\r\n          for (let i = 0; i < userData.length; i++) {\r\n            const user = userData[i];\r\n\r\n            formattedResults.push({\r\n              name: user.name,\r\n              onPress: () => handlePressChat(user),\r\n              avatarUrl: user.image,\r\n            });\r\n          }\r\n        } else {\r\n          alert('Ошибка при подгрузке данных с сервера');\r\n        }\r\n\r\n        setResults(formattedResults);\r\n        setResultsUnauth(unauthResults);\r\n      } else {\r\n        alert('Ошибка при подгрузке данных с сервера');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isComponentFocused && isFocused) {\r\n      fetchData();\r\n    }\r\n  }, [isComponentFocused]);\r\n\r\n  const filteredResults = value\r\n    ? (unauth ? resultsUnauth : results).filter((result) =>\r\n        result.name.toLowerCase().includes(value.toLowerCase())\r\n      )\r\n    : (unauth ? resultsUnauth : results);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.icon}>\r\n        <SearchSvg />\r\n      </View>\r\n      <TextInput\r\n        {...data}\r\n        placeholderTextColor=\"#7C858E\"\r\n        value={value}\r\n        style={[styles.input, { paddingLeft: 36 }]}\r\n        onFocus={handleFocus}\r\n        onChangeText={(text) => setValue(text)}\r\n      />\r\n      {isFocused && (\r\n        <TouchableOpacity onPressIn={handleCrossSvgPress}>\r\n          <CrossSvg style={styles.dismissIcon}  />\r\n        </TouchableOpacity>\r\n      )}\r\n      {isDropdownVisible && (\r\n        <ScrollView style={styles.dropdown}>\r\n          {filteredResults.map((result, index) => (\r\n            <SearchBody\r\n              key={index}\r\n              data={{\r\n                avatarUrl: result.avatarUrl,\r\n                username: result.name,\r\n                onPress: result.onPress,\r\n              }}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      width: width*0.4,\r\n      zIndex: 0,\r\n      width: 644\r\n    },\r\n    icon: {\r\n      position: \"absolute\",\r\n      left: 10,\r\n      zIndex: 1,\r\n      transform: [{ scale: 0.5 }]\r\n    },\r\n    dismissIcon: {\r\n      position: \"absolute\",\r\n      right: 10,\r\n      top: \"50%\",\r\n      transform: [{ translateY: -17 }],\r\n      zIndex: 2,\r\n    },\r\n    dropdown: {\r\n      position: \"absolute\",\r\n      top: 50,\r\n      left: 0,\r\n      right: 0,\r\n      flex: 1,\r\n      maxHeight: height * 0.3,\r\n      overflowY: \"auto\", \r\n      backgroundColor: \"#FFFFFF\",\r\n      borderRadius: 10,\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\",\r\n      zIndex: 1,\r\n      padding: 10,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      fontFamily: 'Montserrat-Regular',\r\n      height: 44,\r\n      width: width*0.4,\r\n      fontSize: Math.min(width * 0.01, height * 0.03),                \r\n      paddingLeft: 10,\r\n      paddingRight: 10,             \r\n      borderRadius: 10,\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\"\r\n    },\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { View, Text, TouchableHighlight } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\n\r\nexport default function MainUnauthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n   \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.messageContainer}>\r\n        <Text style={styles.text}>Зарегистрируйтесь, чтобы начать общаться</Text>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Auth')}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}","import { View, TextInput } from \"react-native-web\";\r\nimport useStyles from \"./textInput.module\";\r\n\r\nexport default function DataInput({ value, setValue, type, flex, ...data }) {\r\n  const styles = useStyles();\r\n\r\n  let inputMask;\r\n  switch (type) {\r\n    case \"password\":\r\n      inputMask = {\r\n        secureTextEntry: true,\r\n        autoCompleteType: \"password\",\r\n        maxLength: 26,\r\n      };\r\n      break;\r\n    case \"nickname\":\r\n      inputMask = {\r\n        maxLength: 10,\r\n      };\r\n      break;\r\n    case \"email\":\r\n      inputMask = {\r\n        autoCompleteType: \"email\",\r\n        keyboardType: \"email-address\",\r\n        maxLength: 55,\r\n      };\r\n      break;\r\n    case \"code\":\r\n      inputMask = {\r\n        keyboardType: \"number-pad\",\r\n        maxLength: 4,\r\n      };\r\n      break;\r\n    default:\r\n      inputMask = {};\r\n  }\r\n\r\n  const inputWidth = flex ? \"90%\" : 600;\r\n  const inputHeight = flex ? 44 : 44;\r\n\r\n  return (\r\n    <View style={[styles.container, { width: inputWidth, height: inputHeight }]}>\r\n      <TextInput\r\n        {...data}\r\n        {...inputMask}\r\n        placeholderTextColor={\"#7C858E\"}\r\n        value={value}\r\n        style={[styles.input, { paddingLeft: 21 }]}\r\n        onChangeText={(text) => setValue(text)}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      borderRadius: 10,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      fontFamily: 'Montserrat-Regular',\r\n      height: Math.min(width * 0.03, height * 0.055), \r\n      fontSize: Math.min(width * 0.01, height * 0.03),\r\n      paddingLeft: 40,\r\n      borderRadius: 10,\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\",\r\n      width: \"80%\", \r\n    },\r\n  });\r\n}\r\n\r\n","import React, { useContext, useState } from 'react';\r\nimport { View, Text, TouchableHighlight, Alert } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nfunction AuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    password: '',\r\n    email: ''\r\n  });\r\n  const isFormValid = inputText.email && inputText.password;\r\n\r\n  const { login, storeCurrentScreen } = useContext(AuthContext);\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n        storeCurrentScreen('ChangeEmail')\r\n    }, [])\r\n);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const handleLogin = () => {\r\n\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не верный формат почты');\r\n      return;\r\n    }\r\n\r\n    const requestBody = {\r\n      email: inputText.email,\r\n      password: inputText.password\r\n    };\r\n\r\n    fetch('https://backend-web-service-test.onrender.com/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          response.json().then(data => {\r\n            login(data); \r\n          });\r\n          navigation.navigate('MainAuth');\r\n        } else {\r\n          response.json().then(errorData => {\r\n            const errorMessage = errorData.message || 'Login failed';\r\n            alert(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert('Ошибка подключения к серверу:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={text => setInputText({ ...inputText, email: text })}\r\n              placeholder=\"Почта\"\r\n              type=\"email\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={text => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View style={{ marginTop: 13, marginRight: 13 }}>\r\n          <TouchableHighlight onPress={() => navigation.navigate('Forgot')}>\r\n            <Text style = {{fontFamily: 'Montserrat-Regular'}}>Забыли пароль?</Text>\r\n          </TouchableHighlight>\r\n          <View style={{\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: 'black',\r\n              width: '100%',\r\n            }} />\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Войти\"\r\n            onPress={handleLogin}\r\n            disabled={!isFormValid}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title=\"Зарегистрироваться\"\r\n            onPress={() => navigation.navigate('Reg')}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default AuthScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nfunction RegScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const isFormValid = inputText.name && inputText.password && inputText.email;\r\n\r\n  const handleRegistration = () => {\r\n\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не правильный формат почты');\r\n      return;\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.password)) {\r\n      alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\r\n      return;\r\n    }\r\n\r\n    const requestBody = {\r\n      name: inputText.name,\r\n      email: inputText.email,\r\n      password: inputText.password\r\n    };\r\n\r\n    fetch('https://backend-web-service-test.onrender.com/api/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          navigation.navigate('Auth');\r\n        } else {\r\n          response.json().then(errorData => {\r\n            const errorMessage = errorData.message;\r\n            alert(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert('Ошибка при подключении к серверу:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.name}\r\n              setValue={text => setInputText({ ...inputText, name: text })}\r\n              placeholder=\"Никнейм\"\r\n              type=\"nickname\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={text => setInputText({ ...inputText, email: text })}\r\n              placeholder=\"Почта\"\r\n              type=\"email\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={text => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Зарегистрироваться\"\r\n            onPress={handleRegistration}\r\n            disabled={!isFormValid}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default RegScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, TouchableHighlight } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nfunction ForgotScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    email: '',\r\n    confirmPassword: '',\r\n    code: ''\r\n  });\r\n\r\n  \r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [receivedCode, setReceivedCode] = useState('');\r\n \r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.email ||\r\n      !inputText.confirmPassword ||\r\n      !inputText.code ||\r\n      inputText.newPassword !== inputText.confirmPassword || inputText.code != receivedCode\r\n    );\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не верный формат почты');\r\n      return;\r\n    }\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://backend-web-service-test.onrender.com/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReceivedCode(data);\r\n        if (data) {\r\n          alert('Код подтверждения был отправлен на указанную почту!');\r\n        } else {\r\n          alert('Не удалось отправить код подтверждения');\r\n         \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Ошибка при подключении к серверу:', error);\r\n      });\r\n  };\r\n  \r\n  const getUserById = async (email) => {\r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/users/email?email=${email}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n      return userData;\r\n      } else {\r\n        alert('Пользователь с указанной почтой не найден');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n  const updatePassword = async (userId) => {\r\n    try {\r\n      const queryParams = new URLSearchParams({\r\n        new_password: inputText.newPassword,\r\n      });\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/users/${userId}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          new_password: inputText.newPassword,\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        \r\n      } else {\r\n        response.json().then(errorData => {\r\n          const errorMessage = errorData.message ;\r\n         alert(errorMessage);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n  const handleResetPassword = async () => {\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.newPassword)) {\r\n      alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\r\n      return;\r\n    }\r\n    try {\r\n      const userId = await getUserById(inputText.email);\r\n    if (userId) {\r\n      await updatePassword(userId);\r\n      alert('Пароль успешно обновлен');\r\n    } else {\r\n      alert('Пользователь с указанной почтой не найден');\r\n    }\r\n      navigation.navigate('Auth');\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={'Почта'}\r\n              type={'email'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder={'Новый пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder={'Подтвердить пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={'Код'}\r\n              type={'code'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton title={'Изменить пароль'} onPress={handleResetPassword} disabled={isButtonDisabled()} />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton title={'Получить код'} onPress={getCode} disabled={isDisabled()} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ForgotScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst HeaderLogoSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={70}\r\n    height={70}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M54.06 50.77a2.655 2.655 0 1 1 4.468-2.846l10.958 20.058a1.117 1.117 0 0 1-1.88 1.198L54.06 50.77Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M54.06 50.77a2.655 2.655 0 1 1 4.468-2.846l10.958 20.058a1.117 1.117 0 0 1-1.88 1.198L54.06 50.77Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M59.711 52.364c-3.608 6.062-8.927 10.773-15.205 13.468a30.717 30.717 0 0 1-19.786 1.55c-6.586-1.687-12.504-5.518-16.918-10.952C3.387 50.997.7 44.235.119 37.1c-.58-7.134.974-14.282 4.445-20.432 3.472-6.15 8.683-10.993 14.9-13.844C25.681-.026 32.588-.74 39.21.781c6.622 1.521 12.624 5.203 17.158 10.525l-5.751 5.473c-3.45-4.048-8.015-6.849-13.052-8.007a23.38 23.38 0 0 0-15.02 1.555c-4.729 2.169-8.693 5.852-11.334 10.53-2.64 4.679-3.823 10.115-3.38 15.543.441 5.427 2.485 10.57 5.843 14.703 3.358 4.133 7.86 7.047 12.87 8.33a23.364 23.364 0 0 0 15.05-1.18c4.775-2.049 8.821-5.632 11.565-10.243l6.552 4.354Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M59.711 52.364c-3.608 6.062-8.927 10.773-15.205 13.468a30.717 30.717 0 0 1-19.786 1.55c-6.586-1.687-12.504-5.518-16.918-10.952C3.387 50.997.7 44.235.119 37.1c-.58-7.134.974-14.282 4.445-20.432 3.472-6.15 8.683-10.993 14.9-13.844C25.681-.026 32.588-.74 39.21.781c6.622 1.521 12.624 5.203 17.158 10.525l-5.751 5.473c-3.45-4.048-8.015-6.849-13.052-8.007a23.38 23.38 0 0 0-15.02 1.555c-4.729 2.169-8.693 5.852-11.334 10.53-2.64 4.679-3.823 10.115-3.38 15.543.441 5.427 2.485 10.57 5.843 14.703 3.358 4.133 7.86 7.047 12.87 8.33a23.364 23.364 0 0 0 15.05-1.18c4.775-2.049 8.821-5.632 11.565-10.243l6.552 4.354Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default HeaderLogoSvg ","import { StyleSheet, useWindowDimensions } from 'react-native-web';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function useStyles() {\r\n\r\n  const { width, height } = useWindowDimensions();\r\n\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFFFFF',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    headerButton: {\r\n      marginTop: 30, \r\n    },\r\n    channNameContainer: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      top: 80,\r\n      paddingLeft: 10,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n    },\r\n    dataInputContainer: {\r\n      marginRight: 10,\r\n    },\r\n    nicknameContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginBottom: 13,\r\n    },\r\n    containerMain: {\r\n      flex: 1,\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    containerSettings: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      flexDirection: \"row\",\r\n      alignItems: 'center',\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n    },\r\n    bottomLeft: {\r\n      position: 'absolute',\r\n      bottom: 20,\r\n      left: 20,\r\n    },\r\n    topLeft: {\r\n      position: 'absolute',\r\n      top: 20,\r\n      left: 20,\r\n    },\r\n    textContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 30,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      alignSelf: 'auto',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    messageContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '30%',\r\n      height: '40%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, \r\n      right: 80,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    barContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '50%',\r\n      height: '10%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, \r\n      right: 80, \r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    barChanContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '50%',\r\n      height: '10%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40,\r\n      right: 80,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n    },\r\n    barText: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      paddingLeft: 20,\r\n    },\r\n    settingsContainer: {\r\n      alignItems: 'center',\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '30%',\r\n      height: '40%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      \r\n    },\r\n    sendContainer: {\r\n      width: width * 0.4,\r\n      height: height * 0.1,\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      right: width * 0.1,\r\n      marginTop: 50\r\n    },\r\n    forwardContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      padding: 10,\r\n      borderRadius: 25,\r\n      width: '35%',\r\n      height: '45%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      bottom: 40,\r\n      right: 80, \r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    historyContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      padding: 10,\r\n      borderRadius: 15,\r\n      marginTop: 30,\r\n      width: '35%',\r\n      height: '70%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: '50%', \r\n      right: width * 0.1,\r\n      transform: [{ translateY: '-50%' }], \r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    profileContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: width * 0.2,\r\n      height: height*0.5,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, \r\n      left: 80, \r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n     paddingVertical: 60\r\n    },\r\n    profileSettingsContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: width * 0.25,\r\n      height: height *0.67,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingTop: height * 0.1, \r\n      paddingBottom: height * 0.1,\r\n      alignSelf: 'stretch',\r\n      marginTop: 'auto',\r\n      marginBottom: 'auto',\r\n      left: '50%',\r\n      \r\n      transform: [{ translateX: '-50%' }, ],\r\n    },\r\n\r\n\r\n    popupContainer: {\r\n      backgroundColor: '#E7DEDE',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '50%', \r\n      left: '50%', \r\n      transform: [{ translateX: '-50%' }, { translateY: '-50%' }], \r\n      width: '20%',\r\n      height: '20%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n    },\r\n    text: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      textAlign: 'center',\r\n      marginBottom: 13\r\n    },\r\n    inputContainer: {\r\n      width: '80%',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      paddingTop: 20\r\n    },\r\n  });\r\n}","import React from 'react';\r\nimport { StyleSheet, TouchableHighlight, Text } from 'react-native-web';\r\nimport useStyles from './borderButton.module';\r\n\r\nexport default function BorderButton({ data }) {\r\n    const {onPress, text} = data;\r\n    const styles = useStyles();\r\n  return (\r\n    <TouchableHighlight\r\n      style={styles.button}\r\n      onPress={onPress}\r\n    >\r\n      <Text style={styles.text}>{text}</Text>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        button: {\r\n          borderTopWidth: 1,\r\n          borderBottomWidth: 1,\r\n          borderColor: '#000000',\r\n          paddingHorizontal: 10,\r\n          paddingVertical: 15,\r\n          width: width * 0.15,\r\n          paddingHorizontal: 15,\r\n          \r\n          \r\n        },\r\n        text: {\r\n          fontFamily: 'Montserrat-Regular',\r\n          fontSize: Math.min(width * 0.02, height * 0.045),\r\n          color: '#000000',\r\n          textAlign: 'center',\r\n        },\r\n      });\r\n}","import React, { useContext, useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, useWindowDimensions } from 'react-native-web';\r\nimport ShowAvatar from '../Avatar/ShowAvatar/showAvatar';\r\nimport useStyles from './forwardMessage.module';\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\nconst ForwardMessage = ({ data }) => {\r\n  const { imageUrl, nickname, message, own, from, id } = data;\r\n  const styles = useStyles();\r\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\r\n  const {user} = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const { width, height } = useWindowDimensions();\r\n  const handleDeletePress = () => {\r\n    const user_id = user.id; \r\n    const message_id = id; \r\n\r\n    fetch(`https://backend-web-service-test.onrender.com/api/saved_message/delete?user_id=${user_id}&message_id=${message_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          window.location.reload();\r\n        } else {\r\n          alert('Не удалось удалить сообщение');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Ошибка при удалении сообщения:', error);\r\n      });\r\n  };\r\n\r\n  const handleMessageBoxPress = () => {\r\n    setShowDeleteButton(!showDeleteButton);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {own ? null : (\r\n        <ShowAvatar imageUrl={imageUrl} profile={false} style={styles.avatar} />\r\n      )}\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.messageBox,\r\n          own && styles.ownMessageBox,\r\n        ]}\r\n        onPress={handleMessageBoxPress}\r\n      >\r\n        {showDeleteButton && (\r\n          <TouchableOpacity onPress={handleDeletePress}>\r\n            <Text style={{ fontFamily: 'Montserrat-Italic' }}>Удалить</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        <Text style={[styles.nickname, own && styles.ownNickname]}>\r\n          {nickname}\r\n        </Text>\r\n        <Text style={[styles.message, own && styles.ownMessage]}>{message}</Text>\r\n        <Text style={{ fontFamily: 'Montserrat-Italic', fontSize: Math.min(width * 0.008, height * 0.025), }}>\r\n          Forwarded from: {from}\r\n        </Text>\r\n        {!own && <View style={styles.bubbleTail} />}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ForwardMessage;","import { StyleSheet, useWindowDimensions } from 'react-native-web';\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-end',\r\n    },\r\n    avatar: {\r\n      alignSelf: 'flex-start',\r\n    },\r\n    messageBox: {\r\n      marginLeft: 15,\r\n      flex: 1,\r\n      backgroundColor: '#E7DEDE',\r\n      borderLeftWidth: 5,\r\n      borderLeftColor: '#0076B9',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 15,\r\n      marginBottom: 10,\r\n      maxWidth: '40%',\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n    ownMessageBox: {\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      borderLeftColor: '#0076B9',\r\n      borderLeftWidth: 5,\r\n      marginLeft: 15,\r\n      flex: 1,\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 15,\r\n      marginBottom: 10,\r\n      maxWidth: '40%',\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n    nickname: {\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      fontWeight: 'bold',\r\n      marginBottom: 5,\r\n    },\r\n    ownNickname: {\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      fontWeight: 'bold',\r\n      marginBottom: 5,\r\n    },\r\n    message: {\r\n      fontSize: Math.min(width * 0.01, height * 0.03),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      flexWrap: 'wrap',\r\n      marginBottom: 10,\r\n    },\r\n    ownMessage: {\r\n      fontSize: Math.min(width * 0.01, height * 0.03),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      flexWrap: 'wrap',\r\n      marginBottom: 10,\r\n    },\r\n    bubbleTail: {\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      left: -14,\r\n      width: 5,\r\n      height: 0,\r\n      borderStyle: 'solid',\r\n      borderTopWidth: 10,\r\n      borderRightWidth: 0,\r\n      borderBottomWidth: 0,\r\n      borderLeftWidth: 10,\r\n      borderTopColor: '#0076B9',\r\n      borderBottomColor: 'transparent',\r\n      borderRightColor: 'transparent',\r\n      borderLeftColor: 'transparent',\r\n      transform: [{ rotate: '90deg' }],\r\n    },\r\n  });\r\n}\r\n","import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const MessageContext = createContext();\r\n\r\nexport const MessageProvider = ({ children }) => {\r\n  const [forwardedMessages, setForwardedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedMessages = localStorage.getItem('forwardedMessages');\r\n    if (storedMessages) {\r\n      setForwardedMessages(JSON.parse(storedMessages));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('forwardedMessages', JSON.stringify(forwardedMessages));\r\n  }, [forwardedMessages]);\r\n\r\n  const addForwardedMessage = (message) => {\r\n    setForwardedMessages((prevMessages) => [...prevMessages, message]);\r\n  };\r\n\r\n  const clearForwardedMessages = () => {\r\n    setForwardedMessages([]);\r\n  };\r\n\r\n  return (\r\n    <MessageContext.Provider value={{ forwardedMessages, addForwardedMessage, clearForwardedMessages }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n","import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport async function setProfileNickname(nickname) {\r\n  try {\r\n    await AsyncStorage.setItem('profile_nickname', nickname);\r\n  } catch (error) {\r\n    console.log('Ошибка при сохранении никнейма:', error);\r\n  }\r\n}\r\n\r\nexport async function getProfileNickname() {\r\n  try {\r\n    const nickname = await AsyncStorage.getItem('profile_nickname');\r\n    return nickname;\r\n  } catch (error) {\r\n    console.log('Ошибка при подгрузке никнейма:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function setEmail(email) {\r\n  try {\r\n    await AsyncStorage.setItem('profile_email', email);\r\n  } catch (error) {\r\n    console.log('Ошибка при сохранении почты:', error);\r\n  }\r\n}\r\n\r\nexport async function getEmail() {\r\n  try {\r\n    const email = await AsyncStorage.getItem('profile_email');\r\n    return email;\r\n  } catch (error) {\r\n    console.log('Ошибка при подгрузке почты:', error);\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView, useWindowDimensions } from 'react-native-web';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ForwardMessage from '../components/forwardMessage/forwardMessage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { MessageContext } from '../context/MessageContext';\r\nimport DeleteSvg from '../assets/icons/deleteSvg';\r\nimport { setProfileNickname, getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\n\r\nexport default function MainAuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user, updateUser, logout, storeCurrentScreen } = useContext(AuthContext);\r\n  const [userText, setUserText] = useState('');\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const updateUserCallback = useCallback(updatedUser => updateUser(updatedUser), [updateUser]);\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { width, height } = useWindowDimensions();\r\n\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchUserData();\r\n      fetchProfileNickname();\r\n      storeCurrentScreen('MainAuth')\r\n    }, [])\r\n  );\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    window.location.reload();\r\n  }\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/users/${user.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        console.log(userData);\r\n        updateUserCallback(userData);\r\n      } else {\r\n        console.log('Не удалось подгрузить данные пользователя');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n  const handleClearForwardedMessages = async () => {\r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/saved_message/delete_all?user_id=${user?.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log(`Сообщения успешно удалены!`);\r\n        window.location.reload();\r\n      } else {\r\n        console.log(`Не удалось удалить сообщения!`);\r\n\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт'\r\n    },\r\n    {\r\n      onPress: handleLogout,\r\n      text: 'Выйти'\r\n    }\r\n  ];\r\n\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://backend-web-service-test.onrender.com/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const channelResponse = await response.json();\r\n        setShowPopup(false);\r\n        alert('Канал создан');\r\n        window.location.reload();\r\n      } else {\r\n        alert('Не удалось создать канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.messageContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n          {user.channels.map((channel) => (\r\n            <SearchBody\r\n              key={channel.id}\r\n              data={{\r\n                username: channel.name,\r\n                onPress: () => navigation.navigate('Channel', { channelId: channel.id }),\r\n              }}\r\n            />\r\n          ))}\r\n          {user.chats.map((chat) => {\r\n            if (chat.recipient.name === user.name) {\r\n              return (\r\n                <SearchBody\r\n                  key={chat.id}\r\n                  data={{\r\n                    avatarUrl: chat.sender.image,\r\n                    username: chat.sender.name,\r\n                    onPress: () => navigation.navigate('Chat', { chatUser: chat.sender }),\r\n                    main: true,\r\n                    id: chat.id\r\n                  }}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <SearchBody\r\n                  key={chat.id}\r\n                  data={{\r\n                    avatarUrl: chat.recipient.image,\r\n                    username: chat.recipient.name,\r\n                    onPress: () => navigation.navigate('Chat', { chatUser: chat.recipient }),\r\n                    main: true,\r\n                    id: chat.id\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={selectedImage} profile={true} />\r\n        <Text style={{\r\n          color: '#000000',\r\n          fontSize:  Math.min(width * 0.03, height * 0.055),\r\n          textAlign: 'center',\r\n          marginBottom: 13,\r\n          fontFamily: 'Montserrat-Regular',\r\n        }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.forwardContainer}>\r\n        {user?.savedMessages?.length > 0 && (\r\n          <View style={{ right: 50, position: 'absolute', zIndex: 1 }}>\r\n            <TouchableHighlight onPress={handleClearForwardedMessages}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          </View>\r\n        )}\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n\r\n          {user?.savedMessages?.map((message) => {\r\n            return (\r\n              <View style={{ marginBottom: 13 }}>\r\n                <ForwardMessage\r\n                  key={message.id}\r\n                  data={{\r\n                    imageUrl: message.sender?.image,\r\n                    nickname: message.sender?.name,\r\n\r\n                    message: message.data,\r\n\r\n                    own: message.sender?.name === user.name,\r\n                    from: message.chat\r\n                    ? message.sender?.name === user.name\r\n                      ? message.chat.sender.name\r\n                      : message.chat.recipient.name\r\n                    : message.channel.name,\r\n                     id: message.id\r\n                  }}\r\n                />\r\n              </View>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={\"\"}\r\n              type={\"nickname\"}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n            <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n            </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { G, Circle, Path, Defs, ClipPath } from \"react-native-svg\"\r\nconst CameraSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={50}\r\n    height={50}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <G clipPath=\"url(#a)\">\r\n      <Circle cx={25} cy={25} r={25} fill=\"#00F\" />\r\n      <Path\r\n        fill=\"#fff\"\r\n        d=\"M24.846 22.692A4.161 4.161 0 0 1 29 26.846v.004a4.154 4.154 0 1 1-7.09-2.939 3.986 3.986 0 0 1 2.876-1.22h.063-.003v.001Zm10.154-6h.055c1.002 0 1.908.414 2.554 1.081l.001.001a3.547 3.547 0 0 1 1.082 2.555v.058-.003 12.924A3.693 3.693 0 0 1 35 37H14.692A3.693 3.693 0 0 1 11 33.308V20.33c0-1.002.414-1.908 1.081-2.554l.001-.001a3.547 3.547 0 0 1 2.555-1.082h.058-.003 3.23l.735-1.962c.212-.507.557-.922.993-1.213l.01-.006A2.55 2.55 0 0 1 21.15 13h7.387c.542.01 1.067.19 1.499.517l-.006-.005c.445.297.791.712.996 1.201l.007.018.735 1.962L35 16.692ZM24.846 33.308l.091.001a6.206 6.206 0 0 0 4.472-1.896l.002-.002a6.205 6.205 0 0 0 1.897-4.474l-.001-.096v.005l.001-.092a6.206 6.206 0 0 0-1.896-4.472l-.002-.002a6.421 6.421 0 0 0-4.565-1.897 6.424 6.424 0 0 0-4.565 1.896 6.206 6.206 0 0 0-1.896 4.57v-.005l-.001.094c0 1.755.726 3.34 1.894 4.471l.002.002a6.205 6.205 0 0 0 4.474 1.897l.097-.001h-.005l.001.001Z\"\r\n      />\r\n    </G>\r\n    <Defs>\r\n      <ClipPath id=\"a\">\r\n        <Path fill=\"#fff\" d=\"M0 0h50v50H0z\" />\r\n      </ClipPath>\r\n    </Defs>\r\n  </Svg>\r\n)\r\nexport default CameraSvg;","import { Image } from 'expo-image';\r\nimport useStyles from './ImageViewer.module';\r\n\r\nexport default function ImageViewer({ placeholderImageSource, selectedImage, isAvatar }) {\r\n    const styles = useStyles();\r\n    const imageSource = selectedImage !== null\r\n      ? { uri: selectedImage }\r\n      : placeholderImageSource;\r\n  \r\n    return <Image source={imageSource} style={isAvatar && styles.Avatarimage} />;\r\n}","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        Avatarimage: { \r\n            width: 139,\r\n            height: 139,\r\n            borderRadius: 100,\r\n        },\r\n    });\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport React, { useContext } from 'react';\r\nimport { View } from \"react-native-web\";\r\nimport useStyles from \"./changeAvatar.module\";\r\nimport { TouchableOpacity, Text } from 'react-native-web';\r\nimport PlusSvg from '../../../assets/icons/plusSvg';\r\nimport CameraSvg from '../../../assets/icons/cameraSvg';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport ImageViewer from '../../ImageViewer/ImageViewer';\r\nimport { ImageContext } from '../../../context/ImageContext';\r\nimport AuthContext from '../../../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function ChangeAvatar({ children, ...data }) {\r\n  const { updateSelectedImage } = useContext(ImageContext);\r\n  const styles = useStyles();\r\n  const [permission, setRequestPermission] = useState(null);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const { user, updateUser } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const cameraStatus = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      setRequestPermission(cameraStatus.status === 'granted');\r\n    })();\r\n  });\r\n\r\n  const pickImageAsync = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: true,\r\n      quality: 1,\r\n    });\r\n  \r\n    if (!result.canceled) {\r\n          uploadImage(result);  \r\n    } else {\r\n\r\n    }\r\n  };\r\n\r\n  const uploadImage = async (imageAsset) => {\r\n    const formData = new FormData();\r\n  \r\n    // Convert image URI to Blob\r\n    const response = await fetch(imageAsset.uri);\r\n    const blob = await response.blob();\r\n  \r\n    formData.append('file', blob, 'file.jpg');\r\n  \r\n    const userId = user?.id;\r\n    const apiUrl = `https://backend-web-service-test.onrender.com/api/users/${userId}/update/image`;\r\n  \r\n    try {\r\n      const response = await axios.put(apiUrl, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.status === 200 || response.status === 201) {\r\n        setSelectedImage(imageAsset.uri);\r\n        updateSelectedImage(imageAsset.uri);\r\n      } \r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.message) {\r\n        alert('Error: ' + error.response.data.message);\r\n      } \r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const openCamera = async () => {\r\n    const permissionResult = await ImagePicker.requestCameraPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      return;\r\n    }\r\n\r\n    const result = await ImagePicker.launchCameraAsync();\r\n\r\n    if (!result.canceled) {\r\n      setSelectedImage(result.assets[0].uri);\r\n      uploadImage(result.assets[0]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.round}>\r\n        <TouchableOpacity onPress={pickImageAsync}>\r\n          {!selectedImage && <View style={styles.nonePhoto}>\r\n            <PlusSvg />\r\n          </View>}\r\n          {selectedImage && <ImageViewer isAvatar={true} selectedImage={selectedImage} />}\r\n        </TouchableOpacity>\r\n        <View style={{ position: 'absolute', bottom: 0, right: 0 }}>\r\n          <TouchableOpacity onPress={openCamera}>\r\n            <CameraSvg />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    const nonePhotoWidth = width* 0.08;\r\n    const nonePhotoHeight =  width* 0.08;\r\n\r\n\r\n    return StyleSheet.create({\r\n        container: { \r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            flexDirection: 'row',\r\n        },\r\n        round: {\r\n            padding: 5,\r\n            borderRadius: 100,\r\n            marginRight: 10,\r\n            borderWidth: 1,\r\n            borderColor: '#0076B9',\r\n          },\r\n          nonePhoto: {\r\n            height: nonePhotoHeight,\r\n            width: nonePhotoWidth,\r\n            backgroundColor: \"#D9D9D9\",\r\n            borderRadius: 100, \r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          },\r\n    });\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { G, Rect, Path, Defs } from \"react-native-svg\"\r\n/* SVGR has dropped some elements not supported by react-native-svg: filter */\r\nconst BackSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={104}\r\n    height={105}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <G filter=\"url(#a)\">\r\n      <Rect width={96} height={96} x={4} y={0.444} fill=\"#fff\" rx={12} />\r\n    </G>\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeLinecap=\"round\"\r\n      strokeWidth={3}\r\n      d=\"M39.5 15.444 18 36.944m0 0 21.5 21.5M18 36.944h52.5c18 0 14.5 21.5 14.5 21.5s2 22-14.5 22H18\"\r\n    />\r\n    <Defs></Defs>\r\n  </Svg>\r\n)\r\nexport default BackSvg","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst AddSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={48}\r\n    height={48}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={1.9}\r\n      d=\"M2 24h43.84M2 24l21.92 21.92M2 24 23.92 2.08M45.84 24 23.92 45.92M45.84 24 23.92 2.08m0 43.84V2.08\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default AddSvg\r\n","import { View, TextInput, useWindowDimensions } from \"react-native-web\";\r\nimport useStyles from \"./nicknameInput.module\";\r\n\r\nexport default function NicknameInput({ value, setValue, flex, ...data }) {\r\n    const styles = useStyles();\r\n    const { width, height } = useWindowDimensions();\r\n    let inputMask;\r\n\r\n\r\n    inputMask = {\r\n        maxLength: 10,\r\n    };\r\n\r\n    const inputWidth = flex ? \"20%\" : width * 0.2;\r\n    const inputHeight = flex ? 44 : height * 0.06;\r\n\r\n    return (\r\n        <View style={[styles.container, { width: inputWidth, height: inputHeight }]}>\r\n            <TextInput\r\n                {...data}\r\n                {...inputMask}\r\n                maxLength={10}\r\n                placeholderTextColor=\"#7C858E\"\r\n                value={value}\r\n                style={[styles.input, { paddingLeft: inputHeight * 0.5 }]}\r\n                onChangeText={(text) => setValue(text)}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      \r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      height: Math.min(width * 0.03, height * 0.055), \r\n      fontFamily: 'Montserrat-Regular',\r\n      fontSize: Math.min(width * 0.03, height * 0.055), \r\n      paddingLeft: \"5%\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      width: \"70%\", \r\n    },\r\n  });\r\n}","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, TouchableHighlight, TouchableOpacity, useWindowDimensions } from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport CrossSvg from '../assets/icons/crossSvg';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport NicknameInput from '../components/inputs/nicknameInput/nicknameInput';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setProfileNickname, getProfileNickname, getEmail } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user, storeCurrentScreen} = useContext(AuthContext);\r\n  const [inputText, setInputText] = useState({\r\n    name: user?.name || '', \r\n  });\r\n  const { width, height } = useWindowDimensions();\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchEmail();\r\n      storeCurrentScreen('Profile')\r\n    }, [user])\r\n  );\r\n\r\n  const fetchEmail = async () => {\r\n    try {\r\n      const email = await getEmail();\r\n      if (email && email !== userText) {\r\n        setUserText(email);\r\n      } else if (!email && !userText) {\r\n        setUserText(user?.email || '');\r\n      }\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке почты:', error);\r\n    }\r\n  };\r\n  const emailContainerRef = useRef(null);\r\n  const [emailFontSize, setEmailFontSize] = useState(36);\r\n\r\n\r\n  const [showInputField, setShowInputField] = useState(false); \r\n  const [rotationDeg, setRotationDeg] = useState(0);\r\n\r\n  useEffect(() => {\r\n    handleEmailLayout();\r\n    fetchSavedNickname();\r\n  }, []);\r\n\r\n  const handleEmailLayout = () => {\r\n    const emailContainerWidth = emailContainerRef.current.offsetWidth;\r\n    const desiredMaxWidth = 300;\r\n    const desiredMaxFontSize = Math.min(width * 0.02, height * 0.043);\r\n    const emailFontSize = Math.min(desiredMaxFontSize, (desiredMaxWidth / emailContainerWidth) * desiredMaxFontSize);\r\n    setEmailFontSize(emailFontSize);\r\n  };\r\n\r\n  const fetchSavedNickname = async () => {\r\n    try {\r\n      const savedNickname = await AsyncStorage.getItem('profile_nickname');\r\n      if (savedNickname) {\r\n        setInputText({ name: savedNickname });\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching saved nickname:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSvgPress = async () => {\r\n    if (showInputField) {\r\n      setShowInputField(false);\r\n      setRotationDeg(0);\r\n      try {\r\n        await setProfileNickname(inputText.name);\r\n        if (inputText.name !== user.name) {\r\n          await updateName(inputText.name);\r\n        }\r\n      } catch (error) {\r\n        console.log('Ошибка сохранения никнейма:', error);\r\n      }\r\n    } else {\r\n      setShowInputField(true);\r\n      setRotationDeg(90); \r\n    }\r\n    try {\r\n      const profileNickname = await getProfileNickname();\r\n      console.log('Profile nickname:', profileNickname);\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке никнейма:', error);\r\n    }\r\n  };\r\n\r\n  const addSvgStyle = {\r\n    transform: `rotate(${showInputField ? 45 : 0}deg)`,\r\n    transition: 'transform 0.5s ease', \r\n  };\r\n\r\n  const updateName = async (newName) => {\r\n    try {\r\n      const id = user?.id; \r\n      if (id) {\r\n        const response = await fetch(`https://backend-web-service-test.onrender.com/api/users/${id}/update/name?name=${encodeURIComponent(newName)}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n        } else {\r\n          alert('Не удалось обновить имя пользователя');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.profileSettingsContainer}>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <ChangeAvatar  children={selectedImage}/>\r\n        </View>\r\n        <View style={styles.nicknameContainer}>\r\n          {showInputField ? (\r\n            <NicknameInput\r\n              value={inputText.name}\r\n              setValue={(text) => setInputText({ ...inputText, name: text })}\r\n              flex={false}\r\n            />\r\n          ) : (\r\n            <Text style={{ fontSize:  Math.min(width * 0.03, height * 0.055), fontFamily: 'Montserrat-Regular', paddingHorizontal: 30 }}>\r\n              {inputText.name}\r\n            </Text>\r\n          )}\r\n          <TouchableOpacity onPress={handleAddSvgPress}>\r\n            <AddSvg style={addSvgStyle} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            borderTopWidth: 1,\r\n            borderBottomWidth: 1,\r\n            borderColor: '#000000',\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 15,\r\n            width: width * 0.2,\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            marginBottom: 13,\r\n          }}\r\n        >\r\n          <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n            <Text\r\n              style={{\r\n                color: '#000000',\r\n                fontSize: Math.min(width * 0.02, height * 0.043),\r\n                textAlign: 'center',\r\n                fontFamily: 'Montserrat-Regular',\r\n                marginBottom: 13,\r\n              }}\r\n            >\r\n              {userText ? userText : user.email}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style = {{alignItems: 'center', width: '100%', marginLeft: 20}}>\r\n          <HeaderButton title={'Изменить почту'} onPress={() => navigation.navigate('ChangeEmail')} />\r\n        </View>\r\n        <View style={{ marginBottom: 13, alignItems: 'center', width: '100%', marginLeft: 20}}>\r\n          <HeaderButton title={'Изменить пароль'} onPress={() => navigation.navigate('ChangePassword')} />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, Button, TouchableHighlight, Alert } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setEmail } from '../context/AsyncStorageUtil';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nfunction ChangeEmailScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n  const [receivedCode, setReceivedCode] = useState('');\r\n\r\n  const { user, storeCurrentScreen } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n        storeCurrentScreen('ChangeEmail')\r\n    }, [])\r\n);\r\n  const isButtonDisabled = () => {\r\n    return !inputText.email || !inputText.code || inputText.code != receivedCode;\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://backend-web-service-test.onrender.com/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReceivedCode(data);\r\n        if (data) {\r\n          alert('Код подтверждения был отправлен на указанную почту!');\r\n         \r\n        } else {\r\n          alert('Не удалось отправить код');\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Ошибка при подключении к серверу:', error);\r\n      });\r\n  };\r\n\r\n  const changeEmail = async () => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не правильный формат почты');\r\n      return;\r\n    }\r\n  try {\r\n    const userId = user?.id;\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://backend-web-service-test.onrender.com/api/users/${userId}/update/email?email=${email}`;\r\n\r\n    const response = await fetch(apiUrl, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert('Почта успешно обновлена');\r\n      setEmail(inputText.email);\r\n    } else {\r\n      alert('Не удалось обновить почту');\r\n    }\r\n  } catch (error) {\r\n    alert('Ошибка при подключении к серверу:', error);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={\"Почта\"}\r\n              type={\"email\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={\"Код\"}\r\n              type={\"code\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title={\"Изменить почту\"}\r\n            onPress={changeEmail}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title={\"Получить код\"}\r\n            onPress={getCode}\r\n            disabled={isDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangeEmailScreen;\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, TouchableHighlight } from 'react-native';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nfunction ChangePasswordScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const { user, storeCurrentScreen } = useContext(AuthContext);\r\n  const id = user?.id; \r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n        storeCurrentScreen('ChangePassword')\r\n    }, [])\r\n);\r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.password ||\r\n      !inputText.confirmPassword \r\n    );\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    if (inputText.newPassword !== inputText.confirmPassword) {\r\n      return alert('Новый пароль не совпадает с полем полем подтверждения');\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.password)&& !passwordRegex.test(inputText.newPassword)) {\r\n      alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\r\n      return;\r\n    }\r\n    const id = user?.id;\r\n    const queryParams = new URLSearchParams({\r\n      last_password: inputText.password,\r\n      new_password: inputText.newPassword,\r\n    });\r\n  \r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/users/${id}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        alert('Пароль обновлен');\r\n      } else {\r\n        alert('Не удалось обновить пароль');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={(text) => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder=\"Новый пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder=\"Подтвердить пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Изменить пароль\"\r\n            onPress={handleUpdatePassword}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ForwardSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={15}\r\n    height={21}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path stroke=\"#000\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n  </Svg>\r\n)\r\nexport default ForwardSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ForwardFocusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={15}\r\n    height={21}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path fill=\"#0076B9\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path fill=\"#000\" fillOpacity={0.2} d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path stroke=\"#0076B9\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path stroke=\"#000\" strokeOpacity={0.2} d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n  </Svg>\r\n)\r\nexport default ForwardFocusSvg\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native-web';\r\nimport ShowAvatar from '../Avatar/ShowAvatar/showAvatar';\r\nimport ForwardSvg from '../../assets/icons/forwardSvg';\r\nimport ForwardFocusSvg from '../../assets/icons/forwardFocusSvg';\r\nimport { MessageContext } from '../../context/MessageContext';\r\nimport AuthContext from '../../context/AuthContext';\r\nimport useStyles from './messageBody.module';\r\n\r\nconst MessageBody = ({ data, currentUser }) => {\r\n  const { imageUrl, nickname, role, message, own, channel, date, unauth, ident  } = data;\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const dated = new Date(date);\r\n  const time = dated.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const {user} = useContext(AuthContext);\r\n  const styles = useStyles();\r\n  const { addForwardedMessage } = useContext(MessageContext);\r\n\r\n  const handleForwardPress = async () => {\r\n    setIsFocused(prevState => !prevState);\r\n    const body = {\r\n      username: user.name,\r\n      messageId: ident\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://backend-web-service-test.onrender.com/api/saved_message/save', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (response.ok) {\r\n\r\n      } else {\r\n        alert('Не удалось сохранить сообщение');\r\n      }\r\n    } catch (error) {\r\n      console.log('Ошибка при сохранении сообщения:', error);\r\n    }\r\n  };\r\n\r\n  const forwardIcon = isFocused ? <ForwardFocusSvg /> : <ForwardSvg />;\r\n\r\n  const messageBoxStyles = [\r\n    styles.messageBox,\r\n    own ? styles.ownMessageBox : styles.box,\r\n    {\r\n      borderTopRightRadius: own ? 10 : 10,\r\n      borderBottomRightRadius: own ? 0 : 10,\r\n      borderBottomLeftRadius: own ? 10 : 10,\r\n      borderTopLeftRadius: own ? 10 : 0,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={own ? styles.ownContainer : styles.container}>\r\n      {!own && imageUrl && (\r\n        <View style={styles.avatar}>\r\n          <ShowAvatar imageUrl={imageUrl} profile={false} />\r\n        </View>\r\n      )}\r\n      <View style={messageBoxStyles}>\r\n        {!unauth && (\r\n          <TouchableOpacity onPress={handleForwardPress}>\r\n            <View style={own ? styles.ownForward : styles.forward}>{forwardIcon}</View>\r\n          </TouchableOpacity>\r\n        )}\r\n        <Text style={styles.nickname}>{nickname}</Text>\r\n        {channel && <Text style={styles.role}>{role}</Text>}\r\n        <Text style={styles.message}>{message}</Text>\r\n        <Text style={own ? styles.ownTime : styles.time}>{time}</Text>\r\n        {own && <View style={styles.ownBubbleTail} />}\r\n        {!own && <View style={styles.bubbleTail} />}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default MessageBody;\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-end',\r\n      marginBottom: 10,\r\n      maxWidth: '100%',\r\n    },\r\n    ownContainer: {\r\n      flexDirection: 'row-reverse',\r\n      alignItems: 'flex-end',\r\n      marginBottom: 10,\r\n      maxWidth: '100%',\r\n    },\r\n    avatar: {\r\n      alignSelf: 'flex-start',\r\n    },\r\n    messageBox: {\r\n      backgroundColor: '#E7DEDE',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 15,\r\n      maxWidth: '60%',\r\n      borderTopLeftRadius: 10,\r\n      borderBottomLeftRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      position: 'relative',\r\n    },\r\n    box: {\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      borderTopLeftRadius: 10,\r\n    },\r\n    ownMessageBox: {\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 15,\r\n      maxWidth: '60%',\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      borderTopLeftRadius: 10,\r\n      position: 'relative',\r\n    },\r\n    forward: {\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5,\r\n    },\r\n    ownForward: {\r\n      alignSelf: 'flex-start',\r\n      marginBottom: 5,\r\n    },\r\n    nickname: {\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      fontFamily: 'Montserrat-Bold',\r\n      fontWeight: 'bold',\r\n      color: 'black',\r\n      marginBottom: 5,\r\n    },\r\n    role: {\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#0076B9',\r\n      marginBottom: 5,\r\n    },\r\n    message: {\r\n      fontSize: Math.min(width * 0.01, height * 0.03),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      flexWrap: 'wrap',\r\n      marginBottom: 5,\r\n    },\r\n    time: {\r\n      fontSize: Math.min(width * 0.008, height * 0.025),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      alignSelf: 'flex-end',\r\n    },\r\n    ownTime: {\r\n      fontSize: Math.min(width * 0.008, height * 0.025),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      alignSelf: 'flex-start',\r\n    },\r\n    bubbleTail: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: -10,\r\n      width: 0,\r\n      height: 0,\r\n      borderTopWidth: 10,\r\n      borderTopColor: 'transparent',\r\n      borderBottomWidth: 10,\r\n      borderBottomColor: 'transparent',\r\n      borderRightWidth: 10,\r\n      borderRightColor: '#E7DEDE',\r\n    },\r\n    ownBubbleTail: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: -10,\r\n      width: 0,\r\n      height: 0,\r\n      borderTopWidth: 10,\r\n      borderTopColor: 'transparent',\r\n      borderBottomWidth: 10,\r\n      borderBottomColor: 'transparent',\r\n      borderLeftWidth: 10,\r\n      borderLeftColor: 'rgba(0, 118, 185, 0.35)',\r\n    },\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport Svg, { G, Circle, Path, Defs } from \"react-native-svg\";\r\n\r\nconst SendSvg = (props) => {\r\n  const { width, height } = useWindowDimensions();\r\n  const svgSize = Math.min(width * 0.093, height * 0.054) ;\r\n\r\n  return (\r\n    <Svg xmlns=\"http://www.w3.org/2000/svg\" width={svgSize} height={svgSize} fill=\"none\" {...props}>\r\n      <G filter=\"url(#a)\">\r\n        <Circle cx={svgSize / 2} cy={svgSize * 0.46875} r={svgSize * 0.46875} fill=\"#fff\" />\r\n      </G>\r\n      <Path\r\n        stroke=\"#0076B9\"\r\n        strokeWidth={svgSize * 0.05}\r\n        d={`M${svgSize * 0.09375} ${svgSize * 0.46875}L${svgSize * 0.65625} ${svgSize * 0.09375}V${svgSize * 0.84375}Z`}\r\n      />\r\n      <Path\r\n        stroke=\"#0076B9\"\r\n        strokeWidth={svgSize * 0.05}\r\n        d={`M${svgSize * 0.66} ${svgSize * 0.46875}L${svgSize * 0.1} ${svgSize * 0.46875}`}\r\n      />\r\n      <Defs></Defs>\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default SendSvg;\r\n","import React, { useState, useRef } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, TextInput } from 'react-native-web';\r\nimport { useWindowDimensions } from 'react-native-web';\r\nimport useStyles from './messageInput.module';\r\nimport SendSvg from '../../../assets/icons/sendSvg';\r\n\r\nconst MessageInput = ({ curuser, chanInf, channel, onMessageSent }) => {\r\n  const [message, setMessage] = useState('');\r\n  const { width, height } = useWindowDimensions();\r\n  const styles = useStyles();\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const inputRef = useRef(null); \r\n  const handleSend = async () => {\r\n    if (message) {\r\n      try {\r\n        if (channel) {\r\n          const requestBody = {\r\n            currentUsername: curuser,\r\n            message: message,\r\n            channelName: chanInf.channel.name,\r\n          };\r\n    \r\n          const response = await fetch('https://backend-web-service-test.onrender.com/api/channels/add_message', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            setMessage('');\r\n            onMessageSent(); \r\n          } else {\r\n            alert('Не удалось отправить сообщение');\r\n          }\r\n        } else {\r\n          // Use custom API endpoint for direct messages\r\n          const requestBody = {\r\n            currentUsername: curuser,\r\n            otherUsername: chanInf,\r\n            message: message,\r\n          };\r\n    \r\n          const response = await fetch('https://backend-web-service-test.onrender.com/api/chats/add_message', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            setMessage('');\r\n            onMessageSent();\r\n          } else {\r\n            alert('Не удалось отправить сообщение');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        alert('Ошибка отправки:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        ref={inputRef}\r\n        style={styles.input}\r\n        placeholder=\"Сообщение\"\r\n        value={message}\r\n        onChangeText={setMessage}\r\n        multiline\r\n        numberOfLines={4}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <TouchableOpacity style={styles.sendButton} onPress={handleSend}>\r\n        <SendSvg />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n          flexDirection: 'row',\r\n          alignItems: 'flex-end',\r\n          paddingVertical: 20,\r\n        },\r\n        input: {\r\n          flex: 1,\r\n          height: Math.min(width * 0.03, height * 0.055), \r\n          fontSize:  Math.min(width * 0.01, height * 0.03),\r\n          paddingLeft: 40,\r\n          paddingVertical: 5,\r\n          borderRadius: 10,\r\n          backgroundColor: '#FFFFFF',\r\n          color: '#000000',\r\n          boxShadow: '2px 2px 2px rgba(0, 0, 0, 1)',\r\n          fontFamily: 'Montserrat-Regular',\r\n          alignSelf: 'flex-start',\r\n          marginRight: 30\r\n        },\r\n        sendButton: {\r\n          alignSelf: 'flex-end',\r\n          marginLeft: 30,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          transform: [{ rotate: '180deg' }],\r\n        },\r\n      });\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView,  ActivityIndicator  } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ForwardMessage from '../components/forwardMessage/forwardMessage';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { setProfileNickname, getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ChatScreen({ navigation, route }) {\r\n  const { chatUser } = route.params;\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user, storeCurrentScreen } = useContext(AuthContext);\r\n  const { logout } = useContext(AuthContext);\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatData, setChatData] = useState([]);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n\r\n\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://backend-web-service-test.onrender.com/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setShowPopup(false);\r\n        alert('Канал создан');\r\n        window.location.reload();\r\n      } else {\r\n        alert('Не удалось создать канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  const [shouldFetchChatData, setShouldFetchChatData] = useState(true);\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      setShouldFetchChatData(true);\r\n    }, [])\r\n  );\r\n  \r\n  useEffect(() => {\r\n    if (shouldFetchChatData) {\r\n      fetchChatData()\r\n        .then(() => setShouldFetchChatData(false))\r\n        .catch((error) =>  alert('Ошибка при подключении к серверу:', error))\r\n    }\r\n  }, [shouldFetchChatData]);\r\n  \r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setShouldFetchChatData(true); \r\n    }, 1000);\r\n  \r\n    return () => clearInterval(intervalId); \r\n  }, []);\r\n  \r\n  const fetchChatData = async () => {\r\n    const firstUser = user.name;\r\n    const secondUser = chatUser.name;\r\n    const url = `https://backend-web-service-test.onrender.com/api/chats/usernames?first_user=${firstUser}&second_user=${secondUser}`;\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const chatData = await response.json();\r\n        setChatData(chatData);\r\n        console.log(chatData)\r\n      } else {\r\n        throw new Error('Ошибка при подгрузке чата, возможно его еще не существует');\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  };\r\n  \r\n  const handleMessageSent = () => {\r\n    setShouldFetchChatData(true); \r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    logout();\r\n    window.location.reload();\r\n  }\r\n \r\n\r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке никнейма:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadChatMessages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveChatMessages();\r\n  }, [messages]);\r\n\r\n\r\n  const imageSource = selectedImage || (user && user.image);\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт',\r\n    },\r\n    {\r\n      onPress: handleLogout,\r\n      text: 'Выйти',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  const saveChatMessages = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('chatMessages', JSON.stringify(messages));\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении сообщений чата:', error);\r\n    }\r\n  };\r\n\r\n  const loadChatMessages = async () => {\r\n    try {\r\n      const savedMessages = await AsyncStorage.getItem('chatMessages');\r\n      if (savedMessages) {\r\n        setMessages(JSON.parse(savedMessages));\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при подгрузке сообщений чата:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.barContainer}>\r\n        <SearchBody\r\n          data={{\r\n            avatarUrl: chatUser.image,\r\n            username: chatUser.name,\r\n            onPress: fetchChatData\r\n          }}\r\n        />\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={imageSource} profile={true} />\r\n        <Text style={{ color: '#000000', fontSize: 48, textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.historyContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n          {chatData?.map((message) => {\r\n            return (\r\n              <MessageBody\r\n                key={message.id}\r\n                data={{\r\n                  imageUrl: message.sender?.image,\r\n                  nickname: message.sender.name,\r\n                  message: message.data,\r\n                  date: message.date,\r\n                  own: message.sender?.name === user.name,\r\n                  channel: false,\r\n                  unauth: false,\r\n                  ident: message.id\r\n                }}\r\n                currentUser={user}\r\n              />\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.sendContainer}>\r\n        <MessageInput channel={false} curuser={userText ? userText : user.name} chanInf={chatUser.name} onMessageSent={handleMessageSent}/>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={''}\r\n              type={'nickname'}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <View>\r\n            <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n            <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst SettingsSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={14}\r\n    height={56}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={7} cy={7} r={7} fill=\"#373535\" />\r\n    <Circle cx={7} cy={49} r={7} fill=\"#373535\" />\r\n    <Circle cx={7} cy={28} r={7} fill=\"#373535\" />\r\n  </Svg>\r\n)\r\nexport default SettingsSvg\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView } from 'react-native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport SettingsSvg from '../assets/icons/settingsSvg';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { setProfileNickname, getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\nexport default function ChannelScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n    });\r\n    const { logout } = useContext(AuthContext);\r\n    const { user, storeCurrentScreen} = useContext(AuthContext);\r\n    const [messages, setMessages] = useState([]);\r\n    const { selectedImage } = useContext(ImageContext);\r\n    const [isMember, setIsMember] = useState(false);\r\n    const [isDisable, setIsDisable] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [showSettings, setShowSettings] = useState(true);\r\n    const [userText, setUserText] = useState('');\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n    const [channelText, setChannelText] = useState('');\r\n\r\n\r\n    const [shouldFetchChannelData, setShouldFetchChannelData] = useState(true);\r\n\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://backend-web-service-test.onrender.com/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n                const isCreator = user?.id === channelData.creator?.id;\r\n                const member = channelData.members.find(member => member.user.id === user.id);\r\n                const currentUser = channelData.members.find(member => member.user.id === user.id);\r\n\r\n                if (currentUser) {\r\n                    const { role } = currentUser;\r\n                    if (role) {\r\n                        if (role.admin !== undefined) {\r\n                            setIsAdmin(role.admin);\r\n                        }\r\n                    }\r\n                }\r\n                setIsMember(member);\r\n                setIsDisable(isCreator);\r\n                setChannelData(channelData);\r\n                setChannelText(channelData.channel.name)\r\n                console.log(currentUser)\r\n            } else {\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchProfileNickname();\r\n            setShouldFetchChannelData(true);\r\n            \r\n        }, [])\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (shouldFetchChannelData) {\r\n            fetchChannelData()\r\n                .then(() => setShouldFetchChannelData(false))\r\n                .catch((error) => alert('Не удалось подгрузить данные о канале:', error));\r\n        }\r\n    }, [shouldFetchChannelData]);\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setShouldFetchChannelData(true);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    const handleMessageSent = () => {\r\n        setShouldFetchChannelData(true);\r\n    };\r\n\r\n    const fetchProfileNickname = async () => {\r\n        try {\r\n            const nickname = await getProfileNickname();\r\n            if (nickname && nickname !== userText) {\r\n                setUserText(nickname);\r\n            }\r\n        } catch (error) {\r\n            console.log('Ошибка при подгрузке никнейма:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadChatMessages();\r\n        console.log(channelId);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        saveChatMessages();\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        saveChannelState();\r\n    }, [isMember, showSettings]);\r\n\r\n\r\n\r\n    const isFormValid = inputText.nickname;\r\n    const buttons = [\r\n        {\r\n            onPress: ({ }) => navigation.navigate('Profile'),\r\n            text: 'Мой аккаунт',\r\n        },\r\n        {\r\n            onPress: handleLogout,\r\n            text: 'Выйти',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const handleJoinLeave = async () => {\r\n        try {\r\n            const name = userText || user.name;\r\n            const channelName = channelText;\r\n            const apiUrl = isMember\r\n                ? `https://backend-web-service-test.onrender.com/api/channels/${channelId}/leave?username=${name}`\r\n                : `https://backend-web-service-test.onrender.com/api/channels/join?username=${name}&channel_name=${channelName}`;\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: isMember ? 'DELETE' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                setIsMember((prevIsMember) => !prevIsMember);\r\n                alert(isMember ? 'Вы покинули канал' : 'Вы присоединились к каналу');\r\n                window.location.reload();\r\n            } else {\r\n                alert(isMember ? 'Не удалось покинуть канал' : 'Не удалось присоединиться к каналу');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        window.location.reload();\r\n      }\r\n\r\n    const saveChannelState = async () => {\r\n        try {\r\n            const channelState = {\r\n                isMember,\r\n                showSettings,\r\n            };\r\n            await AsyncStorage.setItem('channelState', JSON.stringify(channelState));\r\n        } catch (error) {\r\n            console.error('Не удалось сохранить состояние канала:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const saveChatMessages = async () => {\r\n        try {\r\n            await AsyncStorage.setItem('chatMessages', JSON.stringify(messages));\r\n        } catch (error) {\r\n            console.error('Не удалось сохранить сообщения:', error);\r\n        }\r\n    };\r\n    const imageSource = selectedImage || (user && user.image);\r\n    const loadChatMessages = async () => {\r\n        try {\r\n            const savedMessages = await AsyncStorage.getItem('chatMessages');\r\n            if (savedMessages) {\r\n                setMessages(JSON.parse(savedMessages));\r\n            }\r\n        } catch (error) {\r\n            console.error('Не удалось подгрузить сообщения:', error);\r\n        }\r\n    };\r\n    const handleCreateChannel = async () => {\r\n        try {\r\n            const response = await fetch('https://backend-web-service-test.onrender.com/api/channels/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    username: user.name,\r\n                    channelName: inputText.nickname,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setShowPopup(false);\r\n                alert('Канал создан');\r\n                window.location.reload();\r\n            } else {\r\n                alert('Не удалось создать канал');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelText}</Text>\r\n                <View>\r\n                    <HeaderButton title={isMember ? 'Покинуть' : 'Присоединиться'} onPress={handleJoinLeave} disabled={isDisable} />\r\n                </View>\r\n                {isMember && isAdmin && (\r\n                    <View style={{ marginRight: 20 }}>\r\n                        <TouchableHighlight onPress={({ }) => navigation.navigate('Settings', { channelId: channelData.channel.id })}>\r\n                            <SettingsSvg />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n                )}\r\n            </View>\r\n            <View style={styles.profileContainer}>\r\n                <ShowAvatar imageUrl={imageSource} profile={true} />\r\n                <Text style={{ color: '#000000', fontSize: 48, textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n                {buttons.map((data, index) => (\r\n                    <View style={{ width: '70%' }} key={index}>\r\n                        <BorderButton key={index} data={data} />\r\n                    </View>\r\n                ))}\r\n            </View>\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView\r\n                    style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                    {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: message.sender?.name === user.name,\r\n                                    channel: true,\r\n                                    unauth: false,\r\n                                    ident: message.id\r\n                                }}\r\n                                currentUser={user}\r\n                            />\r\n                        );\r\n                    })}\r\n\r\n                </ScrollView>\r\n            </View>\r\n            {isMember && (\r\n                <View style={styles.sendContainer}>\r\n                    <MessageInput channel={true} curuser={userText ? userText : user.name} chanInf={channelData} onMessageSent={handleMessageSent} />\r\n                </View>\r\n            )}\r\n            <View style={styles.bottomLeft}>\r\n                <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n                    <CreateSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n            <Modal visible={showPopup} transparent={true}>\r\n                <View style={styles.popupContainer}>\r\n                    <Text style={styles.text}>Название канала</Text>\r\n                    <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n                        <DataInput\r\n                            value={inputText.nickname}\r\n                            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n                            placeholder={''}\r\n                            type={'nickname'}\r\n                            flex={true}\r\n                        />\r\n                    </View>\r\n                    <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n                        <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ChangeSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={44}\r\n    height={42}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#373535\"\r\n      d=\"M1 40.444v-8.5l24.5-23 8.5 8-24.5 23.5H1ZM38 12.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n    <Path\r\n      stroke=\"#373535\"\r\n      strokeWidth={1.9}\r\n      d=\"M1 40.444v-8.5l24.5-23 8.5 8-24.5 23.5H1ZM38 12.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default ChangeSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst AdminSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={67}\r\n    height={67}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={33.5} cy={33.5} r={23} stroke=\"#000\" />\r\n  </Svg>\r\n)\r\nexport default AdminSvg \r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst AdminFocusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={67}\r\n    height={67}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={33.5} cy={33.5} r={23} fill=\"#0076B9\" />\r\n    <Circle cx={33.5} cy={33.5} r={23} fill=\"#000\" fillOpacity={0.2} />\r\n    <Circle cx={33.5} cy={33.5} r={23} stroke=\"#000\" />\r\n  </Svg>\r\n)\r\nexport default AdminFocusSvg\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    Image,\r\n    Modal,\r\n} from \"react-native-web\";\r\nimport ChangeSvg from \"../../assets/icons/changeSvg\";\r\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\r\nimport AdminSvg from \"../../assets/icons/adminSvg\";\r\nimport AdminFocusSvg from \"../../assets/icons/adminFocusSvg\";\r\nimport HeaderButton from \"../buttons/headerButton\";\r\nimport DataInput from \"../inputs/textInput/textInput\";\r\nimport AuthContext from \"../../context/AuthContext\";\r\nimport axios from 'axios';\r\nimport useStyles from \"./settingsBody.module\";\r\n\r\n\r\nexport default function SettingsBody({ data }) {\r\n    const { role, name, onPress, containerStyle, creator, channelId } = data;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const { user } = useContext(AuthContext);\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n        role: role, \r\n    });\r\n    const styles = useStyles();\r\n    const [isAdmin, setIsAdmin] = useState(false); \r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const handleDelete = async () => {\r\n        try {\r\n          const url = `https://backend-web-service-test.onrender.com/api/channels/${channelId.id}/leave?username=${name}`;\r\n          const response = await axios.delete(url, {\r\n            auth: {\r\n              username: username,\r\n              password: password\r\n            }\r\n          });\r\n        } catch (error) {\r\n          alert('Ошибка при попытки удаления пользователя:', error);\r\n        }\r\n      };\r\n      \r\n\r\n    const isFormValid = inputText.role;\r\n\r\n\r\n    const handleAdminClick = () => {\r\n        setIsAdmin(!isAdmin);\r\n    };\r\n\r\n    const handleRoleChange = (role) => {\r\n        setInputText({ ...inputText, role: role }); \r\n    };\r\n    const currentUser = channelId.members.find(member => member.user.id === user.id);\r\n    const handleSaveChanges = async () => {\r\n        const url = 'https://backend-web-service-test.onrender.com/api/roles/create';\r\n      \r\n        const requestBody = {\r\n          name: inputText.role,\r\n          isAdmin: isAdmin,\r\n          username: name,\r\n          channelName: channelId.channel.name\r\n        };\r\n      \r\n        try {\r\n            \r\n          const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Basic ${btoa(`${username}:${password}`)}` \r\n            },\r\n            body: JSON.stringify(requestBody)\r\n          });\r\n          if (response.ok) {\r\n\r\n          } else {\r\n            alert('Не удалось создать роль');\r\n          }\r\n        } catch (error) {\r\n          alert('Ошибка при создании роли:', error);\r\n        }\r\n      \r\n        setShowPopup(false);\r\n      };\r\n      \r\n\r\n    return (\r\n        <TouchableOpacity\r\n            style={[\r\n                styles.container,\r\n                containerStyle,\r\n                isHovered && { backgroundColor: \"#E7DEDE\" },\r\n            ]}\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n            <View style={styles.content}>\r\n                {!creator && (\r\n                    <TouchableOpacity onPress={handleDelete}>\r\n                        <DeleteSvg />\r\n                    </TouchableOpacity>\r\n                )}\r\n\r\n                <Text style={styles.username}>{name}</Text>\r\n                <Text style={styles.role}>{inputText.role}</Text>\r\n\r\n                {!creator  && (\r\n                    <TouchableOpacity onPress={() => setShowPopup(true)}>\r\n                        <ChangeSvg />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n\r\n\r\n            <Modal visible={showPopup} transparent={true}>\r\n                <View style={styles.popupContainer}>\r\n                    <Text style={styles.text}>Название роли</Text>\r\n                    <View style={styles.inputContainer}>\r\n                        <DataInput\r\n                            value={inputText.role}\r\n                            setValue={(text) => setInputText({ ...inputText, role: text })}\r\n                            placeholder={\"\"}\r\n                            type={\"nickname\"}\r\n                            flex={true}\r\n                        />\r\n                        <TouchableOpacity style={styles.adminButton} onPress={handleAdminClick}>\r\n                            {isAdmin ? <AdminFocusSvg /> : <AdminSvg />}\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <View >\r\n                        <TouchableOpacity onPress={() => setShowPopup(false)}>\r\n                            <HeaderButton title={\"Назначить\"} onPress={handleSaveChanges} disabled={!isFormValid} />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\n\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            borderRadius: 26,\r\n            paddingVertical: 12,\r\n            paddingHorizontal: 16,\r\n    \r\n        },\r\n        text: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            color: '#000000',\r\n            fontSize:Math.min(width * 0.012, height * 0.032),\r\n            textAlign: 'center',\r\n            marginBottom: 13\r\n        },\r\n        content: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            flex: 1\r\n        },\r\n        username: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            fontSize:Math.min(width * 0.012, height * 0.032),\r\n            color: \"#000000\",\r\n            marginLeft: 40,\r\n        },\r\n        role: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            fontSize: Math.min(width * 0.012, height * 0.032),\r\n            color: \"#0076B9\",\r\n            marginLeft: 40,\r\n            marginRight: 40\r\n        },\r\n        inputContainer: {\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n        },\r\n        popupContainer: {\r\n            backgroundColor: '#E7DEDE',\r\n            borderRadius: 35,\r\n            padding: 20,\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 2, height: 2 },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 7,\r\n            position: 'absolute',\r\n            top: '50%', \r\n            left: '50%', \r\n            transform: [{ translateX: '-50%' }, { translateY: '-50%' }], \r\n            width: '30%',\r\n            height: '30%',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column', \r\n        },\r\n    });\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport SettingsBody from '../components/settingsBody/settingsBody';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n\r\n\r\nexport default function SettingsScreen({ navigation, route }) {\r\n  const { channelId } = route.params;\r\n  const { user, storeCurrentScreen } = useContext(AuthContext);\r\n  const styles = useStyles();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [role, setRole] = useState('');\r\n  \r\n  const [isEditingNickname, setIsEditingNickname] = useState(false);\r\n  const [channelData, setChannelData] = useState([]);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchChannelData();\r\n    }, [])\r\n  );\r\n  const [inputText, setInputText] = useState({\r\n    nickname: channelData.name || 'a',\r\n  });\r\n  const fetchChannelData = async () => {\r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/channels/${channelId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const channelData = await response.json();\r\n        \r\n        setChannelData(channelData);\r\n        setInputText((prevInputText) => ({\r\n          ...prevInputText,\r\n          nickname: channelData.channel.name || 'a',\r\n        }));\r\n        const isCreator = user?.id === channelData.creator?.id;\r\n        setIsAdmin(isCreator);\r\n      } else {\r\n        alert('Не удалось получить данные о канале, возможно он больше не существует');\r\n\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  const handleDeleteChannel = async () => {\r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/channels/delete/${channelId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        alert('Канал удален');\r\n        navigation.navigate('MainAuth'); \r\n      } else {\r\n        alert('Не удалось удалить канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleRoleChange = async (newRole) => {\r\n    setRole(newRole);\r\n    try {\r\n      await AsyncStorage.setItem('role', newRole);\r\n    } catch (error) {\r\n      console.log('Ошибка сохранения роли:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddButtonClick = async () => {\r\n    if (isEditingNickname) {\r\n      setIsEditingNickname(false);\r\n      try {\r\n        const response = await fetch(`https://backend-web-service-test.onrender.com/api/channels/${channelId}/update?name=${encodeURIComponent(inputText.nickname)}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n  \r\n        if (response.ok) {\r\n          const channelResponse = await response.json();\r\n          const updatedChannels = user.channels.map((channel) => {\r\n          if (channel.id === channelResponse.id) {\r\n            return { ...channel, name: channelResponse.name };\r\n          }\r\n          return channel;\r\n        });\r\n\r\n        const updatedUser = {\r\n          ...user,\r\n          channels: updatedChannels,\r\n        };\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n\r\n        } else {\r\n          alert('Не удалось обновить имя канала');\r\n        }\r\n      } catch (error) {\r\n        alert('Ошибка при подключении к серверу:', error);\r\n      }\r\n    } else {\r\n      setIsEditingNickname(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerSettings}>\r\n      <View style={styles.channNameContainer}>\r\n        <View style={styles.dataInputContainer}>\r\n          <DataInput\r\n            value={inputText.nickname}\r\n            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n            placeholder={\"\"}\r\n            type={\"nickname\"}\r\n            flex={false}\r\n            editable={isEditingNickname}\r\n          />\r\n        </View>\r\n        <TouchableHighlight onPress={handleAddButtonClick}>\r\n          <AddSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.settingsContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n        {channelData.members?.map((channel) => (\r\n            <SettingsBody\r\n             \r\n              data={{\r\n                key: channel.id,\r\n                name: channel.user.name,\r\n                role: channel.role.name,\r\n                onRoleChange: handleRoleChange,\r\n                creator: channel.role.creator,\r\n                channelId: channelData\r\n              }}\r\n              \r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Channel', { channelId: channelData.id })}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <HeaderButton title={'Удалить канал'} onPress={handleDeleteChannel} disabled={!isAdmin} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView, TextInput } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\n\r\nexport default function ChannelUnauthScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [shouldUseFocusEffect, setShouldUseFocusEffect] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setShouldUseFocusEffect(false);\r\n    }, [channelId]);\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchChannelData();\r\n        }, [channelId])\r\n    );\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n\r\n    const scrollViewRef = useRef(null);\r\n    const [isAtBottom, setIsAtBottom] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (channelData?.messages?.length > 0 && isAtBottom) {\r\n            scrollViewRef.current.scrollToEnd({ animated: true });\r\n        }\r\n    }, [channelData?.messages, isAtBottom]);\r\n\r\n    const handleContentSizeChange = () => {\r\n        const isScrolledToBottom =\r\n            scrollViewRef.current &&\r\n            scrollViewRef.current.contentOffset &&\r\n            scrollViewRef.current.contentOffset.y + scrollViewRef.current.layoutMeasurement.height >=\r\n            scrollViewRef.current.contentSize.height;\r\n\r\n        setIsAtBottom(isScrolledToBottom);\r\n    };\r\n    const [channelText, setChannelText] = useState('');\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://backend-web-service-test.onrender.com/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n\r\n                setChannelData(channelData);\r\n                setChannelText(channelData.channel.name)\r\n            } else {\r\n                alert('Не удалось получить данные о канале, возможно он больше не существует');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n    if (!channelData) {\r\n        return null; \r\n      }\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelText}</Text>\r\n                <View>\r\n                    <HeaderButton title={'Присоединиться'} onPress={() => navigation.navigate('Auth')} />\r\n                </View>\r\n            </View >\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView ref={scrollViewRef} onContentSizeChange={handleContentSizeChange} style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: false,\r\n                                    channel: true,\r\n                                    unauth: true\r\n                                }}\r\n                              \r\n                            />\r\n                        );\r\n                    })}\r\n                </ScrollView>\r\n\r\n            </View>\r\n            <View style = {styles.bottomLeft}>\r\n             <TouchableHighlight onPress={() => navigation.navigate('Auth')}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n        </View>\r\n        </View>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport GreetingsScreen from './screens/GreetingsScreen';\nimport MainUnauthScreen from './screens/MainUnauthScreen';\nimport AuthScreen from './screens/AuthScreen';\nimport RegScreen from './screens/RegScreen';\nimport ForgotScreen from './screens/ForgotScreen';\nimport HeaderLogoSvg from './assets/icons/headerLogoSvg';\nimport HeaderButton from './components/buttons/headerButton';\nimport { Button, TouchableHighlight, View, useWindowDimensions } from 'react-native-web';\nimport SearchInput from './components/inputs/searchInput/searchInput';\nimport SearchBody from './components/searchBodies/searchBody';\nimport MainAuthScreen from './screens/MainAuthScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ChangeEmailScreen from './screens/ChangeEmailScreen';\nimport ChangePasswordScreen from './screens/ChangePasswordScreen';\nimport ChatScreen from \"./screens/ChatScreen\";\nimport ChannelScreen from './screens/ChannelScreen';\nimport SettingsScreen from './screens/SettingsScreen';\nimport ChannelUnauthScreen from './screens/ChannelUnauthScreen';\nimport { ImageProvider } from './context/ImageContext';\nimport { AuthProvider } from './context/AuthContext';\nimport {MessageProvider} from './context/MessageContext';\nimport * as Font from 'expo-font';\n\n\nconst loadFonts = async () => {\n  await Font.loadAsync({\n    'Montserrat-Regular': require('./assets/fonts/Montserrat-Regular.ttf'),\n    'Montserrat-Italic': require('./assets/fonts/Montserrat-Italic.ttf'),\n    'Montserrat-Bold': require('./assets/fonts/Montserrat-Bold.ttf'),\n  });\n};\n\nloadFonts()\n  .then(() => {\n    renderApp();\n  })\n  .catch((error) => {\n    console.error('Error loading fonts:', error);\n  });\nexport default function App( ) {\nconst Stack = createStackNavigator();\nconst [searchValue, setSearchValue] = useState('');\nconst [searchResults, setSearchResults] = useState([]);\nconst username = 'admin';\nconst password = 'root';\nconst [resultsUnauth, setResultsUnauth] = useState([]);\nconst [results, setResults] = useState([]);\nconst { width, height } = useWindowDimensions();\n\n\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n\n      const channelResponse = await fetch('http://localhost:8080/api/channels', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\n        },\n      });\n\n      if (channelResponse.ok) {\n        const channelData = await channelResponse.json();\n        const formattedResults = [];\n        const unauthResults = [];\n\n        for (let i = 0; i < channelData.length; i++) {\n          const channel = channelData[i];\n\n          formattedResults.push({\n            name: channel.name,\n            onPress: ({ navigation }) =>\n            navigation.navigate('Channel', { channelId: channel.id }),\n            avatarUrl: null\n          });\n\n          unauthResults.push({\n            name: channel.name,\n            onPress: ({ navigation }) =>\n            navigation.navigate('ChannelUnauth', { channelId: channel.id }),\n            avatarUrl: null\n          });\n        }\n\n        const userResponse = await fetch('http://localhost:8080/api/users', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\n          },\n        });\n\n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n\n          for (let i = 0; i < userData.length; i++) {\n            const user = userData[i];\n            formattedResults.push({\n              name: user.name,\n              onPress: ({ navigation }) =>\n              navigation.navigate('Chat', { chatUser: user }),\n              avatarUrl: user.image,\n            });\n          }\n        } else {\n          console.log('Failed to fetch user data');\n        }\n\n        setResults(formattedResults);\n        setResultsUnauth(unauthResults);\n      } else {\n        console.log('Failed to fetch channel data');\n      }\n    } catch (error) {\n      console.log('Error fetching data:', error);\n    }\n  };\n\n  fetchData();\n}, []);\n\n\n  \n\n\nconst screens = [\n  {\n    name: 'Greetings',\n    component: GreetingsScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n        <HeaderButton\n          style={{ marginRight: 20 , alignItems: 'center'}}\n          title={\"Войти\"}\n          onPress={() => navigation.navigate('Auth')}\n        />\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 90,\n        borderBottomWidth: 1,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'MainUnauth',\n    component: MainUnauthScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight  onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n        \n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={resultsUnauth}\n            navigation={navigation}\n            unauth={true}\n            />\n          <View style={{ paddingHorizontal: width* 0.1 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'ChannelUnauth',\n    component: ChannelUnauthScreen,\n    options: ({ navigation, route }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={resultsUnauth}\n            unauth={true}\n            navigation={navigation}\n            />\n            <View style={{ paddingHorizontal: width* 0.1 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Settings',\n    component: SettingsScreen,\n    options: ({ navigation, route }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n\n  {\n    name: 'MainAuth',\n    component: MainAuthScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Chat',\n    component: ChatScreen,\n    options: ({ navigation, route }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Channel',\n    component: ChannelScreen,\n    options: ({ navigation, route }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n\n  {\n    name: 'Profile',\n    component: ProfileScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n          <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'ChangePassword',\n    component: ChangePasswordScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'ChangeEmail',\n    component: ChangeEmailScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            />\n              <View style={{ paddingHorizontal: 30 }} />\n        </View>\n\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Auth',\n    component: AuthScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            unauth={true}\n            />\n           <View style={{ paddingHorizontal: width* 0.1 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Reg',\n    component: RegScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            unauth={true}\n            />\n           <View style={{ paddingHorizontal: width* 0.1 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n  {\n    name: 'Forgot',\n    component: ForgotScreen,\n    options: ({ navigation }) => ({\n      title: \"\",\n      headerLeft: () => (\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\n        </TouchableHighlight>\n      ),\n      headerRight: () => (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\n            setValue={setSearchValue}\n            results={results}\n            navigation={navigation}\n            unauth={true}\n            />\n           <View style={{ paddingHorizontal: width* 0.1 }} />\n          <HeaderButton\n            style={{ marginLeft: 10 }}\n            title={\"Войти\"}\n            onPress={() => navigation.navigate('Auth')}\n          />\n        </View>\n      ),\n      headerShadowVisible: true,\n      headerStyle: {\n        height: 100,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n        backgroundColor: '#fff',\n        elevation: 3,\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        paddingHorizontal: 20\n      },\n    }),\n  },\n];\n\n\n  return (\n    <ImageProvider>\n    <AuthProvider >\n      <MessageProvider>\n      <NavigationContainer>\n      \n          <Stack.Navigator >\n            {screens.map((screen) => (\n              <Stack.Screen key={screen.name} {...screen} />\n            ))}\n          </Stack.Navigator>\n       \n      </NavigationContainer>\n      </MessageProvider>\n    </AuthProvider>\n    </ImageProvider>\n\n  );\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [124], () => (__webpack_require__(8029)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["props","_jsxs","Svg","_objectSpread","xmlns","width","height","fill","children","_jsx","Path","d","fillOpacity","HeaderButton","_ref","title","onPress","disabled","styles","buttonWidth","_useWindowDimensions","useWindowDimensions","buttonColor","StyleSheet","button","backgroundColor","borderRadius","minWidth","paddingVertical","paddingHorizontal","alignSelf","marginVertical","marginRight","flex","buttonText","fontFamily","color","fontSize","Math","min","textAlign","useStyles","TouchableHighlight","style","Text","_useState","useState","window","innerWidth","_useState2","_slicedToArray","setWindowWidth","_useState3","innerHeight","_useState4","setWindowHeight","useEffect","handleResize","addEventListener","removeEventListener","container","justifyContent","alignItems","headerButton","marginTop","containerMain","bottomLeft","position","bottom","left","topLeft","top","textContainer","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","messageContainer","text","inputContainer","paddingTop","ImageContext","createContext","ImageProvider","selectedImage","setSelectedImage","storedImage","localStorage","getItem","JSON","parse","Provider","value","updateSelectedImage","image","setItem","stringify","AuthContext","AuthProvider","isLoggedIn","setIsLoggedIn","user","setUser","useContext","checkLoginStatus","_ref2","_asyncToGenerator","isLoggedInValue","AsyncStorage","userData","error","console","apply","arguments","login","_ref3","_x","logout","_ref4","getCurrentScreen","_ref5","authContextValue","updateUser","updatedUser","storeCurrentScreen","screenName","navigation","_useContext","fetchCurrentScreen","navigate","View","LogoSvg","Circle","cx","cy","r","stroke","strokeWidth","ShowAvatar","imageUrl","profile","containerWidth","imageWidth","imageHeight","nonePhotoWidth","nonePhotoHeight","flexDirection","round","borderWidth","borderColor","nonePhoto","info","nickname","fontWeight","marginBottom","dateOfBirth","startsWith","Image","source","uri","base64Image","PlusSvg","transform","scale","renderAvatar","SearchBody","data","_React$useState","React","_React$useState2","isHovered","setIsHovered","avatarUrl","username","channelName","containerStyle","main","id","rowContainer","avatarContainer","marginLeft","deleteContainer","onMouseEnter","onMouseLeave","fetch","method","headers","btoa","name","then","response","ok","alert","location","reload","catch","DeleteSvg","SearchInput","setValue","unauth","_objectWithoutProperties","_excluded","isFocused","setIsFocused","isDropdownVisible","setIsDropdownVisible","isComponentFocused","useIsFocused","navigationt","useNavigation","zIndex","icon","dismissIcon","right","translateY","dropdown","maxHeight","overflowY","boxShadow","input","paddingLeft","paddingRight","password","_useState5","_useState6","results","setResults","_useState7","_useState8","resultsUnauth","setResultsUnauth","fetchData","channelResponse","channelData","json","formattedResults","unauthResults","_loop","channel","i","push","channelId","length","userResponse","_loop2","chatUser","filteredResults","filter","result","toLowerCase","includes","SearchSvg","TextInput","placeholderTextColor","onFocus","onChangeText","TouchableOpacity","onPressIn","CrossSvg","ScrollView","map","index","MainUnauthScreen","CreateSvg","DataInput","inputMask","type","secureTextEntry","autoCompleteType","maxLength","keyboardType","inputWidth","email","inputText","setInputText","isFormValid","useFocusEffect","placeholder","borderBottomWidth","borderBottomColor","test","requestBody","body","errorData","errorMessage","message","newPassword","confirmPassword","code","receivedCode","setReceivedCode","getUserById","updatePassword","userId","queryParams","URLSearchParams","new_password","toString","_x2","handleResetPassword","encodeURIComponent","Authorization","channNameContainer","overflow","dataInputContainer","nicknameContainer","containerSettings","barContainer","barChanContainer","barText","settingsContainer","sendContainer","forwardContainer","historyContainer","profileContainer","profileSettingsContainer","paddingBottom","translateX","popupContainer","BorderButton","borderTopWidth","own","from","avatar","messageBox","borderLeftWidth","borderLeftColor","maxWidth","borderTopRightRadius","borderBottomRightRadius","ownMessageBox","ownNickname","flexWrap","ownMessage","bubbleTail","borderStyle","borderRightWidth","borderTopColor","borderRightColor","rotate","showDeleteButton","setShowDeleteButton","user_id","MessageContext","MessageProvider","forwardedMessages","setForwardedMessages","storedMessages","addForwardedMessage","prevMessages","concat","_toConsumableArray","clearForwardedMessages","_setProfileNickname","log","getProfileNickname","_getProfileNickname","_setEmail","_getEmail","MainAuthScreen","_user$savedMessages","_user$savedMessages2","showPopup","setShowPopup","userText","setUserText","updateUserCallback","useCallback","fetchUserData","fetchProfileNickname","handleClearForwardedMessages","buttons","_objectDestructuringEmpty","handleCreateChannel","_ref6","scrollbarWidth","channels","chats","chat","recipient","sender","savedMessages","_message$sender","_message$sender2","_message$sender3","_message$sender4","ForwardMessage","Modal","visible","transparent","G","clipPath","Defs","ClipPath","ImageViewer","placeholderImageSource","isAvatar","Avatarimage","imageSource","ChangeAvatar","setRequestPermission","_useContext2","cameraStatus","ImagePicker","requestMediaLibraryPermissionsAsync","status","pickImageAsync","launchImageLibraryAsync","allowsEditing","quality","canceled","uploadImage","imageAsset","formData","FormData","blob","append","apiUrl","axios","openCamera","requestCameraPermissionsAsync","granted","launchCameraAsync","assets","CameraSvg","Rect","x","y","rx","strokeLinecap","NicknameInput","inputHeight","ProfileScreen","fetchEmail","getEmail","emailContainerRef","useRef","setEmailFontSize","showInputField","setShowInputField","_useState9","_useState10","setRotationDeg","handleEmailLayout","fetchSavedNickname","emailContainerWidth","current","offsetWidth","desiredMaxFontSize","emailFontSize","savedNickname","handleAddSvgPress","setProfileNickname","updateName","profileNickname","addSvgStyle","transition","newName","AddSvg","textOverflow","whiteSpace","ref","onLayout","BackSvg","changeEmail","setEmail","handleUpdatePassword","passwordRegex","last_password","strokeOpacity","currentUser","role","date","ident","time","Date","toLocaleTimeString","hour","minute","ownContainer","borderTopLeftRadius","borderBottomLeftRadius","box","forward","ownForward","ownTime","ownBubbleTail","handleForwardPress","prevState","messageId","forwardIcon","ForwardFocusSvg","ForwardSvg","messageBoxStyles","svgSize","curuser","chanInf","onMessageSent","setMessage","sendButton","inputRef","handleSend","currentUsername","otherUsername","multiline","numberOfLines","onKeyPress","event","key","shiftKey","preventDefault","SendSvg","ChatScreen","route","params","messages","setMessages","chatData","setChatData","_useState11","_useState12","shouldFetchChatData","setShouldFetchChatData","fetchChatData","intervalId","setInterval","clearInterval","url","Error","loadChatMessages","saveChatMessages","_ref7","MessageBody","MessageInput","ChannelScreen","_channelData$messages","isMember","setIsMember","isDisable","setIsDisable","isAdmin","setIsAdmin","_useState13","_useState14","showSettings","_useState15","_useState16","_useState17","_useState18","setChannelData","_useState19","_useState20","channelText","setChannelText","_useState21","_useState22","shouldFetchChannelData","setShouldFetchChannelData","fetchChannelData","_channelData$creator","isCreator","creator","member","members","find","undefined","admin","saveChannelState","handleLogout","handleJoinLeave","prevIsMember","channelState","_ref8","_ref9","_ref10","SettingsSvg","_matchingMember$role","senderId","matchingMember","SettingsBody","content","handleDelete","auth","handleSaveChanges","ChangeSvg","adminButton","AdminFocusSvg","AdminSvg","SettingsScreen","_channelData$members","setRole","isEditingNickname","setIsEditingNickname","prevInputText","handleDeleteChannel","handleRoleChange","newRole","handleAddButtonClick","updatedChannels","editable","onRoleChange","ChannelUnauthScreen","_channelData$messages2","setShouldUseFocusEffect","scrollViewRef","isAtBottom","setIsAtBottom","scrollToEnd","animated","onContentSizeChange","isScrolledToBottom","contentOffset","layoutMeasurement","contentSize","App","Stack","createStackNavigator","searchValue","setSearchValue","screens","component","GreetingsScreen","options","headerLeft","HeaderLogoSvg","headerRight","headerShadowVisible","headerStyle","_ref11","_ref12","_ref13","ChangePasswordScreen","_ref14","ChangeEmailScreen","_ref15","AuthScreen","_ref16","RegScreen","_ref17","ForgotScreen","_ref18","NavigationContainer","Navigator","screen","Screen","Font","loadAsync","require","loadFonts","renderApp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}