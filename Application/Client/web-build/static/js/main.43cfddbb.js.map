{"version":3,"file":"static/js/main.43cfddbb.js","mappings":"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","sources":["assets/icons/logoSvg.js","components/buttons/headerButton.js","components/buttons/headerButton.module.js","screens/styles/greetingsScreen.module.js","context/ImageContext.js","context/AuthContext.js","screens/GreetingsScreen.js","assets/icons/createSvg.js","assets/icons/searchSvg.js","assets/icons/crossSvg.js","assets/icons/plusSvg.js","components/Avatar/ShowAvatar/showAvatar.js","components/Avatar/ShowAvatar/showAvatar.module.js","assets/icons/deleteSvg.js","components/searchBodies/searchBody.js","components/searchBodies/searchBodies.module.js","components/inputs/searchInput/searchInput.js","components/inputs/searchInput/searchInput.modules.js","screens/MainUnauthScreen.js","components/inputs/textInput/textInput.js","components/inputs/textInput/textInput.module.js","screens/AuthScreen.js","screens/RegScreen.js","screens/ForgotScreen.js","assets/icons/headerLogoSvg.js","screens/styles/mainAuthScreen.module.js","components/buttons/borderButton.js","components/buttons/borderButton.module.js","components/forwardMessage/forwardMessage.js","components/forwardMessage/forwardMessage.module.js","context/AsyncStorageUtil.js","screens/MainAuthScreen.js","assets/icons/cameraSvg.js","components/ImageViewer/ImageViewer.js","components/ImageViewer/ImageViewer.module.js","components/Avatar/ChangeAvatar/changeAvatar.js","components/Avatar/ChangeAvatar/changeAvatar.module.js","assets/icons/backSvg.js","assets/icons/addSvg.js","components/inputs/nicknameInput/nicknameInput.js","components/inputs/nicknameInput/nicknameInput.module.js","screens/ProfileScreen.js","screens/ChangeEmailScreen.js","screens/ChangePasswordScreen.js","assets/icons/forwardSvg.js","assets/icons/forwardFocusSvg.js","context/MessageContext.js","components/messageBody/messageBody.js","components/messageBody/messageBody.module.js","assets/icons/sendSvg.js","components/inputs/messageInput/messageInput.js","components/inputs/messageInput/messageInput.module.js","screens/ChatScreen.js","assets/icons/settingsSvg.js","screens/ChannelScreen.js","assets/icons/changeSvg.js","assets/icons/adminSvg.js","assets/icons/adminFocusSvg.js","components/settingsBody/settingsBody.js","components/settingsBody/settingsBody.module.js","screens/SettingsScreen.js","screens/ChannelUnauthScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst LogoSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={588}\r\n    height={285}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#000\"\r\n      d=\"M92.94 177V87.4h12.8v78.464h48.512V177H92.94Zm74.208 0v-67.84h12.288V177h-12.288Zm6.144-80.896c-2.389 0-4.395-.768-6.016-2.304-1.536-1.536-2.304-3.413-2.304-5.632 0-2.304.768-4.224 2.304-5.76 1.621-1.536 3.627-2.304 6.016-2.304 2.389 0 4.352.768 5.888 2.304 1.621 1.45 2.432 3.285 2.432 5.504 0 2.304-.768 4.267-2.304 5.888-1.536 1.536-3.541 2.304-6.016 2.304Zm65.83 12.416c5.547 0 10.411 1.067 14.592 3.2 4.267 2.133 7.595 5.376 9.984 9.728 2.389 4.352 3.584 9.856 3.584 16.512V177h-12.288v-37.632c0-6.571-1.621-11.52-4.864-14.848-3.157-3.328-7.637-4.992-13.44-4.992-4.352 0-8.149.853-11.392 2.56-3.243 1.707-5.76 4.224-7.552 7.552-1.707 3.328-2.56 7.467-2.56 12.416V177h-12.288v-67.84h11.776v18.304l-1.92-4.864c2.219-4.437 5.632-7.893 10.24-10.368 4.608-2.475 9.984-3.712 16.128-3.712Zm60.885 52.096.256-15.744 39.04-35.712h14.848l-29.952 29.44-6.656 5.632-17.536 16.384ZM290.023 177V82.024h12.288V177h-12.288Zm51.84 0-26.624-33.024 7.936-9.856L356.967 177h-15.104Zm27.035 0v-67.84h12.288V177h-12.288Zm6.144-80.896c-2.389 0-4.395-.768-6.016-2.304-1.536-1.536-2.304-3.413-2.304-5.632 0-2.304.768-4.224 2.304-5.76 1.621-1.536 3.627-2.304 6.016-2.304 2.389 0 4.352.768 5.888 2.304 1.621 1.45 2.432 3.285 2.432 5.504 0 2.304-.768 4.267-2.304 5.888-1.536 1.536-3.541 2.304-6.016 2.304Zm65.83 12.416c5.547 0 10.411 1.067 14.592 3.2 4.267 2.133 7.595 5.376 9.984 9.728 2.389 4.352 3.584 9.856 3.584 16.512V177h-12.288v-37.632c0-6.571-1.621-11.52-4.864-14.848-3.157-3.328-7.637-4.992-13.44-4.992-4.352 0-8.149.853-11.392 2.56-3.243 1.707-5.76 4.224-7.552 7.552-1.707 3.328-2.56 7.467-2.56 12.416V177h-12.288v-67.84h11.776v18.304l-1.92-4.864c2.219-4.437 5.632-7.893 10.24-10.368 4.608-2.475 9.984-3.712 16.128-3.712Zm80.597 94.08a62.083 62.083 0 0 1-18.176-2.688c-5.803-1.707-10.539-4.181-14.208-7.424l5.888-9.472c3.157 2.731 7.04 4.864 11.648 6.4 4.608 1.621 9.429 2.432 14.464 2.432 8.021 0 13.909-1.877 17.664-5.632 3.755-3.755 5.632-9.472 5.632-17.152v-14.336l1.28-13.44-.64-13.568v-18.56h11.648v58.624c0 11.947-2.987 20.736-8.96 26.368-5.973 5.632-14.72 8.448-26.24 8.448Zm-1.536-28.416c-6.571 0-12.459-1.365-17.664-4.096-5.12-2.816-9.216-6.699-12.288-11.648-2.987-4.949-4.48-10.667-4.48-17.152 0-6.571 1.493-12.288 4.48-17.152 3.072-4.949 7.168-8.789 12.288-11.52 5.205-2.731 11.093-4.096 17.664-4.096 5.803 0 11.093 1.195 15.872 3.584 4.779 2.304 8.576 5.888 11.392 10.752 2.901 4.864 4.352 11.008 4.352 18.432 0 7.339-1.451 13.44-4.352 18.304-2.816 4.864-6.613 8.533-11.392 11.008-4.779 2.389-10.069 3.584-15.872 3.584Zm1.408-10.752c4.523 0 8.533-.939 12.032-2.816 3.499-1.877 6.229-4.48 8.192-7.808 2.048-3.328 3.072-7.168 3.072-11.52 0-4.352-1.024-8.192-3.072-11.52-1.963-3.328-4.693-5.888-8.192-7.68-3.499-1.877-7.509-2.816-12.032-2.816s-8.576.939-12.16 2.816c-3.499 1.792-6.272 4.352-8.32 7.68-1.963 3.328-2.944 7.168-2.944 11.52 0 4.352.981 8.192 2.944 11.52 2.048 3.328 4.821 5.931 8.32 7.808 3.584 1.877 7.637 2.816 12.16 2.816Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M228.523 201.561a5 5 0 0 1 1.447-7.4l11.54-6.661a5 5 0 0 1 6.83 1.83l50.17 86.906a4.732 4.732 0 0 1-7.834 5.27l-62.153-79.945Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M228.523 201.561a5 5 0 0 1 1.447-7.4l11.54-6.661a5 5 0 0 1 6.83 1.83l50.17 86.906a4.732 4.732 0 0 1-7.834 5.27l-62.153-79.945Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M256.664 213.001A139 139 0 0 1 .512 150.914 138.998 138.998 0 0 1 168.54 3.175a139.003 139.003 0 0 1 73.756 42.814l-24.723 22.262A105.735 105.735 0 0 0 96.909 42.008 105.731 105.731 0 1 0 228.502 195.29l28.162 17.711Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M256.664 213.001A139 139 0 0 1 .512 150.914 138.998 138.998 0 0 1 168.54 3.175a139.003 139.003 0 0 1 73.756 42.814l-24.723 22.262A105.735 105.735 0 0 0 96.909 42.008 105.731 105.731 0 1 0 228.502 195.29l28.162 17.711Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default LogoSvg\r\n","import useStyles from \"./headerButton.module\";\r\nimport { Text, TouchableHighlight} from 'react-native-web';\r\n\r\n\r\nexport default function HeaderButton({title, onPress, disabled}) {\r\n  const styles = useStyles(disabled);\r\n \r\n  return (\r\n    <TouchableHighlight style={styles.button} onPress={onPress} disabled={disabled}>\r\n      \r\n        <Text style={styles.buttonText}>{title}</Text>\r\n      \r\n    </TouchableHighlight>\r\n  );\r\n} ","import { StyleSheet, useWindowDimensions } from 'react-native';\r\n\r\nexport default function useStyles(disabled) {\r\n  const buttonWidth = width * 0.1;\r\n  const { width, height } = useWindowDimensions();\r\n  const buttonColor = disabled ? 'rgba(0, 0, 0, 0.35)' : 'rgba(0, 118, 185, 0.35)';\r\n\r\n  return StyleSheet.create({\r\n    button: {\r\n      backgroundColor: buttonColor,\r\n      borderRadius: 14,\r\n      minWidth: buttonWidth,\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 20,\r\n      alignSelf: 'right',\r\n      marginVertical: 10,\r\n      marginRight: 20,\r\n      flex: 1\r\n    },\r\n    buttonText: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: Math.min(width * 0.015, height * 0.06),\r\n      textAlign: 'center',\r\n    },\r\n  });\r\n}","import { StyleSheet } from 'react-native-web';\r\n\r\nexport default function useStyles() {\r\n \r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFFFFF',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    headerButton: {\r\n      marginTop: 30,\r\n    },\r\n    containerMain: {\r\n      flex: 1,\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    bottomLeft: {\r\n      position: 'absolute',\r\n      bottom: 20,\r\n      left: 20,\r\n    },\r\n    topLeft: {\r\n      position: 'absolute',\r\n      top: 20,\r\n      left: 20,\r\n    },\r\n    textContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 30,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      alignSelf: 'auto',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    messageContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      width: '40%',\r\n      height: '40%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    text: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: 24,\r\n      textAlign: 'center',\r\n    },\r\n    inputContainer: {\r\n      width: '80%',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      paddingTop: 20,\r\n    },\r\n  });\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ImageContext = createContext();\r\n\r\nexport const ImageProvider = ({ children }) => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedImage = localStorage.getItem('selectedImage');\r\n    if (storedImage) {\r\n      setSelectedImage(JSON.parse(storedImage));\r\n    }\r\n    \r\n  }, []);\r\n\r\n  const updateSelectedImage = (image) => {\r\n    setSelectedImage(image);\r\n    localStorage.setItem('selectedImage', JSON.stringify(image));\r\n  };\r\n\r\n  return (\r\n    <ImageContext.Provider value={{ selectedImage, updateSelectedImage }}>\r\n      {children}\r\n    </ImageContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useEffect, useState, useContext } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ImageContext } from './ImageContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const { updateSelectedImage } = useContext(ImageContext);\r\n \r\n  useEffect(() => {\r\n    checkLoginStatus();\r\n  }, []);\r\n\r\n  const checkLoginStatus = async () => {\r\n    try {\r\n      const isLoggedInValue = await AsyncStorage.getItem('isLoggedIn');\r\n      const userData = await AsyncStorage.getItem('user');\r\n      if (isLoggedInValue === 'true' && userData) {\r\n        setIsLoggedIn(true);\r\n        setUser(JSON.parse(userData));\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при проверке статуса пользователя:', error);\r\n    }\r\n  };\r\n\r\n  const login = async (userData) => {\r\n    setIsLoggedIn(true);\r\n    setUser(userData);\r\n    try {\r\n      await AsyncStorage.clear(); \r\n      await AsyncStorage.setItem('isLoggedIn', 'true');\r\n      await AsyncStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      console.error('Ошибкра при входе:', error);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    setIsLoggedIn(false);\r\n    setUser(null);\r\n    updateSelectedImage(null); \r\n    try {\r\n      await AsyncStorage.removeItem('isLoggedIn');\r\n      await AsyncStorage.removeItem('user');\r\n      await AsyncStorage.clear(); \r\n    } catch (error) {\r\n      alert('Ошибка при выходе:', error);\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedUser) => {\r\n    setUser(updatedUser);\r\n  };\r\n\r\n  const authContextValue = {\r\n    isLoggedIn,\r\n    user,\r\n    login,\r\n    logout,\r\n    updateUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { View} from 'react-native-web';\r\nimport LogoSvg from '../assets/icons/logoSvg';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport React, { useContext } from 'react';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction GreetingsScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n\r\n  if (isLoggedIn) {\r\n    navigation.navigate('MainAuth');\r\n    return null;\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <LogoSvg />\r\n      <View style={styles.headerButton}>\r\n        <HeaderButton\r\n          title={\"Начать\"}\r\n          onPress={() => navigation.navigate('MainUnauth')}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GreetingsScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Circle, Path } from \"react-native-svg\"\r\nconst CreateSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={72}\r\n    height={72}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={36} cy={36} r={36} fill=\"#0076B9\" />\r\n    <Circle cx={36} cy={36} r={36} fill=\"#000\" fillOpacity={0.2} />\r\n    <Path\r\n      fill=\"#fff\"\r\n      d=\"M15 55.444v-8.5l24.5-23 8.5 8-24.5 23.5H15ZM52 27.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n    <Path\r\n      stroke=\"#fff\"\r\n      strokeWidth={1.9}\r\n      d=\"M15 55.444v-8.5l24.5-23 8.5 8-24.5 23.5H15ZM52 27.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default CreateSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst SearchSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={32}\r\n    height={32}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#7C858E\"\r\n      d=\"M25.253 23.026 32 29.77 29.771 32l-6.745-6.747a14.114 14.114 0 0 1-8.849 3.102C6.351 28.355 0 22.003 0 14.177 0 6.351 6.351 0 14.177 0s14.178 6.351 14.178 14.177a14.114 14.114 0 0 1-3.102 8.849Zm-3.16-1.17a10.99 10.99 0 0 0 3.111-7.679c0-6.093-4.935-11.026-11.027-11.026-6.093 0-11.026 4.933-11.026 11.026 0 6.092 4.933 11.027 11.026 11.027a10.99 10.99 0 0 0 7.68-3.11l.236-.237Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default SearchSvg \r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst CrossSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={33}\r\n    height={33}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={1.9}\r\n      d=\"m1 1 31 31M1 1v31M1 1h31m0 31H1m31 0V1M1 32 32 1\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default CrossSvg\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst PlusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={37}\r\n    height={37}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#fff\"\r\n      d=\"M35.303 14.924v6.032H.704v-6.032h34.599ZM21.228.19v36.748h-6.414V.19h6.413Z\"\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default PlusSvg;\r\n","import React, { useContext } from 'react';\r\nimport { View, Image } from 'react-native-web';\r\nimport useStyles from './showAvatar.module';\r\nimport PlusSvg from '../../../assets/icons/plusSvg';\r\nimport { ImageContext } from '../../../context/ImageContext';\r\nimport AuthContext from '../../../context/AuthContext';\r\n\r\nexport default function ShowAvatar({ imageUrl, profile, }) {\r\n  const styles = useStyles({ profile });\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user } = useContext(AuthContext); \r\n\r\n  const renderAvatar = () => {\r\n    if (imageUrl && imageUrl.startsWith('data:image')) {\r\n      return <Image style={styles.image} source={{ uri: imageUrl }} />;\r\n    } else if (imageUrl) {\r\n      return <Image style={styles.image} source={{ uri: `data:image/jpeg;base64,${imageUrl}` }} />;\r\n    } else if (user.image) {\r\n      const base64Image = `data:image/jpeg;base64,${user.image}`;\r\n      return <Image style={styles.image} source={{ uri: base64Image }} />;\r\n    } else {\r\n      return (\r\n        <View style={styles.nonePhoto}>\r\n          <PlusSvg style={{ transform: [{ scale: 0.5 }] }} />\r\n        </View>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.round}>\r\n      {renderAvatar()}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles(props) {\r\n    const { width, height } = useWindowDimensions();\r\n    const { profile } = props;\r\n    \r\n    const containerWidth = profile ? width* 0.08 : width* 0.025;\r\n    const imageWidth = profile ? containerWidth : width* 0.025;\r\n    const imageHeight = profile ? containerWidth : width* 0.025;\r\n    const nonePhotoWidth = profile ? containerWidth : width* 0.08;\r\n    const nonePhotoHeight = profile ? containerWidth : width* 0.08;\r\n  \r\n    return StyleSheet.create({\r\n      container: {\r\n        flexDirection: \"row\",\r\n      },\r\n      image: {\r\n        width: imageWidth,\r\n        height: imageHeight,\r\n        borderRadius: 100,\r\n      },\r\n      round: {\r\n        padding: 5,\r\n        borderRadius: 100,\r\n        marginRight: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#0076B9',\r\n      },\r\n      nonePhoto: {\r\n        height: nonePhotoHeight,\r\n        width: nonePhotoWidth,\r\n        backgroundColor: \"#D9D9D9\",\r\n        borderRadius: 100, \r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      },\r\n      info: {\r\n        marginTop: 10,\r\n        flexDirection: \"column\",\r\n      },\r\n      nickname: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        marginBottom: 5,\r\n        marginTop: 4\r\n      },\r\n      dateOfBirth: {\r\n        fontSize: 14,\r\n        color: \"#999999\",\r\n      },\r\n    });\r\n  }\r\n  ","import * as React from \"react\"\r\nimport Svg, { Circle, Path } from \"react-native-svg\"\r\nconst DeleteSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={62}\r\n    height={63}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={31} cy={31.445} r={30} stroke=\"#000\" strokeWidth={2} />\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={2}\r\n      d=\"m16.5 16.944 28.5 28.5m-28.5 0 28.5-28.5\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default DeleteSvg\r\n","import React from \"react\";\r\nimport { View, Text, TouchableHighlight } from \"react-native-web\";\r\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\r\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\r\nimport useStyles from \"./searchBodies.module\";\r\n\r\nexport default function SearchBody({ data }) {\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const { avatarUrl, username, onPress, containerStyle, main, id} = data;\r\n  const name = 'admin';\r\n  const password = 'root';\r\n  const styles = useStyles();\r\n\r\n  const deleteChat = () => {\r\n    fetch(`https://linking-api.onrender.com/api/chats/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${name}:${password}`)}`,\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          alert(\"Чат успешно удалён\");\r\n          window.location.reload();\r\n        } else {\r\n          alert(\"Не удалоось удалить чат\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert(\"Ошибка при удалении чата\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <TouchableHighlight\r\n      style={[styles.container, containerStyle, isHovered && { backgroundColor: \"#E7DEDE\" }]}\r\n      onPress={onPress}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <View style={styles.rowContainer}>\r\n        {avatarUrl && (\r\n          <View style={styles.avatarContainer}>\r\n            <ShowAvatar imageUrl={avatarUrl} />\r\n            <Text style={styles.username}>{username}</Text>\r\n          </View>\r\n        )}\r\n        {!avatarUrl && <Text style={styles.channelName}>{username}</Text>}\r\n        {main && (\r\n          <View style={[styles.deleteContainer, { transform: [{ scale: 0.5 }] }]}>\r\n            <TouchableHighlight onPress={deleteChat}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n          backgroundColor: \"#FFFFFF\",\r\n          borderRadius: 26,\r\n          paddingVertical: 12,\r\n          paddingHorizontal: 16,\r\n        },\r\n        rowContainer: {\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        },\r\n        avatarContainer: {\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n        },\r\n        username: {\r\n          fontFamily: \"Montserrat-Regular\",\r\n          fontSize: Math.min(width * 0.012, height * 0.032),\r\n          fontWeight: \"bold\",\r\n          marginLeft: 8,\r\n        },\r\n        channelName: {\r\n          fontFamily: \"Montserrat-Regular\",\r\n          fontSize: Math.min(width * 0.012, height * 0.032),\r\n          fontWeight: \"bold\",\r\n        },\r\n        deleteContainer: {\r\n          marginLeft: \"auto\",\r\n        },\r\n      });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, TextInput, TouchableOpacity, ScrollView } from \"react-native-web\";\r\nimport useStyles from \"./searchInput.modules\";\r\nimport SearchSvg from \"../../../assets/icons/searchSvg\";\r\nimport CrossSvg from \"../../../assets/icons/crossSvg\";\r\nimport SearchBody from \"../../searchBodies/searchBody\";\r\nimport { useNavigation, useIsFocused } from '@react-navigation/native';\r\n\r\nexport default function SearchInput({ value, setValue, navigation, unauth, ...data }) {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\r\n  const isComponentFocused = useIsFocused(); \r\n  const styles = useStyles();\r\n  const navigationt = useNavigation();\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [results, setResults] = useState([]);\r\n  const [resultsUnauth, setResultsUnauth] = useState([]);\r\n\r\n  const handlePress = (channelId) => {\r\n    navigationt.navigate('Channel', { channelId });\r\n  };\r\n\r\n  const handlePressChat = (chatUser) => {\r\n    navigationt.navigate('Chat', { chatUser});\r\n  };\r\n\r\n  const handlePressUnauth = (channelId) => {\r\n    navigationt.navigate('ChannelUnauth', { channelId });\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n    setIsDropdownVisible(true);\r\n    fetchData(); \r\n  };\r\n\r\n  const handleCrossSvgPress = () => {\r\n    setValue(\"\");\r\n    setIsFocused(false);\r\n    setIsDropdownVisible(false);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const channelResponse = await fetch('https://linking-api.onrender.com/api/channels', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (channelResponse.ok) {\r\n        const channelData = await channelResponse.json();\r\n        const formattedResults = [];\r\n        const unauthResults = [];\r\n\r\n        for (let i = 0; i < channelData.length; i++) {\r\n          const channel = channelData[i];\r\n\r\n          formattedResults.push({\r\n            name: channel.name,\r\n            onPress: () => handlePress(channel.id),\r\n            avatarUrl: null\r\n          });\r\n\r\n          unauthResults.push({\r\n            name: channel.name,\r\n            onPress: () => handlePressUnauth(channel.id),\r\n            avatarUrl: null\r\n          });\r\n        }\r\n\r\n        const userResponse = await fetch('https://linking-api.onrender.com/api/users', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n\r\n        if (userResponse.ok) {\r\n          const userData = await userResponse.json();\r\n\r\n          for (let i = 0; i < userData.length; i++) {\r\n            const user = userData[i];\r\n\r\n            formattedResults.push({\r\n              name: user.name,\r\n              onPress: () => handlePressChat(user),\r\n              avatarUrl: user.image,\r\n            });\r\n          }\r\n        } else {\r\n          alert('Ошибка при подгрузке данных с сервера');\r\n        }\r\n\r\n        setResults(formattedResults);\r\n        setResultsUnauth(unauthResults);\r\n      } else {\r\n        alert('Ошибка при подгрузке данных с сервера');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при подгрузке данных с сервера', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isComponentFocused && isFocused) {\r\n      fetchData();\r\n    }\r\n  }, [isComponentFocused]);\r\n\r\n  const filteredResults = value\r\n    ? (unauth ? resultsUnauth : results).filter((result) =>\r\n        result.name.toLowerCase().includes(value.toLowerCase())\r\n      )\r\n    : (unauth ? resultsUnauth : results);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.icon}>\r\n        <SearchSvg />\r\n      </View>\r\n      <TextInput\r\n        {...data}\r\n        placeholderTextColor=\"#7C858E\"\r\n        value={value}\r\n        style={[styles.input, { paddingLeft: 36 }]}\r\n        onFocus={handleFocus}\r\n        onChangeText={(text) => setValue(text)}\r\n      />\r\n      {isFocused && (\r\n        <TouchableOpacity onPressIn={handleCrossSvgPress}>\r\n          <CrossSvg style={styles.dismissIcon}  />\r\n        </TouchableOpacity>\r\n      )}\r\n      {isDropdownVisible && (\r\n        <ScrollView style={styles.dropdown}>\r\n          {filteredResults.map((result, index) => (\r\n            <SearchBody\r\n              key={index}\r\n              data={{\r\n                avatarUrl: result.avatarUrl,\r\n                username: result.name,\r\n                onPress: result.onPress,\r\n              }}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      width: width*0.4,\r\n      zIndex: 0,\r\n      width: 644\r\n    },\r\n    icon: {\r\n      position: \"absolute\",\r\n      left: 10,\r\n      zIndex: 1,\r\n      transform: [{ scale: 0.5 }]\r\n    },\r\n    dismissIcon: {\r\n      position: \"absolute\",\r\n      right: 10,\r\n      top: \"50%\",\r\n      transform: [{ translateY: -17 }],\r\n      zIndex: 2,\r\n    },\r\n    dropdown: {\r\n      position: \"absolute\",\r\n      top: 50,\r\n      left: 0,\r\n      right: 0,\r\n      flex: 1,\r\n      maxHeight: height * 0.3,\r\n      overflowY: \"auto\", \r\n      backgroundColor: \"#FFFFFF\",\r\n      borderRadius: 10,\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\",\r\n      zIndex: 1,\r\n      padding: 10,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      fontFamily: 'Montserrat-Regular',\r\n      height: 44,\r\n      width: width*0.4,\r\n      fontSize: Math.min(width * 0.01, height * 0.03),                \r\n      paddingLeft: 10,\r\n      paddingRight: 10,             \r\n      borderRadius: 10,\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\"\r\n    },\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { View, Text, TouchableHighlight } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\n\r\nexport default function MainUnauthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n   \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.messageContainer}>\r\n        <Text style={styles.text}>Зарегистрируйтесь, чтобы начать общаться</Text>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Auth')}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}","import { View, TextInput } from \"react-native-web\";\r\nimport useStyles from \"./textInput.module\";\r\n\r\nexport default function DataInput({ value, setValue, type, flex, ...data }) {\r\n  const styles = useStyles();\r\n\r\n  let inputMask;\r\n  switch (type) {\r\n    case \"password\":\r\n      inputMask = {\r\n        secureTextEntry: true,\r\n        autoCompleteType: \"password\",\r\n        maxLength: 26,\r\n      };\r\n      break;\r\n    case \"nickname\":\r\n      inputMask = {\r\n        maxLength: 10,\r\n      };\r\n      break;\r\n    case \"email\":\r\n      inputMask = {\r\n        autoCompleteType: \"email\",\r\n        keyboardType: \"email-address\",\r\n        maxLength: 55,\r\n      };\r\n      break;\r\n    case \"code\":\r\n      inputMask = {\r\n        keyboardType: \"number-pad\",\r\n        maxLength: 4,\r\n      };\r\n      break;\r\n    default:\r\n      inputMask = {};\r\n  }\r\n\r\n  const inputWidth = flex ? \"90%\" : 600;\r\n  const inputHeight = flex ? 44 : 44;\r\n\r\n  return (\r\n    <View style={[styles.container, { width: inputWidth, height: inputHeight }]}>\r\n      <TextInput\r\n        {...data}\r\n        {...inputMask}\r\n        placeholderTextColor={\"#7C858E\"}\r\n        value={value}\r\n        style={[styles.input, { paddingLeft: 21 }]}\r\n        onChangeText={(text) => setValue(text)}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      borderRadius: 10,\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      fontFamily: 'Montserrat-Regular',\r\n      height: Math.min(width * 0.03, height * 0.055), \r\n      fontSize: Math.min(width * 0.01, height * 0.03),\r\n      paddingLeft: 40,\r\n      borderRadius: 10,\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      boxShadow: \"2px 2px 2px rgba(0, 0, 0, 1)\",\r\n      width: \"80%\", \r\n    },\r\n  });\r\n}\r\n\r\n","import React, { useContext, useState } from 'react';\r\nimport { View, Text, TouchableHighlight} from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction AuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    password: '',\r\n    email: ''\r\n  });\r\n  const isFormValid = inputText.email && inputText.password;\r\n  const { login } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  const handleLogin = () => {\r\n\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не верный формат почты');\r\n      return;\r\n    }\r\n\r\n    const requestBody = {\r\n      email: inputText.email,\r\n      password: inputText.password\r\n    };\r\n\r\n    fetch('https://linking-api.onrender.com/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          response.json().then(data => {\r\n            login(data); \r\n          });\r\n        } else {\r\n          response.json().then(errorData => {\r\n            const errorMessage = errorData.message || 'Login failed';\r\n            alert(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert('Ошибка подключения к серверу', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={text => setInputText({ ...inputText, email: text })}\r\n              placeholder=\"Почта\"\r\n              type=\"email\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={text => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View style={{ marginTop: 13, marginRight: 13 }}>\r\n          <TouchableHighlight onPress={() => navigation.navigate('Forgot')}>\r\n            <Text style = {{fontFamily: 'Montserrat-Regular'}}>Забыли пароль?</Text>\r\n          </TouchableHighlight>\r\n          <View style={{\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: 'black',\r\n              width: '100%',\r\n            }} />\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Войти\"\r\n            onPress={handleLogin}\r\n            disabled={!isFormValid}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title=\"Зарегистрироваться\"\r\n            onPress={() => navigation.navigate('Reg')}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default AuthScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { View } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nfunction RegScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const isFormValid = inputText.name && inputText.password && inputText.email;\r\n\r\n  const handleRegistration = () => {\r\n\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не правильный формат почты');\r\n      return;\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.password)) {\r\n      alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\r\n      return;\r\n    }\r\n\r\n    const requestBody = {\r\n      name: inputText.name,\r\n      email: inputText.email,\r\n      password: inputText.password\r\n    };\r\n\r\n    fetch('https://linking-api.onrender.com/api/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          navigation.navigate('Auth');\r\n        } else {\r\n          alert('Не удалось зарегистрироваться');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert('Ошибка при подключении к серверу', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.name}\r\n              setValue={text => setInputText({ ...inputText, name: text })}\r\n              placeholder=\"Никнейм\"\r\n              type=\"nickname\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={text => setInputText({ ...inputText, email: text })}\r\n              placeholder=\"Почта\"\r\n              type=\"email\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={text => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Зарегистрироваться\"\r\n            onPress={handleRegistration}\r\n            disabled={!isFormValid}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default RegScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Button, TouchableHighlight } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\n\r\nfunction ForgotScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    email: '',\r\n    confirmPassword: '',\r\n    code: ''\r\n  });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [receivedCode, setReceivedCode] = useState('');\r\n \r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.email ||\r\n      !inputText.confirmPassword ||\r\n      !inputText.code ||\r\n      inputText.newPassword !== inputText.confirmPassword || inputText.code != receivedCode\r\n    );\r\n  };\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не верный формат почты');\r\n      return;\r\n    }\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://linking-api.onrender.com/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReceivedCode(data);\r\n        if (data) {\r\n          alert('Код подтверждения был отправлен на указанную почту!');\r\n        } else {\r\n          alert('Не удалось отправить код подтверждения');\r\n         \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Ошибка при подключении к серверу', error);\r\n      });\r\n  };\r\n  \r\n  const getUserById = async (email) => {\r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/users/email?email=${email}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n      return userData;\r\n      } else {\r\n        alert('Пользователь с указанной почтой не найден');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  \r\n  const updatePassword = async (userId) => {\r\n    try {\r\n      const queryParams = new URLSearchParams({\r\n        new_password: inputText.newPassword,\r\n      });\r\n      const response = await fetch(`https://linking-api.onrender.com/api/users/${userId}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          new_password: inputText.newPassword,\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        \r\n      } else {\r\n        response.json().then(errorData => {\r\n          const errorMessage = errorData.message ;\r\n         alert(errorMessage);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  \r\n  const handleResetPassword = async () => {\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.newPassword)) {\r\n      alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\r\n      return;\r\n    }\r\n    try {\r\n      const userId = await getUserById(inputText.email);\r\n    if (userId) {\r\n      await updatePassword(userId);\r\n      alert('Пароль успешно обновлен');\r\n    } else {\r\n      alert('Пользователь с указанной почтой не найден');\r\n    }\r\n      navigation.navigate('Auth');\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={'Почта'}\r\n              type={'email'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder={'Новый пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder={'Подтвердить пароль'}\r\n              type={'password'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={'Код'}\r\n              type={'code'}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton title={'Изменить пароль'} onPress={handleResetPassword} disabled={isButtonDisabled()} />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton title={'Получить код'} onPress={getCode} disabled={isDisabled()} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ForgotScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst HeaderLogoSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={70}\r\n    height={70}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M54.06 50.77a2.655 2.655 0 1 1 4.468-2.846l10.958 20.058a1.117 1.117 0 0 1-1.88 1.198L54.06 50.77Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M54.06 50.77a2.655 2.655 0 1 1 4.468-2.846l10.958 20.058a1.117 1.117 0 0 1-1.88 1.198L54.06 50.77Z\"\r\n    />\r\n    <Path\r\n      fill=\"#0076B9\"\r\n      d=\"M59.711 52.364c-3.608 6.062-8.927 10.773-15.205 13.468a30.717 30.717 0 0 1-19.786 1.55c-6.586-1.687-12.504-5.518-16.918-10.952C3.387 50.997.7 44.235.119 37.1c-.58-7.134.974-14.282 4.445-20.432 3.472-6.15 8.683-10.993 14.9-13.844C25.681-.026 32.588-.74 39.21.781c6.622 1.521 12.624 5.203 17.158 10.525l-5.751 5.473c-3.45-4.048-8.015-6.849-13.052-8.007a23.38 23.38 0 0 0-15.02 1.555c-4.729 2.169-8.693 5.852-11.334 10.53-2.64 4.679-3.823 10.115-3.38 15.543.441 5.427 2.485 10.57 5.843 14.703 3.358 4.133 7.86 7.047 12.87 8.33a23.364 23.364 0 0 0 15.05-1.18c4.775-2.049 8.821-5.632 11.565-10.243l6.552 4.354Z\"\r\n    />\r\n    <Path\r\n      fill=\"#000\"\r\n      fillOpacity={0.2}\r\n      d=\"M59.711 52.364c-3.608 6.062-8.927 10.773-15.205 13.468a30.717 30.717 0 0 1-19.786 1.55c-6.586-1.687-12.504-5.518-16.918-10.952C3.387 50.997.7 44.235.119 37.1c-.58-7.134.974-14.282 4.445-20.432 3.472-6.15 8.683-10.993 14.9-13.844C25.681-.026 32.588-.74 39.21.781c6.622 1.521 12.624 5.203 17.158 10.525l-5.751 5.473c-3.45-4.048-8.015-6.849-13.052-8.007a23.38 23.38 0 0 0-15.02 1.555c-4.729 2.169-8.693 5.852-11.334 10.53-2.64 4.679-3.823 10.115-3.38 15.543.441 5.427 2.485 10.57 5.843 14.703 3.358 4.133 7.86 7.047 12.87 8.33a23.364 23.364 0 0 0 15.05-1.18c4.775-2.049 8.821-5.632 11.565-10.243l6.552 4.354Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default HeaderLogoSvg ","import { StyleSheet, useWindowDimensions } from 'react-native-web';\r\n\r\nexport default function useStyles() {\r\n\r\n  const { width, height } = useWindowDimensions();\r\n\r\n  return StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#FFFFFF',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    headerButton: {\r\n      marginTop: 30, \r\n    },\r\n    channNameContainer: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      top: 80,\r\n      paddingLeft: 10,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n    },\r\n    dataInputContainer: {\r\n      marginRight: 10,\r\n    },\r\n    nicknameContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      marginBottom: 13,\r\n    },\r\n    containerMain: {\r\n      flex: 1,\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    containerSettings: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      flexDirection: \"row\",\r\n      alignItems: 'center',\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n    },\r\n    bottomLeft: {\r\n      position: 'absolute',\r\n      bottom: 20,\r\n      left: 20,\r\n    },\r\n    topLeft: {\r\n      position: 'absolute',\r\n      top: 20,\r\n      left: 20,\r\n    },\r\n    textContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 30,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '30%',\r\n      alignSelf: 'auto',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    messageContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '30%',\r\n      height: '40%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, \r\n      right: 80,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    barContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '50%',\r\n      //height: '10%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, \r\n      right: 80, \r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    barChanContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '50%',\r\n      //height: '10%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40,\r\n      right: 80,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n    },\r\n    barText: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      paddingLeft: 20,\r\n    },\r\n    settingsContainer: {\r\n      alignItems: 'center',\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: '30%',\r\n      height: '40%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      \r\n    },\r\n    sendContainer: {\r\n      width: width * 0.4,\r\n      height: height * 0.1,\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      right: width * 0.1,\r\n      marginTop: 50\r\n    },\r\n    forwardContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      padding: 10,\r\n      borderRadius: 25,\r\n      width: '35%',\r\n      height: '45%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      bottom: 40,\r\n      right: 80, \r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    historyContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      padding: 10,\r\n      borderRadius: 15,\r\n      marginTop: 30,\r\n      width: '35%',\r\n      height: '70%',\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: '50%', \r\n      right: width * 0.1,\r\n      transform: [{ translateY: '-50%' }], \r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n    },\r\n    profileContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: width * 0.2,\r\n      height: height*0.5,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      top: 40, \r\n      left: 80, \r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n     paddingVertical: 60\r\n    },\r\n    profileSettingsContainer: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: 35,\r\n      width: width * 0.24,\r\n      height: height *0.6,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 30,\r\n      alignSelf: 'stretch',\r\n      marginTop: 'auto',\r\n      marginBottom: 'auto',\r\n      left: '50%',\r\n      top: '50%',\r\n      transform: [{ translateX: '-50%' }, { translateY: '-50%' }],\r\n    },\r\n\r\n\r\n    popupContainer: {\r\n      backgroundColor: '#E7DEDE',\r\n      borderRadius: 35,\r\n      padding: 20,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 2, height: 2 },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 7,\r\n      position: 'absolute',\r\n      top: '50%', \r\n      left: '50%', \r\n      transform: [{ translateX: '-50%' }, { translateY: '-50%' }], \r\n      width: '20%',\r\n      height: '20%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n    },\r\n    text: {\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#000000',\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      textAlign: 'center',\r\n      marginBottom: 13\r\n    },\r\n    inputContainer: {\r\n      width: '80%',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      paddingTop: 20\r\n    },\r\n  });\r\n}","import React from 'react';\r\nimport { TouchableHighlight, Text } from 'react-native-web';\r\nimport useStyles from './borderButton.module';\r\n\r\nexport default function BorderButton({ data }) {\r\n    const {onPress, text} = data;\r\n    const styles = useStyles();\r\n  return (\r\n    <TouchableHighlight\r\n      style={styles.button}\r\n      onPress={onPress}\r\n    >\r\n      <Text style={styles.text}>{text}</Text>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        button: {\r\n          borderTopWidth: 1,\r\n          borderBottomWidth: 1,\r\n          borderColor: '#000000',\r\n          paddingHorizontal: 10,\r\n          paddingVertical: 15,\r\n          width: width * 0.15,\r\n          paddingHorizontal: 15,\r\n          \r\n        },\r\n        text: {\r\n          fontFamily: 'Montserrat-Regular',\r\n          fontSize: Math.min(width * 0.02, height * 0.045),\r\n          color: '#000000',\r\n          textAlign: 'center',\r\n        },\r\n      });\r\n}","import React, { useContext, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, useWindowDimensions } from 'react-native-web';\r\nimport ShowAvatar from '../Avatar/ShowAvatar/showAvatar';\r\nimport useStyles from './forwardMessage.module';\r\nimport AuthContext from '../../context/AuthContext';\r\n\r\nconst ForwardMessage = ({ data }) => {\r\n  const { imageUrl, nickname, message, own, from, id } = data;\r\n  const styles = useStyles();\r\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\r\n  const {user} = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const { width, height } = useWindowDimensions();\r\n  \r\n  const handleDeletePress = () => {\r\n    const user_id = user.id; \r\n    const message_id = id; \r\n\r\n    fetch(`https://linking-api.onrender.com/api/saved_message/delete?user_id=${user_id}&message_id=${message_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${username}:${password}`)}`\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          window.location.reload();\r\n        } else {\r\n          alert('Не удалось удалить сообщение');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Ошибка при удалении сообщения', error);\r\n      });\r\n  };\r\n\r\n  const handleMessageBoxPress = () => {\r\n    setShowDeleteButton(!showDeleteButton);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {own ? null : (\r\n        <ShowAvatar imageUrl={imageUrl} profile={false} style={styles.avatar} />\r\n      )}\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.messageBox,\r\n          own && styles.ownMessageBox,\r\n        ]}\r\n        onPress={handleMessageBoxPress}\r\n      >\r\n        {showDeleteButton && (\r\n          <TouchableOpacity onPress={handleDeletePress}>\r\n            <Text style={{ fontFamily: 'Montserrat-Italic' }}>Удалить</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        <Text style={[styles.nickname, own && styles.ownNickname]}>\r\n          {nickname}\r\n        </Text>\r\n        <Text style={[styles.message, own && styles.ownMessage]}>{message}</Text>\r\n        <Text style={{ fontFamily: 'Montserrat-Italic', fontSize: Math.min(width * 0.008, height * 0.025), }}>\r\n          Forwarded from: {from}\r\n        </Text>\r\n        {!own && <View style={styles.bubbleTail} />}\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ForwardMessage;","import { StyleSheet, useWindowDimensions } from 'react-native-web';\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-end',\r\n    },\r\n    avatar: {\r\n      alignSelf: 'flex-start',\r\n    },\r\n    messageBox: {\r\n      marginLeft: 15,\r\n      flex: 1,\r\n      backgroundColor: '#E7DEDE',\r\n      borderLeftWidth: 5,\r\n      borderLeftColor: '#0076B9',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 15,\r\n      marginBottom: 10,\r\n      maxWidth: '40%',\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n    ownMessageBox: {\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      borderLeftColor: '#0076B9',\r\n      borderLeftWidth: 5,\r\n      marginLeft: 15,\r\n      flex: 1,\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 15,\r\n      marginBottom: 10,\r\n      maxWidth: '40%',\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n    },\r\n    nickname: {\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      fontWeight: 'bold',\r\n      marginBottom: 5,\r\n    },\r\n    ownNickname: {\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      fontWeight: 'bold',\r\n      marginBottom: 5,\r\n    },\r\n    message: {\r\n      fontSize: Math.min(width * 0.01, height * 0.03),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      flexWrap: 'wrap',\r\n      marginBottom: 10,\r\n    },\r\n    ownMessage: {\r\n      fontSize: Math.min(width * 0.01, height * 0.03),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      flexWrap: 'wrap',\r\n      marginBottom: 10,\r\n    },\r\n    bubbleTail: {\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      left: -14,\r\n      width: 5,\r\n      height: 0,\r\n      borderStyle: 'solid',\r\n      borderTopWidth: 10,\r\n      borderRightWidth: 0,\r\n      borderBottomWidth: 0,\r\n      borderLeftWidth: 10,\r\n      borderTopColor: '#0076B9',\r\n      borderBottomColor: 'transparent',\r\n      borderRightColor: 'transparent',\r\n      borderLeftColor: 'transparent',\r\n      transform: [{ rotate: '90deg' }],\r\n    },\r\n  });\r\n}\r\n","import AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport async function setProfileNickname(nickname) {\r\n  try {\r\n    await AsyncStorage.setItem('profile_nickname', nickname);\r\n  } catch (error) {\r\n    console.log('Ошибка при сохранении никнейма:', error);\r\n  }\r\n}\r\n\r\nexport async function getProfileNickname() {\r\n  try {\r\n    const nickname = await AsyncStorage.getItem('profile_nickname');\r\n    return nickname;\r\n  } catch (error) {\r\n    console.log('Ошибка при подгрузке никнейма:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function setEmail(email) {\r\n  try {\r\n    await AsyncStorage.setItem('profile_email', email);\r\n  } catch (error) {\r\n    console.log('Ошибка при сохранении почты:', error);\r\n  }\r\n}\r\n\r\nexport async function getEmail() {\r\n  try {\r\n    const email = await AsyncStorage.getItem('profile_email');\r\n    return email;\r\n  } catch (error) {\r\n    console.log('Ошибка при подгрузке почты:', error);\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState, useContext, useCallback } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, ScrollView, useWindowDimensions } from 'react-native-web';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ForwardMessage from '../components/forwardMessage/forwardMessage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport DeleteSvg from '../assets/icons/deleteSvg';\r\nimport { getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\n\r\nexport default function MainAuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user, updateUser, logout } = useContext(AuthContext);\r\n  const [userText, setUserText] = useState('');\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const updateUserCallback = useCallback(updatedUser => updateUser(updatedUser), [updateUser]);\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { width, height } = useWindowDimensions();\r\n\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchUserData();\r\n      fetchProfileNickname();\r\n    }, [])\r\n  );\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    window.location.reload();\r\n  }\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/users/${user.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        updateUserCallback(userData);\r\n      } else {\r\n        console.log('Не удалось подгрузить данные пользователя');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n  const handleClearForwardedMessages = async () => {\r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/saved_message/delete_all?user_id=${user?.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log(`Сообщения успешно удалены!`);\r\n        window.location.reload();\r\n      } else {\r\n        console.log(`Не удалось удалить сообщения!`);\r\n\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт'\r\n    },\r\n    {\r\n      onPress: handleLogout,\r\n      text: 'Выйти'\r\n    }\r\n  ];\r\n\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://linking-api.onrender.com/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setShowPopup(false);\r\n        alert('Канал создан');\r\n        window.location.reload();\r\n      } else {\r\n        alert('Не удалось создать канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.messageContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n          {user.channels.map((channel) => (\r\n            <SearchBody\r\n              key={channel.id}\r\n              data={{\r\n                username: channel.name,\r\n                onPress: () => navigation.navigate('Channel', { channelId: channel.id }),\r\n              }}\r\n            />\r\n          ))}\r\n          {user.chats.map((chat) => {\r\n            if (chat.recipient.name === user.name) {\r\n              return (\r\n                <SearchBody\r\n                  key={chat.id}\r\n                  data={{\r\n                    avatarUrl: chat.sender.image,\r\n                    username: chat.sender.name,\r\n                    onPress: () => navigation.navigate('Chat', { chatUser: chat.sender }),\r\n                    main: true,\r\n                    id: chat.id\r\n                  }}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <SearchBody\r\n                  key={chat.id}\r\n                  data={{\r\n                    avatarUrl: chat.recipient.image,\r\n                    username: chat.recipient.name,\r\n                    onPress: () => navigation.navigate('Chat', { chatUser: chat.recipient }),\r\n                    main: true,\r\n                    id: chat.id\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={selectedImage} profile={true} />\r\n        <Text style={{\r\n          color: '#000000',\r\n          fontSize:  Math.min(width * 0.03, height * 0.055),\r\n          textAlign: 'center',\r\n          marginBottom: 13,\r\n          fontFamily: 'Montserrat-Regular',\r\n        }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.forwardContainer}>\r\n        {user?.savedMessages?.length > 0 && (\r\n          <View style={{ right: 50, position: 'absolute', zIndex: 1 }}>\r\n            <TouchableHighlight onPress={handleClearForwardedMessages}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          </View>\r\n        )}\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n\r\n          {user?.savedMessages?.map((message) => {\r\n            return (\r\n              <View style={{ marginBottom: 13 }}>\r\n                <ForwardMessage\r\n                  key={message.id}\r\n                  data={{\r\n                    imageUrl: message.sender?.image,\r\n                    nickname: message.sender?.name,\r\n\r\n                    message: message.data,\r\n\r\n                    own: message.sender?.name === user.name,\r\n                    from: message.chat\r\n                    ? message.sender?.name === user.name\r\n                      ? message.chat.recipient.name\r\n                      : message.chat.sender.name\r\n                    : message.channel.name,\r\n                     id: message.id\r\n                  }}\r\n                />\r\n              </View>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={\"\"}\r\n              type={\"nickname\"}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n            <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n            </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { G, Circle, Path, Defs, ClipPath } from \"react-native-svg\"\r\nconst CameraSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={50}\r\n    height={50}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <G clipPath=\"url(#a)\">\r\n      <Circle cx={25} cy={25} r={25} fill=\"#00F\" />\r\n      <Path\r\n        fill=\"#fff\"\r\n        d=\"M24.846 22.692A4.161 4.161 0 0 1 29 26.846v.004a4.154 4.154 0 1 1-7.09-2.939 3.986 3.986 0 0 1 2.876-1.22h.063-.003v.001Zm10.154-6h.055c1.002 0 1.908.414 2.554 1.081l.001.001a3.547 3.547 0 0 1 1.082 2.555v.058-.003 12.924A3.693 3.693 0 0 1 35 37H14.692A3.693 3.693 0 0 1 11 33.308V20.33c0-1.002.414-1.908 1.081-2.554l.001-.001a3.547 3.547 0 0 1 2.555-1.082h.058-.003 3.23l.735-1.962c.212-.507.557-.922.993-1.213l.01-.006A2.55 2.55 0 0 1 21.15 13h7.387c.542.01 1.067.19 1.499.517l-.006-.005c.445.297.791.712.996 1.201l.007.018.735 1.962L35 16.692ZM24.846 33.308l.091.001a6.206 6.206 0 0 0 4.472-1.896l.002-.002a6.205 6.205 0 0 0 1.897-4.474l-.001-.096v.005l.001-.092a6.206 6.206 0 0 0-1.896-4.472l-.002-.002a6.421 6.421 0 0 0-4.565-1.897 6.424 6.424 0 0 0-4.565 1.896 6.206 6.206 0 0 0-1.896 4.57v-.005l-.001.094c0 1.755.726 3.34 1.894 4.471l.002.002a6.205 6.205 0 0 0 4.474 1.897l.097-.001h-.005l.001.001Z\"\r\n      />\r\n    </G>\r\n    <Defs>\r\n      <ClipPath id=\"a\">\r\n        <Path fill=\"#fff\" d=\"M0 0h50v50H0z\" />\r\n      </ClipPath>\r\n    </Defs>\r\n  </Svg>\r\n)\r\nexport default CameraSvg;","import { Image } from 'expo-image';\r\nimport useStyles from './ImageViewer.module';\r\n\r\nexport default function ImageViewer({ placeholderImageSource, selectedImage, isAvatar }) {\r\n    const styles = useStyles();\r\n    const imageSource = selectedImage !== null\r\n      ? { uri: selectedImage }\r\n      : placeholderImageSource;\r\n  \r\n    return <Image source={imageSource} style={isAvatar && styles.Avatarimage} />;\r\n}","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        Avatarimage: { \r\n            width: 139,\r\n            height: 139,\r\n            borderRadius: 100,\r\n        },\r\n    });\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport React, { useContext } from 'react';\r\nimport { View } from \"react-native-web\";\r\nimport useStyles from \"./changeAvatar.module\";\r\nimport { TouchableOpacity, Text } from 'react-native-web';\r\nimport PlusSvg from '../../../assets/icons/plusSvg';\r\nimport CameraSvg from '../../../assets/icons/cameraSvg';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport ImageViewer from '../../ImageViewer/ImageViewer';\r\nimport { ImageContext } from '../../../context/ImageContext';\r\nimport AuthContext from '../../../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function ChangeAvatar({ children, ...data }) {\r\n  const { updateSelectedImage } = useContext(ImageContext);\r\n  const styles = useStyles();\r\n  const [permission, setRequestPermission] = useState(null);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const { user, updateUser } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const cameraStatus = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      setRequestPermission(cameraStatus.status === 'granted');\r\n    })();\r\n  });\r\n\r\n  const pickImageAsync = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      allowsEditing: true,\r\n      quality: 1,\r\n    });\r\n  \r\n    if (!result.canceled) {\r\n          uploadImage(result); \r\n    } else {\r\n    }\r\n  };\r\n\r\n  const uploadImage = async (imageAsset) => {\r\n    const formData = new FormData();\r\n    const response = await fetch(imageAsset.uri);\r\n    const blob = await response.blob();\r\n  \r\n    formData.append('file', blob, 'file.jpg');\r\n  \r\n    const userId = user?.id;\r\n    const apiUrl = `https://linking-api.onrender.com/api/users/${userId}/update/image`;\r\n  \r\n    try {\r\n      const response = await axios.put(apiUrl, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.status === 200 || response.status === 201) {\r\n        setSelectedImage(imageAsset.uri);\r\n        updateSelectedImage(imageAsset.uri);\r\n      } \r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.message) {\r\n        alert('Ошибка ' + error.response.data.message);\r\n      } \r\n    }\r\n  };\r\n\r\n  const openCamera = async () => {\r\n    const permissionResult = await ImagePicker.requestCameraPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      return;\r\n    }\r\n\r\n    const result = await ImagePicker.launchCameraAsync();\r\n\r\n    if (!result.canceled) {\r\n      setSelectedImage(result.assets[0].uri);\r\n      uploadImage(result.assets[0]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.round}>\r\n        <TouchableOpacity onPress={pickImageAsync}>\r\n          {!selectedImage && <View style={styles.nonePhoto}>\r\n            <PlusSvg />\r\n          </View>}\r\n          {selectedImage && <ImageViewer isAvatar={true} selectedImage={selectedImage} />}\r\n        </TouchableOpacity>\r\n        <View style={{ position: 'absolute', bottom: 0, right: 0 }}>\r\n          <TouchableOpacity onPress={openCamera}>\r\n            <CameraSvg />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    const nonePhotoWidth = width* 0.08;\r\n    const nonePhotoHeight =  width* 0.08;\r\n\r\n\r\n    return StyleSheet.create({\r\n        container: { \r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            flexDirection: 'row',\r\n        },\r\n        round: {\r\n            padding: 5,\r\n            borderRadius: 100,\r\n            marginRight: 10,\r\n            borderWidth: 1,\r\n            borderColor: '#0076B9',\r\n          },\r\n          nonePhoto: {\r\n            height: nonePhotoHeight,\r\n            width: nonePhotoWidth,\r\n            backgroundColor: \"#D9D9D9\",\r\n            borderRadius: 100, \r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          },\r\n    });\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { G, Rect, Path, Defs } from \"react-native-svg\"\r\n/* SVGR has dropped some elements not supported by react-native-svg: filter */\r\nconst BackSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={104}\r\n    height={105}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <G filter=\"url(#a)\">\r\n      <Rect width={96} height={96} x={4} y={0.444} fill=\"#fff\" rx={12} />\r\n    </G>\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeLinecap=\"round\"\r\n      strokeWidth={3}\r\n      d=\"M39.5 15.444 18 36.944m0 0 21.5 21.5M18 36.944h52.5c18 0 14.5 21.5 14.5 21.5s2 22-14.5 22H18\"\r\n    />\r\n    <Defs></Defs>\r\n  </Svg>\r\n)\r\nexport default BackSvg","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst AddSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={48}\r\n    height={48}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      stroke=\"#000\"\r\n      strokeWidth={1.9}\r\n      d=\"M2 24h43.84M2 24l21.92 21.92M2 24 23.92 2.08M45.84 24 23.92 45.92M45.84 24 23.92 2.08m0 43.84V2.08\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default AddSvg\r\n","import { View, TextInput, useWindowDimensions } from \"react-native-web\";\r\nimport useStyles from \"./nicknameInput.module\";\r\n\r\nexport default function NicknameInput({ value, setValue, flex, ...data }) {\r\n    const styles = useStyles();\r\n    const { width, height } = useWindowDimensions();\r\n    let inputMask;\r\n\r\n\r\n    inputMask = {\r\n        maxLength: 10,\r\n    };\r\n\r\n    const inputWidth = flex ? \"20%\" : width * 0.2;\r\n    const inputHeight = flex ? 44 : height * 0.06;\r\n\r\n    return (\r\n        <View style={[styles.container, { width: inputWidth, height: inputHeight }]}>\r\n            <TextInput\r\n                {...data}\r\n                {...inputMask}\r\n                maxLength={10}\r\n                placeholderTextColor=\"#7C858E\"\r\n                value={value}\r\n                style={[styles.input, { paddingLeft: inputHeight * 0.5 }]}\r\n                onChangeText={(text) => setValue(text)}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      \r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n    input: {\r\n      flex: 1,\r\n      height: Math.min(width * 0.03, height * 0.055), \r\n      fontFamily: 'Montserrat-Regular',\r\n      fontSize: Math.min(width * 0.03, height * 0.055), \r\n      paddingLeft: \"5%\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      width: \"70%\", \r\n    },\r\n  });\r\n}","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, TouchableHighlight, TouchableOpacity, useWindowDimensions } from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport NicknameInput from '../components/inputs/nicknameInput/nicknameInput';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setProfileNickname, getProfileNickname, getEmail } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user } = useContext(AuthContext);\r\n  const [inputText, setInputText] = useState({\r\n    name: user?.name || '', \r\n  });\r\n  const { width, height } = useWindowDimensions();\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchEmail();\r\n    }, [user])\r\n  );\r\n\r\n  const fetchEmail = async () => {\r\n    try {\r\n      const email = await getEmail();\r\n      if (email && email !== userText) {\r\n        setUserText(email);\r\n      } else if (!email && !userText) {\r\n        setUserText(user?.email || '');\r\n      }\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке почты:', error);\r\n    }\r\n  };\r\n  const emailContainerRef = useRef(null);\r\n  const [emailFontSize, setEmailFontSize] = useState(36);\r\n\r\n\r\n  const [showInputField, setShowInputField] = useState(false); \r\n  const [rotationDeg, setRotationDeg] = useState(0);\r\n\r\n  useEffect(() => {\r\n    handleEmailLayout();\r\n    fetchSavedNickname();\r\n  }, []);\r\n\r\n  const handleEmailLayout = () => {\r\n    const emailContainerWidth = emailContainerRef.current.offsetWidth;\r\n    const desiredMaxWidth = 300;\r\n    const desiredMaxFontSize = Math.min(width * 0.02, height * 0.045);\r\n    const emailFontSize = Math.min(desiredMaxFontSize, (desiredMaxWidth / emailContainerWidth) * desiredMaxFontSize);\r\n    setEmailFontSize(emailFontSize);\r\n  };\r\n\r\n  const fetchSavedNickname = async () => {\r\n    try {\r\n      const savedNickname = await AsyncStorage.getItem('profile_nickname');\r\n      if (savedNickname) {\r\n        setInputText({ name: savedNickname });\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching saved nickname:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSvgPress = async () => {\r\n    if (showInputField) {\r\n      setShowInputField(false);\r\n      setRotationDeg(0);\r\n      try {\r\n        await setProfileNickname(inputText.name);\r\n        if (inputText.name !== user.name) {\r\n          await updateName(inputText.name);\r\n        }\r\n      } catch (error) {\r\n        console.log('Ошибка сохранения никнейма:', error);\r\n      }\r\n    } else {\r\n      setShowInputField(true);\r\n      setRotationDeg(90); \r\n    }\r\n    try {\r\n      const profileNickname = await getProfileNickname();\r\n      console.log('Profile nickname:', profileNickname);\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке никнейма:', error);\r\n    }\r\n  };\r\n\r\n  const addSvgStyle = {\r\n    transform: `rotate(${showInputField ? 45 : 0}deg)`,\r\n    transition: 'transform 0.5s ease', \r\n  };\r\n\r\n  const updateName = async (newName) => {\r\n    try {\r\n      const id = user?.id; \r\n      if (id) {\r\n        const response = await fetch(`https://linking-api.onrender.com/api/users/${id}/update/name?name=${encodeURIComponent(newName)}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n        } else {\r\n          alert('Не удалось обновить имя пользователя');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.profileSettingsContainer}>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <ChangeAvatar  children={selectedImage}/>\r\n        </View>\r\n        <View style={styles.nicknameContainer}>\r\n          {showInputField ? (\r\n            <NicknameInput\r\n              value={inputText.name}\r\n              setValue={(text) => setInputText({ ...inputText, name: text })}\r\n              flex={false}\r\n            />\r\n          ) : (\r\n            <Text style={{ fontSize:  Math.min(width * 0.03, height * 0.055), fontFamily: 'Montserrat-Regular', paddingHorizontal: 30 }}>\r\n              {inputText.name}\r\n            </Text>\r\n          )}\r\n          <TouchableOpacity onPress={handleAddSvgPress}>\r\n            <AddSvg style={addSvgStyle} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            borderTopWidth: 1,\r\n            borderBottomWidth: 1,\r\n            borderColor: '#000000',\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 15,\r\n            width: width * 0.2,\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            marginBottom: 13,\r\n          }}\r\n        >\r\n          <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n            <Text\r\n              style={{\r\n                color: '#000000',\r\n                fontSize: emailFontSize,\r\n                textAlign: 'center',\r\n                fontFamily: 'Montserrat-Regular',\r\n                marginBottom: 13,\r\n              }}\r\n            >\r\n              {userText ? userText : user.email}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style = {{alignItems: 'center', width: '100%', marginLeft: 20}}>\r\n          <HeaderButton title={'Изменить почту'} onPress={() => navigation.navigate('ChangeEmail')} />\r\n        </View>\r\n        <View style={{ marginBottom: 13,alignItems: 'center', width: '100%', marginLeft: 20}}>\r\n          <HeaderButton title={'Изменить пароль'} onPress={() => navigation.navigate('ChangePassword')} />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { View,TouchableHighlight } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setEmail } from '../context/AsyncStorageUtil';\r\n\r\nfunction ChangeEmailScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n  const [receivedCode, setReceivedCode] = useState('');\r\n  const { user } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const isButtonDisabled = () => {\r\n    return !inputText.email || !inputText.code || inputText.code != receivedCode;\r\n  };\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://linking-api.onrender.com/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReceivedCode(data);\r\n        if (data) {\r\n          alert('Код подтверждения был отправлен на указанную почту!');\r\n         \r\n        } else {\r\n          alert('Не удалось отправить код');\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Ошибка при подключении к серверу', error);\r\n      });\r\n  };\r\n\r\n  const changeEmail = async () => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не правильный формат почты');\r\n      return;\r\n    }\r\n  try {\r\n    const userId = user?.id;\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://linking-api.onrender.com/api/users/${userId}/update/email?email=${email}`;\r\n\r\n    const response = await fetch(apiUrl, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert('Почта успешно обновлена');\r\n      setEmail(inputText.email);\r\n    } else {\r\n      alert('Не удалось обновить почту');\r\n    }\r\n  } catch (error) {\r\n    alert('Ошибка при подключении к серверу', error);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={\"Почта\"}\r\n              type={\"email\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={\"Код\"}\r\n              type={\"code\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title={\"Изменить почту\"}\r\n            onPress={changeEmail}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title={\"Получить код\"}\r\n            onPress={getCode}\r\n            disabled={isDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangeEmailScreen;\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, TouchableHighlight } from 'react-native';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction ChangePasswordScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const { user } = useContext(AuthContext);\r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.password ||\r\n      !inputText.confirmPassword \r\n    );\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    if (inputText.newPassword !== inputText.confirmPassword) {\r\n      return alert('Новый пароль не совпадает с полем полем подтверждения');\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.password)&& !passwordRegex.test(inputText.newPassword)) {\r\n      alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\r\n      return;\r\n    }\r\n    const id = user?.id;\r\n    const queryParams = new URLSearchParams({\r\n      last_password: inputText.password,\r\n      new_password: inputText.newPassword,\r\n    });\r\n  \r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/users/${id}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        alert('Пароль обновлен');\r\n      } else {\r\n        alert('Не удалось обновить пароль');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={(text) => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder=\"Новый пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder=\"Подтвердить пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Изменить пароль\"\r\n            onPress={handleUpdatePassword}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordScreen;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ForwardSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={15}\r\n    height={21}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path stroke=\"#000\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n  </Svg>\r\n)\r\nexport default ForwardSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ForwardFocusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={15}\r\n    height={21}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path fill=\"#0076B9\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path fill=\"#000\" fillOpacity={0.2} d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path stroke=\"#0076B9\" d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n    <Path stroke=\"#000\" strokeOpacity={0.2} d=\"M14 1H1v18l6.24-5.4L14 19V1Z\" />\r\n  </Svg>\r\n)\r\nexport default ForwardFocusSvg\r\n","import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const MessageContext = createContext();\r\n\r\nexport const MessageProvider = ({ children }) => {\r\n  const [forwardedMessages, setForwardedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedMessages = localStorage.getItem('forwardedMessages');\r\n    if (storedMessages) {\r\n      setForwardedMessages(JSON.parse(storedMessages));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('forwardedMessages', JSON.stringify(forwardedMessages));\r\n  }, [forwardedMessages]);\r\n\r\n  const addForwardedMessage = (message) => {\r\n    setForwardedMessages((prevMessages) => [...prevMessages, message]);\r\n  };\r\n\r\n  const clearForwardedMessages = () => {\r\n    setForwardedMessages([]);\r\n  };\r\n\r\n  return (\r\n    <MessageContext.Provider value={{ forwardedMessages, addForwardedMessage, clearForwardedMessages }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native-web';\r\nimport ShowAvatar from '../Avatar/ShowAvatar/showAvatar';\r\nimport ForwardSvg from '../../assets/icons/forwardSvg';\r\nimport ForwardFocusSvg from '../../assets/icons/forwardFocusSvg';\r\nimport { MessageContext } from '../../context/MessageContext';\r\nimport AuthContext from '../../context/AuthContext';\r\nimport useStyles from './messageBody.module';\r\n\r\nconst MessageBody = ({ data, currentUser }) => {\r\n  const { imageUrl, nickname, role, message, own, channel, date, unauth, ident  } = data;\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const dated = new Date(date);\r\n  const time = dated.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const {user} = useContext(AuthContext);\r\n  const styles = useStyles();\r\n  const forwardIcon = isFocused ? <ForwardFocusSvg /> : <ForwardSvg />;\r\n\r\n  const messageBoxStyles = [\r\n    styles.messageBox,\r\n    own ? styles.ownMessageBox : styles.box,\r\n    {\r\n      borderTopRightRadius: own ? 10 : 10,\r\n      borderBottomRightRadius: own ? 0 : 10,\r\n      borderBottomLeftRadius: own ? 10 : 10,\r\n      borderTopLeftRadius: own ? 10 : 0,\r\n    },\r\n  ];\r\n\r\n  const handleForwardPress = async () => {\r\n    setIsFocused(prevState => !prevState);\r\n    const body = {\r\n      username: user.name,\r\n      messageId: ident\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://linking-api.onrender.com/api/saved_message/save', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (response.ok) {\r\n\r\n      } else {\r\n        alert('Не удалось сохранить сообщение');\r\n      }\r\n    } catch (error) {\r\n      console.log('Ошибка при сохранении сообщения', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={own ? styles.ownContainer : styles.container}>\r\n      {!own && imageUrl && (\r\n        <View style={styles.avatar}>\r\n          <ShowAvatar imageUrl={imageUrl} profile={false} />\r\n        </View>\r\n      )}\r\n      <View style={messageBoxStyles}>\r\n        {!unauth && (\r\n          <TouchableOpacity onPress={handleForwardPress}>\r\n            <View style={own ? styles.ownForward : styles.forward}>{forwardIcon}</View>\r\n          </TouchableOpacity>\r\n        )}\r\n        <Text style={styles.nickname}>{nickname}</Text>\r\n        {channel && <Text style={styles.role}>{role}</Text>}\r\n        <Text style={styles.message}>{message}</Text>\r\n        <Text style={own ? styles.ownTime : styles.time}>{time}</Text>\r\n        {own && <View style={styles.ownBubbleTail} />}\r\n        {!own && <View style={styles.bubbleTail} />}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default MessageBody;\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n  const { width, height } = useWindowDimensions();\r\n  return StyleSheet.create({\r\n    container: {\r\n      flexDirection: 'row',\r\n      alignItems: 'flex-end',\r\n      marginBottom: 10,\r\n      maxWidth: '100%',\r\n    },\r\n    ownContainer: {\r\n      flexDirection: 'row-reverse',\r\n      alignItems: 'flex-end',\r\n      marginBottom: 10,\r\n      maxWidth: '100%',\r\n    },\r\n    avatar: {\r\n      alignSelf: 'flex-start',\r\n    },\r\n    messageBox: {\r\n      backgroundColor: '#E7DEDE',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 15,\r\n      maxWidth: '60%',\r\n      borderTopLeftRadius: 10,\r\n      borderBottomLeftRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      position: 'relative',\r\n    },\r\n    box: {\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      borderTopLeftRadius: 10,\r\n    },\r\n    ownMessageBox: {\r\n      backgroundColor: 'rgba(0, 118, 185, 0.35)',\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 15,\r\n      maxWidth: '60%',\r\n      borderTopRightRadius: 10,\r\n      borderBottomRightRadius: 10,\r\n      borderTopLeftRadius: 10,\r\n      position: 'relative',\r\n    },\r\n    forward: {\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5,\r\n    },\r\n    ownForward: {\r\n      alignSelf: 'flex-start',\r\n      marginBottom: 5,\r\n    },\r\n    nickname: {\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      fontFamily: 'Montserrat-Bold',\r\n      fontWeight: 'bold',\r\n      color: 'black',\r\n      marginBottom: 5,\r\n    },\r\n    role: {\r\n      fontSize: Math.min(width * 0.012, height * 0.032),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: '#0076B9',\r\n      marginBottom: 5,\r\n    },\r\n    message: {\r\n      fontSize: Math.min(width * 0.01, height * 0.03),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      flexWrap: 'wrap',\r\n      marginBottom: 5,\r\n    },\r\n    time: {\r\n      fontSize: Math.min(width * 0.008, height * 0.025),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      alignSelf: 'flex-end',\r\n    },\r\n    ownTime: {\r\n      fontSize: Math.min(width * 0.008, height * 0.025),\r\n      fontFamily: 'Montserrat-Regular',\r\n      color: 'black',\r\n      alignSelf: 'flex-start',\r\n    },\r\n    bubbleTail: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: -10,\r\n      width: 0,\r\n      height: 0,\r\n      borderTopWidth: 10,\r\n      borderTopColor: 'transparent',\r\n      borderBottomWidth: 10,\r\n      borderBottomColor: 'transparent',\r\n      borderRightWidth: 10,\r\n      borderRightColor: '#E7DEDE',\r\n    },\r\n    ownBubbleTail: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: -10,\r\n      width: 0,\r\n      height: 0,\r\n      borderTopWidth: 10,\r\n      borderTopColor: 'transparent',\r\n      borderBottomWidth: 10,\r\n      borderBottomColor: 'transparent',\r\n      borderLeftWidth: 10,\r\n      borderLeftColor: 'rgba(0, 118, 185, 0.35)',\r\n    },\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { useWindowDimensions } from \"react-native\";\r\nimport Svg, { G, Circle, Path, Defs } from \"react-native-svg\";\r\n\r\nconst SendSvg = (props) => {\r\n  const { width, height } = useWindowDimensions();\r\n  const svgSize = Math.min(width * 0.093, height * 0.054) ;\r\n\r\n  return (\r\n      <Svg xmlns=\"http://www.w3.org/2000/svg\" width={svgSize} height={svgSize} fill=\"none\" {...props}>\r\n        <G filter=\"url(#a)\">\r\n          <Circle cx={svgSize / 2} cy={svgSize * 0.46875} r={svgSize * 0.46875} fill=\"#fff\" />\r\n        </G>\r\n        <Path\r\n            stroke=\"#0076B9\"\r\n            strokeWidth={svgSize * 0.05}\r\n            d={`M${svgSize * 0.09375} ${svgSize * 0.46875}L${svgSize * 0.65625} ${svgSize * 0.09375}V${svgSize * 0.84375}Z`}\r\n        />\r\n        <Path\r\n            stroke=\"#0076B9\"\r\n            strokeWidth={svgSize * 0.05}\r\n            d={`M${svgSize * 0.66} ${svgSize * 0.46875}L${svgSize * 0.1} ${svgSize * 0.46875}`}\r\n        />\r\n        <Defs></Defs>\r\n      </Svg>\r\n  );\r\n};\r\n\r\nexport default SendSvg;","import React, { useState, useRef } from 'react';\r\nimport { View, TouchableOpacity, TextInput } from 'react-native-web';\r\nimport useStyles from './messageInput.module';\r\nimport SendSvg from '../../../assets/icons/sendSvg';\r\n\r\nconst MessageInput = ({ curuser, chanInf, channel, onMessageSent }) => {\r\n  const [message, setMessage] = useState('');\r\n  const styles = useStyles();\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const inputRef = useRef(null); \r\n  \r\n  const handleSend = async () => {\r\n    if (message) {\r\n      try {\r\n        if (channel) {\r\n          const requestBody = {\r\n            currentUsername: curuser,\r\n            message: message,\r\n            channelName: chanInf.channel.name,\r\n          };\r\n    \r\n          const response = await fetch('https://linking-api.onrender.com/api/channels/add_message', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            setMessage('');\r\n            onMessageSent(); \r\n          } else {\r\n            alert('Не удалось отправить сообщение');\r\n          }\r\n        } else {\r\n          const requestBody = {\r\n            currentUsername: curuser,\r\n            otherUsername: chanInf,\r\n            message: message,\r\n          };\r\n    \r\n          const response = await fetch('https://linking-api.onrender.com/api/chats/add_message', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          });\r\n    \r\n          if (response.ok) {\r\n            setMessage('');\r\n            onMessageSent();\r\n          } else {\r\n            alert('Не удалось отправить сообщение');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        alert('Ошибка отправки', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        ref={inputRef}\r\n        style={styles.input}\r\n        placeholder=\"Сообщение\"\r\n        value={message}\r\n        onChangeText={setMessage}\r\n        multiline\r\n        numberOfLines={4}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <TouchableOpacity style={styles.sendButton} onPress={handleSend}>\r\n        <SendSvg />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import {StyleSheet, useWindowDimensions} from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const {width, height} = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n            flexDirection: 'row',\r\n            alignItems: 'flex-end',\r\n            paddingVertical: 20,\r\n        },\r\n        input: {\r\n            flex: 1,\r\n            height: Math.min(width * 0.03, height * 0.055),\r\n            fontSize: Math.min(width * 0.01, height * 0.03),\r\n            paddingLeft: 40,\r\n            paddingVertical: 5,\r\n            borderRadius: 10,\r\n            backgroundColor: '#FFFFFF',\r\n            color: '#000000',\r\n            boxShadow: '2px 2px 2px rgba(0, 0, 0, 1)',\r\n            fontFamily: 'Montserrat-Regular',\r\n            alignSelf: 'flex-start',\r\n            marginRight: 30\r\n        },\r\n        sendButton: {\r\n            transform: [{rotate: '180deg'}],\r\n            alignSelf: 'flex-end',\r\n            marginLeft: 30,\r\n            //width: width * 0.03,\r\n            //height: 60,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n    });\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, ScrollView, useWindowDimensions } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ChatScreen({ navigation, route }) {\r\n  const { width, height } = useWindowDimensions();\r\n  const { chatUser } = route.params;\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user } = useContext(AuthContext);\r\n  const { logout } = useContext(AuthContext);\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatData, setChatData] = useState([]);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://linking-api.onrender.com/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setShowPopup(false);\r\n        alert('Канал создан');\r\n        window.location.reload();\r\n      } else {\r\n        alert('Не удалось создать канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  const [shouldFetchChatData, setShouldFetchChatData] = useState(true);\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchProfileNickname();\r\n      setShouldFetchChatData(true);\r\n    }, [])\r\n  );\r\n  \r\n  useEffect(() => {\r\n    if (shouldFetchChatData) {\r\n      fetchChatData()\r\n        .then(() => setShouldFetchChatData(false))\r\n        .catch((error) =>  alert('Ошибка при подключении к серверу:', error))\r\n    }\r\n  }, [shouldFetchChatData]);\r\n  \r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setShouldFetchChatData(true); \r\n    }, 1000);\r\n  \r\n    return () => clearInterval(intervalId); \r\n  }, []);\r\n  \r\n  const fetchChatData = async () => {\r\n    const firstUser = user.name;\r\n    const secondUser = chatUser.name;\r\n    const url = `https://linking-api.onrender.com/api/chats/usernames?first_user=${firstUser}&second_user=${secondUser}`;\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const chatData = await response.json();\r\n        setChatData(chatData);\r\n        console.log(chatData)\r\n      } else {\r\n        throw new Error('Ошибка при подгрузке чата, возможно его еще не существует');\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  };\r\n  \r\n  const handleMessageSent = () => {\r\n    setShouldFetchChatData(true); \r\n  };\r\n  \r\n  const handleLogout = () => {\r\n    logout();\r\n    window.location.reload();\r\n  }\r\n \r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке никнейма', error);\r\n    }\r\n  };\r\n\r\n  const imageSource = selectedImage || (user && user.image);\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт',\r\n    },\r\n    {\r\n      onPress: handleLogout,\r\n      text: 'Выйти',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.barContainer}>\r\n        <SearchBody\r\n          data={{\r\n            avatarUrl: chatUser.image,\r\n            username: chatUser.name,\r\n            onPress: fetchChatData\r\n          }}\r\n        />\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={imageSource} profile={true} />\r\n        <Text style={{ color: '#000000', fontSize: Math.min(width * 0.03, height * 0.055), textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.historyContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n          {chatData?.map((message) => {\r\n            return (\r\n              <MessageBody\r\n                key={message.id}\r\n                data={{\r\n                  imageUrl: message.sender?.image,\r\n                  nickname: message.sender.name,\r\n                  message: message.data,\r\n                  date: message.date,\r\n                  own: message.sender?.name === user.name,\r\n                  channel: false,\r\n                  unauth: false,\r\n                  ident: message.id\r\n                }}\r\n                currentUser={user}\r\n              />\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.sendContainer}>\r\n        <MessageInput channel={false} curuser={userText ? userText : user.name} chanInf={chatUser.name} onMessageSent={handleMessageSent}/>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={''}\r\n              type={'nickname'}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <View>\r\n            <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n            <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst SettingsSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={14}\r\n    height={56}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={7} cy={7} r={7} fill=\"#373535\" />\r\n    <Circle cx={7} cy={49} r={7} fill=\"#373535\" />\r\n    <Circle cx={7} cy={28} r={7} fill=\"#373535\" />\r\n  </Svg>\r\n)\r\nexport default SettingsSvg\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, ScrollView, useWindowDimensions } from 'react-native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport SettingsSvg from '../assets/icons/settingsSvg';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport {  getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\nexport default function ChannelScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n    });\r\n    const { width, height } = useWindowDimensions();\r\n    const { logout } = useContext(AuthContext);\r\n    const { user } = useContext(AuthContext);\r\n    const { selectedImage } = useContext(ImageContext);\r\n    const [isMember, setIsMember] = useState(false);\r\n    const [isDisable, setIsDisable] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [userText, setUserText] = useState('');\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n    const [channelText, setChannelText] = useState('');\r\n    const [shouldFetchChannelData, setShouldFetchChannelData] = useState(true);\r\n\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://linking-api.onrender.com/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n                const isCreator = user?.id === channelData.creator?.id;\r\n                const member = channelData.members.find(member => member.user.id === user.id);\r\n                const currentUser = channelData.members.find(member => member.user.id === user.id);\r\n\r\n                if (currentUser) {\r\n                    const { role } = currentUser;\r\n                    if (role) {\r\n                        if (role.admin !== undefined) {\r\n                            setIsAdmin(role.admin);\r\n                        }\r\n                    }\r\n                }\r\n                setIsMember(member);\r\n                setIsDisable(isCreator);\r\n                setChannelData(channelData);\r\n                setChannelText(channelData.channel.name);\r\n            } else {\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу', error);\r\n        }\r\n    };\r\n\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchProfileNickname();\r\n            setShouldFetchChannelData(true);\r\n        }, [])\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (shouldFetchChannelData) {\r\n            fetchChannelData()\r\n                .then(() => setShouldFetchChannelData(false))\r\n                .catch((error) => alert('Не удалось подгрузить данные о канале', error));\r\n        }\r\n    }, [shouldFetchChannelData]);\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setShouldFetchChannelData(true);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    const handleMessageSent = () => {\r\n        setShouldFetchChannelData(true);\r\n    };\r\n\r\n    const fetchProfileNickname = async () => {\r\n        try {\r\n            const nickname = await getProfileNickname();\r\n            if (nickname && nickname !== userText) {\r\n                setUserText(nickname);\r\n            }\r\n        } catch (error) {\r\n            console.log('Ошибка при подгрузке никнейма', error);\r\n        }\r\n    };\r\n\r\n    const isFormValid = inputText.nickname;\r\n    const buttons = [\r\n        {\r\n            onPress: ({ }) => navigation.navigate('Profile'),\r\n            text: 'Мой аккаунт',\r\n        },\r\n        {\r\n            onPress: handleLogout,\r\n            text: 'Выйти',\r\n        },\r\n    ];\r\n\r\n    const handleJoinLeave = async () => {\r\n        try {\r\n            const name = userText || user.name;\r\n            const channelName = channelText;\r\n            const apiUrl = isMember\r\n                ? `https://linking-api.onrender.com/api/channels/${channelId}/leave?username=${name}`\r\n                : `https://linking-api.onrender.com/api/channels/join?username=${name}&channel_name=${channelName}`;\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: isMember ? 'DELETE' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                setIsMember((prevIsMember) => !prevIsMember);\r\n                alert(isMember ? 'Вы покинули канал' : 'Вы присоединились к каналу');\r\n                window.location.reload();\r\n            } else {\r\n                alert(isMember ? 'Не удалось покинуть канал' : 'Не удалось присоединиться к каналу');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу', error);\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        window.location.reload();\r\n      }\r\n\r\n    const imageSource = selectedImage || (user && user.image);\r\n    const handleCreateChannel = async () => {\r\n        try {\r\n            const response = await fetch('https://linking-api.onrender.com/api/channels/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    username: user.name,\r\n                    channelName: inputText.nickname,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setShowPopup(false);\r\n                alert('Канал создан');\r\n                window.location.reload();\r\n            } else {\r\n                alert('Не удалось создать канал');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelText}</Text>\r\n                <View>\r\n                    <HeaderButton title={isMember ? 'Покинуть' : 'Присоединиться'} onPress={handleJoinLeave} disabled={isDisable} />\r\n                </View>\r\n                {isMember && isAdmin && (\r\n                    <View style={{ marginRight: 20 }}>\r\n                        <TouchableHighlight onPress={({ }) => navigation.navigate('Settings', { channelId: channelData.channel.id })}>\r\n                            <SettingsSvg />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n                )}\r\n            </View>\r\n            <View style={styles.profileContainer}>\r\n                <ShowAvatar imageUrl={imageSource} profile={true} />\r\n                <Text style={{ color: '#000000', fontSize:  Math.min(width * 0.03, height * 0.055), textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n                {buttons.map((data, index) => (\r\n                    <View style={{ width: '70%' }} key={index}>\r\n                        <BorderButton key={index} data={data} />\r\n                    </View>\r\n                ))}\r\n            </View>\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView\r\n                    style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                    {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: message.sender?.name === user.name,\r\n                                    channel: true,\r\n                                    unauth: false,\r\n                                    ident: message.id\r\n                                }}\r\n                                currentUser={user}\r\n                            />\r\n                        );\r\n                    })}\r\n\r\n                </ScrollView>\r\n            </View>\r\n            {isMember && (\r\n                <View style={styles.sendContainer}>\r\n                    <MessageInput channel={true} curuser={userText ? userText : user.name} chanInf={channelData} onMessageSent={handleMessageSent} />\r\n                </View>\r\n            )}\r\n            <View style={styles.bottomLeft}>\r\n                <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n                    <CreateSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n            <Modal visible={showPopup} transparent={true}>\r\n                <View style={styles.popupContainer}>\r\n                    <Text style={styles.text}>Название канала</Text>\r\n                    <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n                        <DataInput\r\n                            value={inputText.nickname}\r\n                            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n                            placeholder={''}\r\n                            type={'nickname'}\r\n                            flex={true}\r\n                        />\r\n                    </View>\r\n                    <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n                        <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\nconst ChangeSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={44}\r\n    height={42}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Path\r\n      fill=\"#373535\"\r\n      d=\"M1 40.444v-8.5l24.5-23 8.5 8-24.5 23.5H1ZM38 12.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n    <Path\r\n      stroke=\"#373535\"\r\n      strokeWidth={1.9}\r\n      d=\"M1 40.444v-8.5l24.5-23 8.5 8-24.5 23.5H1ZM38 12.944l-8.5-8s2.5-2.5 4.5-3.5 4 0 4 0 4 1.5 4 3.5.5 3 0 4-4 4-4 4Z\"\r\n    />\r\n  </Svg>\r\n)\r\nexport default ChangeSvg\r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst AdminSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={67}\r\n    height={67}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={33.5} cy={33.5} r={23} stroke=\"#000\" />\r\n  </Svg>\r\n)\r\nexport default AdminSvg \r\n","import * as React from \"react\"\r\nimport Svg, { Circle } from \"react-native-svg\"\r\nconst AdminFocusSvg = (props) => (\r\n  <Svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={67}\r\n    height={67}\r\n    fill=\"none\"\r\n    {...props}\r\n  >\r\n    <Circle cx={33.5} cy={33.5} r={23} fill=\"#0076B9\" />\r\n    <Circle cx={33.5} cy={33.5} r={23} fill=\"#000\" fillOpacity={0.2} />\r\n    <Circle cx={33.5} cy={33.5} r={23} stroke=\"#000\" />\r\n  </Svg>\r\n)\r\nexport default AdminFocusSvg\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    TouchableOpacity,\r\n    Modal,\r\n} from \"react-native-web\";\r\nimport ChangeSvg from \"../../assets/icons/changeSvg\";\r\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\r\nimport AdminSvg from \"../../assets/icons/adminSvg\";\r\nimport AdminFocusSvg from \"../../assets/icons/adminFocusSvg\";\r\nimport HeaderButton from \"../buttons/headerButton\";\r\nimport DataInput from \"../inputs/textInput/textInput\";\r\nimport axios from 'axios';\r\nimport useStyles from \"./settingsBody.module\";\r\n\r\n\r\nexport default function SettingsBody({ data }) {\r\n    const { role, name, onPress, containerStyle, creator, channelId } = data;\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n        role: role, \r\n    });\r\n    const styles = useStyles();\r\n    const [isAdmin, setIsAdmin] = useState(false); \r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const isFormValid = inputText.role;\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n          const url = `https://linking-api.onrender.com/api/channels/${channelId.channel.id}/leave?username=${name}`;\r\n          const response = await axios.delete(url, {\r\n            auth: {\r\n              username: username,\r\n              password: password\r\n            }\r\n          });\r\n        } catch (error) {\r\n          alert('Ошибка при попытки удаления пользователя:', error);\r\n        }\r\n      };\r\n\r\n    const handleAdminClick = () => {\r\n        setIsAdmin(!isAdmin);\r\n    };\r\n\r\n    const handleSaveChanges = async () => {\r\n        const url = 'https://linking-api.onrender.com/api/roles/update';\r\n      \r\n        const requestBody = {\r\n          name: inputText.role,\r\n          isAdmin: isAdmin,\r\n          username: name,\r\n          channelName: channelId.channel.name\r\n        };\r\n      \r\n        try {\r\n            \r\n          const response = await fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Basic ${btoa(`${username}:${password}`)}` \r\n            },\r\n            body: JSON.stringify(requestBody)\r\n          });\r\n          if (response.ok) {\r\n\r\n          } else {\r\n            alert('Не удалось создать роль');\r\n          }\r\n        } catch (error) {\r\n          alert('Ошибка при создании роли', error);\r\n        }\r\n        setShowPopup(false);\r\n      };\r\n      \r\n\r\n    return (\r\n        <TouchableOpacity\r\n            style={[\r\n                styles.container,\r\n                containerStyle,\r\n                isHovered && { backgroundColor: \"#E7DEDE\" },\r\n            ]}\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n            <View style={styles.content}>\r\n                {!creator && (\r\n                    <TouchableOpacity onPress={handleDelete}>\r\n                        <DeleteSvg />\r\n                    </TouchableOpacity>\r\n                )}\r\n\r\n                <Text style={styles.username}>{name}</Text>\r\n                <Text style={styles.role}>{inputText.role}</Text>\r\n\r\n                {!creator  && (\r\n                    <TouchableOpacity onPress={() => setShowPopup(true)}>\r\n                        <ChangeSvg />\r\n                    </TouchableOpacity>\r\n                )}\r\n            </View>\r\n\r\n\r\n            <Modal visible={showPopup} transparent={true}>\r\n                <View style={styles.popupContainer}>\r\n                    <Text style={styles.text}>Название роли</Text>\r\n                    <View style={styles.inputContainer}>\r\n                        <DataInput\r\n                            value={inputText.role}\r\n                            setValue={(text) => setInputText({ ...inputText, role: text })}\r\n                            placeholder={\"\"}\r\n                            type={\"nickname\"}\r\n                            flex={true}\r\n                        />\r\n                        <TouchableOpacity style={styles.adminButton} onPress={handleAdminClick}>\r\n                            {isAdmin ? <AdminFocusSvg /> : <AdminSvg />}\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <View >\r\n                        <TouchableOpacity onPress={() => setShowPopup(false)}>\r\n                            <HeaderButton title={\"Назначить\"} onPress={handleSaveChanges} disabled={!isFormValid} />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\n\r\n","import { StyleSheet, useWindowDimensions } from \"react-native-web\";\r\n\r\nexport default function useStyles() {\r\n    const { width, height } = useWindowDimensions();\r\n    return StyleSheet.create({\r\n        container: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            borderRadius: 26,\r\n            paddingVertical: 12,\r\n            paddingHorizontal: 16,\r\n    \r\n        },\r\n        text: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            color: '#000000',\r\n            fontSize:Math.min(width * 0.012, height * 0.032),\r\n            textAlign: 'center',\r\n            marginBottom: 13\r\n        },\r\n        content: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            flex: 1\r\n        },\r\n        username: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            fontSize:Math.min(width * 0.012, height * 0.032),\r\n            color: \"#000000\",\r\n            marginLeft: 40,\r\n        },\r\n        role: {\r\n            fontFamily: 'Montserrat-Regular',\r\n            fontSize: Math.min(width * 0.012, height * 0.032),\r\n            color: \"#0076B9\",\r\n            marginLeft: 40,\r\n            marginRight: 40\r\n        },\r\n        inputContainer: {\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n        },\r\n        popupContainer: {\r\n            backgroundColor: '#E7DEDE',\r\n            borderRadius: 35,\r\n            padding: 20,\r\n            shadowColor: '#000',\r\n            shadowOffset: { width: 2, height: 2 },\r\n            shadowOpacity: 0.25,\r\n            shadowRadius: 3.84,\r\n            elevation: 7,\r\n            position: 'absolute',\r\n            top: '50%', \r\n            left: '50%', \r\n            transform: [{ translateX: '-50%' }, { translateY: '-50%' }], \r\n            width: '30%',\r\n            height: '30%',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column', \r\n        },\r\n    });\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, TouchableHighlight, ScrollView } from 'react-native';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport SettingsBody from '../components/settingsBody/settingsBody';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nexport default function SettingsScreen({ navigation, route }) {\r\n  const { channelId } = route.params;\r\n  const { user } = useContext(AuthContext);\r\n  const styles = useStyles();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [role, setRole] = useState('');\r\n  \r\n  const [isEditingNickname, setIsEditingNickname] = useState(false);\r\n  const [channelData, setChannelData] = useState([]);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchChannelData();\r\n    }, [])\r\n  );\r\n  const [inputText, setInputText] = useState({\r\n    nickname: channelData.name || 'a',\r\n  });\r\n  const fetchChannelData = async () => {\r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/channels/${channelId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const channelData = await response.json();\r\n        \r\n        setChannelData(channelData);\r\n        setInputText((prevInputText) => ({\r\n          ...prevInputText,\r\n          nickname: channelData.channel.name || 'a',\r\n        }));\r\n        const isCreator = user?.id === channelData.creator?.id;\r\n        setIsAdmin(isCreator);\r\n      } else {\r\n        alert('Не удалось получить данные о канале, возможно он больше не существует');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteChannel = async () => {\r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/channels/delete/${channelId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        alert('Канал удален');\r\n        navigation.navigate('MainAuth'); \r\n      } else {\r\n        alert('Не удалось удалить канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  \r\n  const handleRoleChange = async (newRole) => {\r\n    setRole(newRole);\r\n    try {\r\n      await AsyncStorage.setItem('role', newRole);\r\n    } catch (error) {\r\n      console.log('Ошибка сохранения роли:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddButtonClick = async () => {\r\n    if (isEditingNickname) {\r\n      setIsEditingNickname(false);\r\n      try {\r\n        const response = await fetch(`https://linking-api.onrender.com/api/channels/${channelId}/update?name=${encodeURIComponent(inputText.nickname)}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n  \r\n        if (response.ok) {\r\n          const channelResponse = await response.json();\r\n          const updatedChannels = user.channels.map((channel) => {\r\n          if (channel.id === channelResponse.id) {\r\n            return { ...channel, name: channelResponse.name };\r\n          }\r\n          return channel;\r\n        });\r\n\r\n        const updatedUser = {\r\n          ...user,\r\n          channels: updatedChannels,\r\n        };\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n\r\n        } else {\r\n          alert('Не удалось обновить имя канала');\r\n        }\r\n      } catch (error) {\r\n        alert('Ошибка при подключении к серверу', error);\r\n      }\r\n    } else {\r\n      setIsEditingNickname(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerSettings}>\r\n      <View style={styles.channNameContainer}>\r\n        <View style={styles.dataInputContainer}>\r\n          <DataInput\r\n            value={inputText.nickname}\r\n            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n            placeholder={\"\"}\r\n            type={\"nickname\"}\r\n            flex={false}\r\n            editable={isEditingNickname}\r\n          />\r\n        </View>\r\n        <TouchableHighlight onPress={handleAddButtonClick}>\r\n          <AddSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.settingsContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n        {channelData.members?.map((channel) => (\r\n            <SettingsBody\r\n             \r\n              data={{\r\n                key: channel.id,\r\n                name: channel.user.name,\r\n                role: channel.role.name,\r\n                onRoleChange: handleRoleChange,\r\n                creator: channel.role.creator,\r\n                channelId: channelData\r\n              }}\r\n              \r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Channel', { channelId: channelId })}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <HeaderButton title={'Удалить канал'} onPress={handleDeleteChannel} disabled={!isAdmin} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\n\r\n\r\n\r\nexport default function ChannelUnauthScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [ setShouldUseFocusEffect] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setShouldUseFocusEffect(false);\r\n    }, [channelId]);\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchChannelData();\r\n        }, [channelId])\r\n    );\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n\r\n    const scrollViewRef = useRef(null);\r\n    const [isAtBottom, setIsAtBottom] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (channelData?.messages?.length > 0 && isAtBottom) {\r\n            scrollViewRef.current.scrollToEnd({ animated: true });\r\n        }\r\n    }, [channelData?.messages, isAtBottom]);\r\n\r\n    const handleContentSizeChange = () => {\r\n        const isScrolledToBottom =\r\n            scrollViewRef.current &&\r\n            scrollViewRef.current.contentOffset &&\r\n            scrollViewRef.current.contentOffset.y + scrollViewRef.current.layoutMeasurement.height >=\r\n            scrollViewRef.current.contentSize.height;\r\n\r\n        setIsAtBottom(isScrolledToBottom);\r\n    };\r\n    const [channelText, setChannelText] = useState('');\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://linking-api.onrender.com/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n\r\n                setChannelData(channelData);\r\n                setChannelText(channelData.channel.name)\r\n            } else {\r\n                alert('Не удалось получить данные о канале, возможно он больше не существует');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n    if (!channelData) {\r\n        return null; \r\n      }\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelText}</Text>\r\n                <View>\r\n                    <HeaderButton title={'Присоединиться'} onPress={() => navigation.navigate('Auth')} />\r\n                </View>\r\n            </View >\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView ref={scrollViewRef} onContentSizeChange={handleContentSizeChange} style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: false,\r\n                                    channel: true,\r\n                                    unauth: true\r\n                                }}\r\n                              \r\n                            />\r\n                        );\r\n                    })}\r\n                </ScrollView>\r\n\r\n            </View>\r\n            <View style = {styles.bottomLeft}>\r\n             <TouchableHighlight onPress={() => navigation.navigate('Auth')}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n        </View>\r\n        </View>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport GreetingsScreen from './screens/GreetingsScreen';\r\nimport MainUnauthScreen from './screens/MainUnauthScreen';\r\nimport AuthScreen from './screens/AuthScreen';\r\nimport RegScreen from './screens/RegScreen';\r\nimport ForgotScreen from './screens/ForgotScreen';\r\nimport HeaderLogoSvg from './assets/icons/headerLogoSvg';\r\nimport HeaderButton from './components/buttons/headerButton';\r\nimport { Button, TouchableHighlight, View } from 'react-native-web';\r\nimport SearchInput from './components/inputs/searchInput/searchInput';\r\nimport SearchBody from './components/searchBodies/searchBody';\r\nimport MainAuthScreen from './screens/MainAuthScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ChangeEmailScreen from './screens/ChangeEmailScreen';\r\nimport ChangePasswordScreen from './screens/ChangePasswordScreen';\r\nimport ChatScreen from \"./screens/ChatScreen\";\r\nimport ChannelScreen from './screens/ChannelScreen';\r\nimport SettingsScreen from './screens/SettingsScreen';\r\nimport ChannelUnauthScreen from './screens/ChannelUnauthScreen';\r\nimport { ImageProvider } from './context/ImageContext';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport {MessageProvider} from './context/MessageContext';\r\nimport * as Font from 'expo-font';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst loadFonts = async () => {\r\n  await Font.loadAsync({\r\n    'Montserrat-Regular': require('./assets/fonts/Montserrat-Regular.ttf'),\r\n    'Montserrat-Italic': require('./assets/fonts/Montserrat-Italic.ttf'),\r\n    'Montserrat-Bold': require('./assets/fonts/Montserrat-Bold.ttf'),\r\n  });\r\n};\r\n\r\nloadFonts()\r\n  .then(() => {\r\n    renderApp();\r\n  })\r\n  .catch((error) => {\r\n    console.error('Error loading fonts:', error);\r\n  });\r\nexport default function App( ) {\r\nconst Stack = createStackNavigator();\r\nconst [searchValue, setSearchValue] = useState('');\r\nconst [searchResults, setSearchResults] = useState([]);\r\nconst username = 'admin';\r\nconst password = 'root';\r\nconst [resultsUnauth, setResultsUnauth] = useState([]);\r\nconst [results, setResults] = useState([]);\r\n\r\nuseEffect(() => {\r\n  document.title = 'Linking';\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  const fetchData = async () => {\r\n    try {\r\n      const channelResponse = await fetch('https://linking-api.onrender.com/api/channels', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (channelResponse.ok) {\r\n        const channelData = await channelResponse.json();\r\n        const formattedResults = [];\r\n        const unauthResults = [];\r\n\r\n        for (let i = 0; i < channelData.length; i++) {\r\n          const channel = channelData[i];\r\n          formattedResults.push({\r\n            name: channel.name,\r\n            onPress: ({ navigation }) =>\r\n            navigation.navigate('Channel', { channelId: channel.channel.id }),\r\n            avatarUrl: null\r\n          });\r\n          unauthResults.push({\r\n            name: channel.name,\r\n            onPress: ({ navigation }) =>\r\n            navigation.navigate('ChannelUnauth', { channelId: channel.channel.id }),\r\n            avatarUrl: null\r\n          });\r\n        }\r\n        const userResponse = await fetch('https://linking-api.onrender.com/api/users', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n\r\n        if (userResponse.ok) {\r\n          const userData = await userResponse.json();\r\n          for (let i = 0; i < userData.length; i++) {\r\n            const user = userData[i];\r\n            formattedResults.push({\r\n              name: user.name,\r\n              onPress: ({ navigation }) =>\r\n              navigation.navigate('Chat', { chatUser: user }),\r\n              avatarUrl: user.image,\r\n            });\r\n          }\r\n        } else {\r\n          console.log('Failed to fetch user data');\r\n        }\r\n\r\n        setResults(formattedResults);\r\n        setResultsUnauth(unauthResults);\r\n      } else {\r\n        console.log('Failed to fetch channel data');\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n}, []);\r\n\r\n\r\n  \r\n\r\n\r\nconst screens = [\r\n  {\r\n    name: 'Greetings',\r\n    component: GreetingsScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n        <HeaderButton\r\n          style={{ marginRight: 20 }}\r\n          title={\"Войти\"}\r\n          onPress={() => navigation.navigate('Auth')}\r\n        />\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'MainUnauth',\r\n    component: MainUnauthScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={resultsUnauth}\r\n            navigation={navigation}\r\n            unauth={true}\r\n            />\r\n          <View style={{ paddingHorizontal: 193 }} />\r\n          <HeaderButton\r\n            style={{ marginLeft: 10 }}\r\n            title={\"Войти\"}\r\n            onPress={() => navigation.navigate('Auth')}\r\n          />\r\n        </View>\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'ChannelUnauth',\r\n    component: ChannelUnauthScreen,\r\n    options: ({ navigation, route }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={resultsUnauth}\r\n            unauth={true}\r\n            navigation={navigation}\r\n            />\r\n            <View style={{ paddingHorizontal: 193 }} />\r\n          <HeaderButton\r\n            style={{ marginLeft: 10 }}\r\n            title={\"Войти\"}\r\n            onPress={() => navigation.navigate('Auth')}\r\n          />\r\n        </View>\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'Settings',\r\n    component: SettingsScreen,\r\n    options: ({ navigation, route }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            />\r\n              <View style={{ paddingHorizontal: 30 }} />\r\n        </View>\r\n\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n\r\n  {\r\n    name: 'MainAuth',\r\n    component: MainAuthScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            />\r\n              <View style={{ paddingHorizontal: 30 }} />\r\n        </View>\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'Chat',\r\n    component: ChatScreen,\r\n    options: ({ navigation, route }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            />\r\n              <View style={{ paddingHorizontal: 30 }} />\r\n        </View>\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'Channel',\r\n    component: ChannelScreen,\r\n    options: ({ navigation, route }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            />\r\n              <View style={{ paddingHorizontal: 30 }} />\r\n        </View>\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n\r\n  {\r\n    name: 'Profile',\r\n    component: ProfileScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            />\r\n          <View style={{ paddingHorizontal: 30 }} />\r\n        </View>\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'ChangePassword',\r\n    component: ChangePasswordScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            />\r\n              <View style={{ paddingHorizontal: 30 }} />\r\n        </View>\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'ChangeEmail',\r\n    component: ChangeEmailScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            />\r\n              <View style={{ paddingHorizontal: 30 }} />\r\n        </View>\r\n\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'Auth',\r\n    component: AuthScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            unauth={true}\r\n            />\r\n          <View style={{ paddingHorizontal: 193 }} />\r\n          <HeaderButton\r\n            style={{ marginLeft: 10 }}\r\n            title={\"Войти\"}\r\n            onPress={() => navigation.navigate('Auth')}\r\n          />\r\n        </View>\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'Reg',\r\n    component: RegScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            unauth={true}\r\n            />\r\n          <View style={{ paddingHorizontal: 193 }} />\r\n          <HeaderButton\r\n            style={{ marginLeft: 10 }}\r\n            title={\"Войти\"}\r\n            onPress={() => navigation.navigate('Auth')}\r\n          />\r\n        </View>\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n  {\r\n    name: 'Forgot',\r\n    component: ForgotScreen,\r\n    options: ({ navigation }) => ({\r\n      title: \"\",\r\n      headerLeft: () => (\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainUnauth')}>\r\n          <HeaderLogoSvg style={{ marginLeft: 20 }} />\r\n        </TouchableHighlight>\r\n      ),\r\n      headerRight: () => (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n          <SearchInput style={{ marginRight: 10 }} value={searchValue}\r\n            setValue={setSearchValue}\r\n            results={results}\r\n            navigation={navigation}\r\n            unauth={true}\r\n            />\r\n          <View style={{ paddingHorizontal: 193 }} />\r\n          <HeaderButton\r\n            style={{ marginLeft: 10 }}\r\n            title={\"Войти\"}\r\n            onPress={() => navigation.navigate('Auth')}\r\n          />\r\n        </View>\r\n      ),\r\n      headerShadowVisible: true,\r\n      headerStyle: {\r\n        height: 100,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#ccc',\r\n        backgroundColor: '#fff',\r\n        elevation: 3,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 20\r\n      },\r\n    }),\r\n  },\r\n];\r\n\r\n\r\n  return (\r\n    <ImageProvider>\r\n    <AuthProvider >\r\n      <MessageProvider>\r\n      <NavigationContainer>\r\n      \r\n          <Stack.Navigator >\r\n            {screens.map((screen) => (\r\n              <Stack.Screen key={screen.name} {...screen} />\r\n            ))}\r\n          </Stack.Navigator>\r\n       \r\n      </NavigationContainer>\r\n      </MessageProvider>\r\n    </AuthProvider>\r\n    </ImageProvider>\r\n\r\n  );\r\n}\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [214], () => (__webpack_require__(8029)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["props","_jsxs","Svg","_objectSpread","xmlns","width","height","fill","children","_jsx","Path","d","fillOpacity","HeaderButton","_ref","title","onPress","disabled","styles","buttonWidth","_useWindowDimensions","useWindowDimensions","buttonColor","StyleSheet","button","backgroundColor","borderRadius","minWidth","paddingVertical","paddingHorizontal","alignSelf","marginVertical","marginRight","flex","buttonText","fontFamily","color","fontSize","Math","min","textAlign","useStyles","TouchableHighlight","style","Text","container","justifyContent","alignItems","headerButton","marginTop","containerMain","bottomLeft","position","bottom","left","topLeft","top","textContainer","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","messageContainer","text","inputContainer","paddingTop","ImageContext","createContext","ImageProvider","_useState","useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","useEffect","storedImage","localStorage","getItem","JSON","parse","Provider","value","updateSelectedImage","image","setItem","stringify","AuthContext","AuthProvider","isLoggedIn","setIsLoggedIn","_useState3","_useState4","user","setUser","useContext","checkLoginStatus","_ref2","_asyncToGenerator","isLoggedInValue","AsyncStorage","userData","error","console","apply","arguments","login","_ref3","_x","logout","_ref4","alert","authContextValue","updateUser","updatedUser","navigation","navigate","View","LogoSvg","Circle","cx","cy","r","stroke","strokeWidth","ShowAvatar","imageUrl","profile","containerWidth","imageWidth","imageHeight","nonePhotoWidth","nonePhotoHeight","flexDirection","round","borderWidth","borderColor","nonePhoto","info","nickname","fontWeight","marginBottom","dateOfBirth","startsWith","Image","source","uri","base64Image","PlusSvg","transform","scale","renderAvatar","SearchBody","data","_React$useState","React","_React$useState2","isHovered","setIsHovered","avatarUrl","username","containerStyle","main","id","rowContainer","avatarContainer","marginLeft","channelName","deleteContainer","onMouseEnter","onMouseLeave","fetch","method","headers","btoa","name","then","response","ok","window","location","reload","catch","DeleteSvg","SearchInput","setValue","unauth","_objectWithoutProperties","_excluded","isFocused","setIsFocused","isDropdownVisible","setIsDropdownVisible","isComponentFocused","useIsFocused","zIndex","icon","dismissIcon","right","translateY","dropdown","maxHeight","overflowY","boxShadow","input","paddingLeft","paddingRight","navigationt","useNavigation","password","_useState5","_useState6","results","setResults","_useState7","_useState8","resultsUnauth","setResultsUnauth","fetchData","channelResponse","channelData","json","formattedResults","unauthResults","_loop","channel","i","push","channelId","length","userResponse","_loop2","chatUser","filteredResults","filter","result","toLowerCase","includes","SearchSvg","TextInput","placeholderTextColor","onFocus","onChangeText","TouchableOpacity","onPressIn","CrossSvg","ScrollView","map","index","MainUnauthScreen","CreateSvg","DataInput","inputMask","type","secureTextEntry","autoCompleteType","maxLength","keyboardType","inputWidth","email","inputText","setInputText","isFormValid","placeholder","borderBottomWidth","borderBottomColor","test","requestBody","body","errorData","errorMessage","message","newPassword","confirmPassword","code","receivedCode","setReceivedCode","getUserById","updatePassword","userId","queryParams","URLSearchParams","new_password","toString","_x2","handleResetPassword","encodeURIComponent","Authorization","channNameContainer","overflow","dataInputContainer","nicknameContainer","containerSettings","barContainer","barChanContainer","barText","settingsContainer","sendContainer","forwardContainer","historyContainer","profileContainer","profileSettingsContainer","paddingBottom","translateX","popupContainer","BorderButton","borderTopWidth","own","from","avatar","messageBox","borderLeftWidth","borderLeftColor","maxWidth","borderTopRightRadius","borderBottomRightRadius","ownMessageBox","ownNickname","flexWrap","ownMessage","bubbleTail","borderStyle","borderRightWidth","borderTopColor","borderRightColor","rotate","showDeleteButton","setShowDeleteButton","user_id","_setProfileNickname","log","getProfileNickname","_getProfileNickname","_setEmail","_getEmail","MainAuthScreen","_user$savedMessages","_user$savedMessages2","showPopup","setShowPopup","_useContext","userText","setUserText","updateUserCallback","useCallback","useFocusEffect","fetchUserData","fetchProfileNickname","handleClearForwardedMessages","buttons","_ref5","_objectDestructuringEmpty","handleCreateChannel","_ref6","scrollbarWidth","channels","chats","chat","recipient","sender","savedMessages","_message$sender","_message$sender2","_message$sender3","_message$sender4","ForwardMessage","Modal","visible","transparent","G","clipPath","Defs","ClipPath","ImageViewer","placeholderImageSource","isAvatar","Avatarimage","imageSource","ChangeAvatar","setRequestPermission","_useContext2","cameraStatus","ImagePicker","requestMediaLibraryPermissionsAsync","status","pickImageAsync","launchImageLibraryAsync","allowsEditing","quality","canceled","uploadImage","imageAsset","formData","FormData","blob","append","apiUrl","axios","openCamera","requestCameraPermissionsAsync","granted","launchCameraAsync","assets","CameraSvg","Rect","x","y","rx","strokeLinecap","NicknameInput","inputHeight","ProfileScreen","fetchEmail","getEmail","emailContainerRef","useRef","emailFontSize","setEmailFontSize","showInputField","setShowInputField","_useState9","_useState10","setRotationDeg","handleEmailLayout","fetchSavedNickname","emailContainerWidth","current","offsetWidth","desiredMaxFontSize","savedNickname","handleAddSvgPress","setProfileNickname","updateName","profileNickname","addSvgStyle","transition","newName","AddSvg","textOverflow","whiteSpace","ref","onLayout","BackSvg","changeEmail","setEmail","handleUpdatePassword","passwordRegex","last_password","strokeOpacity","MessageContext","MessageProvider","forwardedMessages","setForwardedMessages","storedMessages","addForwardedMessage","prevMessages","concat","_toConsumableArray","clearForwardedMessages","currentUser","role","date","ident","time","Date","toLocaleTimeString","hour","minute","ownContainer","borderTopLeftRadius","borderBottomLeftRadius","box","forward","ownForward","ownTime","ownBubbleTail","forwardIcon","ForwardFocusSvg","ForwardSvg","messageBoxStyles","handleForwardPress","prevState","messageId","svgSize","curuser","chanInf","onMessageSent","setMessage","sendButton","inputRef","handleSend","currentUsername","otherUsername","multiline","numberOfLines","onKeyPress","event","key","shiftKey","preventDefault","SendSvg","ChatScreen","route","params","chatData","setChatData","_useState11","_useState12","shouldFetchChatData","setShouldFetchChatData","fetchChatData","intervalId","setInterval","clearInterval","url","Error","MessageBody","MessageInput","ChannelScreen","_channelData$messages","isMember","setIsMember","isDisable","setIsDisable","isAdmin","setIsAdmin","_useState13","_useState14","setChannelData","_useState15","_useState16","channelText","setChannelText","_useState17","_useState18","shouldFetchChannelData","setShouldFetchChannelData","fetchChannelData","_channelData$creator","isCreator","creator","member","members","find","undefined","admin","handleLogout","handleJoinLeave","prevIsMember","_ref7","SettingsSvg","messages","_matchingMember$role","senderId","matchingMember","SettingsBody","content","handleDelete","auth","handleSaveChanges","ChangeSvg","adminButton","AdminFocusSvg","AdminSvg","SettingsScreen","_channelData$members","setRole","isEditingNickname","setIsEditingNickname","prevInputText","handleDeleteChannel","handleRoleChange","newRole","handleAddButtonClick","updatedChannels","editable","onRoleChange","ChannelUnauthScreen","_channelData$messages2","setShouldUseFocusEffect","scrollViewRef","isAtBottom","setIsAtBottom","scrollToEnd","animated","onContentSizeChange","isScrolledToBottom","contentOffset","layoutMeasurement","contentSize","App","Stack","createStackNavigator","searchValue","setSearchValue","document","screens","component","GreetingsScreen","options","headerLeft","HeaderLogoSvg","headerRight","headerShadowVisible","headerStyle","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","ChangePasswordScreen","_ref14","ChangeEmailScreen","_ref15","AuthScreen","_ref16","RegScreen","_ref17","ForgotScreen","_ref18","NavigationContainer","Navigator","screen","Screen","Font","loadAsync","require","loadFonts","renderApp","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","n","getter","__esModule","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}