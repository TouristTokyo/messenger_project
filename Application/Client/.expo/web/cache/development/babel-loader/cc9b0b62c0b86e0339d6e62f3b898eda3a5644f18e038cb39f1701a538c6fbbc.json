{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport ChangeAvatar from \"../components/Avatar/ChangeAvatar/changeAvatar\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport CrossSvg from \"../assets/icons/crossSvg\";\nimport AddSvg from \"../assets/icons/addSvg\";\nimport NicknameInput from \"../components/inputs/nicknameInput/nicknameInput\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { ImageContext } from \"../context/ImageContext\";\nimport AuthContext from \"../context/AuthContext\";\nimport { setProfileNickname, getProfileNickname, getEmail } from \"../context/AsyncStorageUtil\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useContext = useContext(ImageContext),\n    selectedImage = _useContext.selectedImage;\n  var _useContext2 = useContext(AuthContext),\n    user = _useContext2.user,\n    updateUser = _useContext2.updateUser;\n  var _useState = useState({\n      name: (user == null ? void 0 : user.name) || ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var username = 'admin';\n  var password = 'root';\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userText = _useState4[0],\n    setUserText = _useState4[1];\n  useFocusEffect(React.useCallback(function () {\n    fetchEmail();\n  }, [user]));\n  var fetchEmail = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var email = yield getEmail();\n        if (email && email !== userText) {\n          setUserText(email);\n        } else if (!email && !userText) {\n          setUserText((user == null ? void 0 : user.email) || '');\n        }\n      } catch (error) {\n        console.log('Ошибка при подгрузке почты:', error);\n      }\n    });\n    return function fetchEmail() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var emailContainerRef = useRef(null);\n  var _useState5 = useState(36),\n    _useState6 = _slicedToArray(_useState5, 2),\n    emailFontSize = _useState6[0],\n    setEmailFontSize = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showInputField = _useState8[0],\n    setShowInputField = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    rotationDeg = _useState10[0],\n    setRotationDeg = _useState10[1];\n  useEffect(function () {\n    handleEmailLayout();\n    fetchSavedNickname();\n  }, []);\n  var handleEmailLayout = function handleEmailLayout() {\n    var emailContainerWidth = emailContainerRef.current.offsetWidth;\n    var desiredMaxWidth = 300;\n    var desiredMaxFontSize = Math.min(width * 0.03, height * 0.055);\n    var emailFontSize = Math.min(desiredMaxFontSize, desiredMaxWidth / emailContainerWidth * desiredMaxFontSize);\n    setEmailFontSize(emailFontSize);\n  };\n  var fetchSavedNickname = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var savedNickname = yield AsyncStorage.getItem('profile_nickname');\n        if (savedNickname) {\n          setInputText({\n            name: savedNickname\n          });\n        }\n      } catch (error) {\n        console.log('Error fetching saved nickname:', error);\n      }\n    });\n    return function fetchSavedNickname() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleAddSvgPress = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (showInputField) {\n        setShowInputField(false);\n        setRotationDeg(0);\n        try {\n          yield setProfileNickname(inputText.name);\n          if (inputText.name !== user.name) {\n            yield updateName(inputText.name);\n          }\n        } catch (error) {\n          console.log('Ошибка сохранения никнейма:', error);\n        }\n      } else {\n        setShowInputField(true);\n        setRotationDeg(90);\n      }\n      try {\n        var profileNickname = yield getProfileNickname();\n        console.log('Profile nickname:', profileNickname);\n      } catch (error) {\n        console.log('Ошибка при подгрузке никнейма:', error);\n      }\n    });\n    return function handleAddSvgPress() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var addSvgStyle = {\n    transform: \"rotate(\" + (showInputField ? 45 : 0) + \"deg)\",\n    transition: 'transform 0.5s ease'\n  };\n  var updateName = function () {\n    var _ref5 = _asyncToGenerator(function* (newName) {\n      try {\n        var id = user == null ? void 0 : user.id;\n        if (id) {\n          var response = yield fetch(\"http://localhost:8080/api/users/\" + id + \"/update/name?name=\" + encodeURIComponent(newName), {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"Basic \" + btoa(username + \":\" + password)\n            }\n          });\n          if (response.ok) {} else {\n            alert('Не удалось обновить имя пользователя');\n          }\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу:', error);\n      }\n    });\n    return function updateName(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.profileSettingsContainer,\n      children: [_jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(ChangeAvatar, {\n          children: selectedImage\n        })\n      }), _jsxs(View, {\n        style: styles.nicknameContainer,\n        children: [showInputField ? _jsx(NicknameInput, {\n          value: inputText.name,\n          setValue: function setValue(text) {\n            return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n              name: text\n            }));\n          },\n          flex: false\n        }) : _jsx(Text, {\n          style: {\n            fontSize: 48,\n            fontFamily: 'Montserrat-Regular',\n            paddingHorizontal: 30\n          },\n          children: inputText.name\n        }), _jsx(TouchableOpacity, {\n          onPress: handleAddSvgPress,\n          children: _jsx(AddSvg, {\n            style: addSvgStyle\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          borderTopWidth: 1,\n          borderBottomWidth: 1,\n          borderColor: '#000000',\n          paddingHorizontal: 10,\n          paddingVertical: 15,\n          width: '80%',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          marginBottom: 13\n        },\n        children: _jsx(View, {\n          ref: emailContainerRef,\n          onLayout: handleEmailLayout,\n          children: _jsx(Text, {\n            style: {\n              color: '#000000',\n              fontSize: emailFontSize,\n              textAlign: 'center',\n              fontFamily: 'Montserrat-Regular',\n              marginBottom: 13\n            },\n            children: userText ? userText : user.email\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: 'Изменить почту',\n          onPress: function onPress() {\n            return navigation.navigate('ChangeEmail');\n          }\n        })\n      }), _jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: 'Изменить пароль',\n          onPress: function onPress() {\n            return navigation.navigate('ChangePassword');\n          }\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('MainAuth');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","View","Text","TouchableHighlight","TouchableOpacity","useWindowDimensions","useFocusEffect","useStyles","HeaderButton","ChangeAvatar","BackSvg","CrossSvg","AddSvg","NicknameInput","AsyncStorage","ImageContext","AuthContext","setProfileNickname","getProfileNickname","getEmail","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","navigation","styles","_useContext","selectedImage","_useContext2","user","updateUser","_useState","name","_useState2","_slicedToArray","inputText","setInputText","username","password","_useState3","_useState4","userText","setUserText","useCallback","fetchEmail","_ref2","_asyncToGenerator","email","error","console","log","apply","arguments","emailContainerRef","_useState5","_useState6","emailFontSize","setEmailFontSize","_useState7","_useState8","showInputField","setShowInputField","_useState9","_useState10","rotationDeg","setRotationDeg","handleEmailLayout","fetchSavedNickname","emailContainerWidth","current","offsetWidth","desiredMaxWidth","desiredMaxFontSize","Math","min","width","height","_ref3","savedNickname","getItem","handleAddSvgPress","_ref4","updateName","profileNickname","addSvgStyle","transform","transition","_ref5","newName","id","response","fetch","encodeURIComponent","method","headers","btoa","ok","alert","_x","style","containerMain","children","profileSettingsContainer","marginBottom","nicknameContainer","value","setValue","text","_objectSpread","flex","fontSize","fontFamily","paddingHorizontal","onPress","borderTopWidth","borderBottomWidth","borderColor","paddingVertical","overflow","textOverflow","whiteSpace","ref","onLayout","color","textAlign","title","navigate","topLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ProfileScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { View, Text, TouchableHighlight, TouchableOpacity, useWindowDimensions } from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ChangeAvatar from '../components/Avatar/ChangeAvatar/changeAvatar';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport CrossSvg from '../assets/icons/crossSvg';\r\nimport AddSvg from '../assets/icons/addSvg';\r\nimport NicknameInput from '../components/inputs/nicknameInput/nicknameInput';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setProfileNickname, getProfileNickname, getEmail } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { user, updateUser } = useContext(AuthContext);\r\n  const [inputText, setInputText] = useState({\r\n    name: user?.name || '', \r\n  });\r\n\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchEmail();\r\n    }, [user])\r\n  );\r\n\r\n  const fetchEmail = async () => {\r\n    try {\r\n      const email = await getEmail();\r\n      if (email && email !== userText) {\r\n        setUserText(email);\r\n      } else if (!email && !userText) {\r\n        setUserText(user?.email || '');\r\n      }\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке почты:', error);\r\n    }\r\n  };\r\n  const emailContainerRef = useRef(null);\r\n  const [emailFontSize, setEmailFontSize] = useState(36);\r\n\r\n\r\n  const [showInputField, setShowInputField] = useState(false); \r\n  const [rotationDeg, setRotationDeg] = useState(0);\r\n\r\n  useEffect(() => {\r\n    handleEmailLayout();\r\n    fetchSavedNickname();\r\n  }, []);\r\n\r\n  const handleEmailLayout = () => {\r\n    const emailContainerWidth = emailContainerRef.current.offsetWidth;\r\n    const desiredMaxWidth = 300;\r\n    const desiredMaxFontSize = Math.min(width * 0.03, height * 0.055);\r\n    const emailFontSize = Math.min(desiredMaxFontSize, (desiredMaxWidth / emailContainerWidth) * desiredMaxFontSize);\r\n    setEmailFontSize(emailFontSize);\r\n  };\r\n\r\n  const fetchSavedNickname = async () => {\r\n    try {\r\n      const savedNickname = await AsyncStorage.getItem('profile_nickname');\r\n      if (savedNickname) {\r\n        setInputText({ name: savedNickname });\r\n      }\r\n    } catch (error) {\r\n      console.log('Error fetching saved nickname:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSvgPress = async () => {\r\n    if (showInputField) {\r\n      setShowInputField(false);\r\n      setRotationDeg(0);\r\n      try {\r\n        await setProfileNickname(inputText.name);\r\n        if (inputText.name !== user.name) {\r\n          await updateName(inputText.name);\r\n        }\r\n      } catch (error) {\r\n        console.log('Ошибка сохранения никнейма:', error);\r\n      }\r\n    } else {\r\n      setShowInputField(true);\r\n      setRotationDeg(90); \r\n    }\r\n    try {\r\n      const profileNickname = await getProfileNickname();\r\n      console.log('Profile nickname:', profileNickname);\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке никнейма:', error);\r\n    }\r\n  };\r\n\r\n  const addSvgStyle = {\r\n    transform: `rotate(${showInputField ? 45 : 0}deg)`,\r\n    transition: 'transform 0.5s ease', \r\n  };\r\n\r\n  const updateName = async (newName) => {\r\n    try {\r\n      const id = user?.id; \r\n      if (id) {\r\n        const response = await fetch(`http://localhost:8080/api/users/${id}/update/name?name=${encodeURIComponent(newName)}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n        } else {\r\n          alert('Не удалось обновить имя пользователя');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.profileSettingsContainer}>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <ChangeAvatar  children={selectedImage}/>\r\n        </View>\r\n        <View style={styles.nicknameContainer}>\r\n          {showInputField ? (\r\n            <NicknameInput\r\n              value={inputText.name}\r\n              setValue={(text) => setInputText({ ...inputText, name: text })}\r\n              flex={false}\r\n            />\r\n          ) : (\r\n            <Text style={{ fontSize: 48, fontFamily: 'Montserrat-Regular', paddingHorizontal: 30 }}>\r\n              {inputText.name}\r\n            </Text>\r\n          )}\r\n          <TouchableOpacity onPress={handleAddSvgPress}>\r\n            <AddSvg style={addSvgStyle} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View\r\n          style={{\r\n            borderTopWidth: 1,\r\n            borderBottomWidth: 1,\r\n            borderColor: '#000000',\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 15,\r\n            width: '80%',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis',\r\n            whiteSpace: 'nowrap',\r\n            marginBottom: 13,\r\n          }}\r\n        >\r\n          <View ref={emailContainerRef} onLayout={handleEmailLayout}>\r\n            <Text\r\n              style={{\r\n                color: '#000000',\r\n                fontSize: emailFontSize,\r\n                textAlign: 'center',\r\n                fontFamily: 'Montserrat-Regular',\r\n                marginBottom: 13,\r\n              }}\r\n            >\r\n              {userText ? userText : user.email}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <HeaderButton title={'Изменить почту'} onPress={() => navigation.navigate('ChangeEmail')} />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton title={'Изменить пароль'} onPress={() => navigation.navigate('ChangePassword')} />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('MainAuth')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}