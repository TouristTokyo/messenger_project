{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport MessageBody from \"../components/messageBody/messageBody\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ChannelUnauthScreen(_ref) {\n  var _channelData$messages2;\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var styles = useStyles();\n  var channelId = route.params.channelId;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    shouldUseFocusEffect = _useState2[0],\n    setShouldUseFocusEffect = _useState2[1];\n  useEffect(function () {\n    setShouldUseFocusEffect(false);\n  }, [channelId]);\n  useFocusEffect(React.useCallback(function () {\n    fetchChannelData();\n  }, [channelId]));\n  var username = 'admin';\n  var password = 'root';\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    channelData = _useState4[0],\n    setChannelData = _useState4[1];\n  var scrollViewRef = useRef(null);\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isAtBottom = _useState6[0],\n    setIsAtBottom = _useState6[1];\n  useEffect(function () {\n    var _channelData$messages;\n    if ((channelData == null ? void 0 : (_channelData$messages = channelData.messages) == null ? void 0 : _channelData$messages.length) > 0 && isAtBottom) {\n      scrollViewRef.current.scrollToEnd({\n        animated: true\n      });\n    }\n  }, [channelData == null ? void 0 : channelData.messages, isAtBottom]);\n  var handleContentSizeChange = function handleContentSizeChange() {\n    var isScrolledToBottom = scrollViewRef.current && scrollViewRef.current.contentOffset && scrollViewRef.current.contentOffset.y + scrollViewRef.current.layoutMeasurement.height >= scrollViewRef.current.contentSize.height;\n    setIsAtBottom(isScrolledToBottom);\n  };\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    channelText = _useState8[0],\n    setChannelText = _useState8[1];\n  var fetchChannelData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://linking-api.onrender.com/api/channels/\" + channelId, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Basic \" + btoa(username + \":\" + password)\n          }\n        });\n        if (response.ok) {\n          var _channelData = yield response.json();\n          setChannelData(_channelData);\n          setChannelText(_channelData.channel.name);\n        } else {\n          alert('Не удалось получить данные о канале, возможно он больше не существует');\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу:', error);\n      }\n    });\n    return function fetchChannelData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  if (!channelData) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.barChanContainer,\n      children: [_jsx(Text, {\n        style: styles.barText,\n        children: channelText\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: 'Присоединиться',\n          onPress: function onPress() {\n            return navigation.navigate('Auth');\n          }\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.historyContainer,\n      children: _jsx(ScrollView, {\n        ref: scrollViewRef,\n        onContentSizeChange: handleContentSizeChange,\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: channelData == null ? void 0 : (_channelData$messages2 = channelData.messages) == null ? void 0 : _channelData$messages2.map(function (message) {\n          var _message$sender, _matchingMember$role, _message$sender2, _message$sender3;\n          var senderId = (_message$sender = message.sender) == null ? void 0 : _message$sender.id;\n          var matchingMember = channelData.members.find(function (member) {\n            return member.user.id === senderId;\n          });\n          var role = matchingMember == null ? void 0 : (_matchingMember$role = matchingMember.role) == null ? void 0 : _matchingMember$role.name;\n          return _jsx(MessageBody, {\n            data: {\n              imageUrl: (_message$sender2 = message.sender) == null ? void 0 : _message$sender2.image,\n              nickname: (_message$sender3 = message.sender) == null ? void 0 : _message$sender3.name,\n              role: role,\n              message: message.data,\n              date: message.date,\n              own: false,\n              channel: true,\n              unauth: true\n            }\n          }, message.id);\n        })\n      })\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(HeaderButton, {\n        title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u043D\\u0430\\u043B\",\n        onPress: function onPress() {\n          return navigation.navigate('Auth');\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","View","Text","TouchableHighlight","ScrollView","CreateSvg","useStyles","useFocusEffect","HeaderButton","MessageBody","jsx","_jsx","jsxs","_jsxs","ChannelUnauthScreen","_ref","_channelData$messages2","navigation","route","styles","channelId","params","_useState","_useState2","_slicedToArray","shouldUseFocusEffect","setShouldUseFocusEffect","useCallback","fetchChannelData","username","password","_useState3","_useState4","channelData","setChannelData","scrollViewRef","_useState5","_useState6","isAtBottom","setIsAtBottom","_channelData$messages","messages","length","current","scrollToEnd","animated","handleContentSizeChange","isScrolledToBottom","contentOffset","y","layoutMeasurement","height","contentSize","_useState7","_useState8","channelText","setChannelText","_ref2","_asyncToGenerator","response","fetch","method","headers","btoa","ok","json","channel","name","alert","error","apply","arguments","style","containerMain","children","barChanContainer","barText","title","onPress","navigate","historyContainer","ref","onContentSizeChange","flex","scrollbarWidth","flexDirection","map","message","_message$sender","_matchingMember$role","_message$sender2","_message$sender3","senderId","sender","id","matchingMember","members","find","member","user","role","data","imageUrl","image","nickname","date","own","unauth","bottomLeft"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChannelUnauthScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableHighlight, ScrollView } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\n\r\n\r\n\r\nexport default function ChannelUnauthScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [shouldUseFocusEffect, setShouldUseFocusEffect] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setShouldUseFocusEffect(false);\r\n    }, [channelId]);\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchChannelData();\r\n        }, [channelId])\r\n    );\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n\r\n    const scrollViewRef = useRef(null);\r\n    const [isAtBottom, setIsAtBottom] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (channelData?.messages?.length > 0 && isAtBottom) {\r\n            scrollViewRef.current.scrollToEnd({ animated: true });\r\n        }\r\n    }, [channelData?.messages, isAtBottom]);\r\n\r\n    const handleContentSizeChange = () => {\r\n        const isScrolledToBottom =\r\n            scrollViewRef.current &&\r\n            scrollViewRef.current.contentOffset &&\r\n            scrollViewRef.current.contentOffset.y + scrollViewRef.current.layoutMeasurement.height >=\r\n            scrollViewRef.current.contentSize.height;\r\n\r\n        setIsAtBottom(isScrolledToBottom);\r\n    };\r\n    const [channelText, setChannelText] = useState('');\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://linking-api.onrender.com/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n\r\n                setChannelData(channelData);\r\n                setChannelText(channelData.channel.name)\r\n            } else {\r\n                alert('Не удалось получить данные о канале, возможно он больше не существует');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n    if (!channelData) {\r\n        return null; \r\n      }\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelText}</Text>\r\n                <View>\r\n                    <HeaderButton title={'Присоединиться'} onPress={() => navigation.navigate('Auth')} />\r\n                </View>\r\n            </View >\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView ref={scrollViewRef} onContentSizeChange={handleContentSizeChange} style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: false,\r\n                                    channel: true,\r\n                                    unauth: true\r\n                                }}\r\n                              \r\n                            />\r\n                        );\r\n                    })}\r\n                </ScrollView>\r\n\r\n            </View>\r\n            <View style = {styles.bottomLeft}>\r\n            <HeaderButton title = 'Создать канал' onPress={() => navigation.navigate('Auth')}> \r\n        </HeaderButton>\r\n        \r\n        </View>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}