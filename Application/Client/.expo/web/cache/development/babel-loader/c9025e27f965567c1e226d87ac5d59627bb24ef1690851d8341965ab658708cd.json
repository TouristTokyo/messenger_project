{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport AuthContext from \"../context/AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChangePasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      newPassword: '',\n      password: '',\n      confirmPassword: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var username = 'admin';\n  var password = 'root';\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user;\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var isButtonDisabled = function isButtonDisabled() {\n    return !inputText.newPassword || !inputText.password || !inputText.confirmPassword;\n  };\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  var scale = Math.min(width * 0.0009, height * 0.001);\n  var handleUpdatePassword = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (inputText.newPassword !== inputText.confirmPassword) {\n        return alert('Новый пароль не совпадает с полем полем подтверждения');\n      }\n      var passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n      if (!passwordRegex.test(inputText.password) && !passwordRegex.test(inputText.newPassword)) {\n        alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\n        return;\n      }\n      setIsLoading(true);\n      var id = user == null ? void 0 : user.id;\n      var queryParams = new URLSearchParams({\n        last_password: inputText.password,\n        new_password: inputText.newPassword\n      });\n      try {\n        var response = yield fetch(\"https://linking-api.onrender.com/api/users/\" + id + \"/update/password?\" + queryParams.toString(), {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: \"Basic \" + btoa(username + \":\" + password)\n          }\n        });\n        if (response.ok) {\n          alert('Пароль обновлен');\n          setIsLoading(false);\n        } else {\n          alert('Не удалось обновить пароль');\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу', error);\n      }\n    });\n    return function handleUpdatePassword() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.password,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                password: text\n              }));\n            },\n            placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.newPassword,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                newPassword: text\n              }));\n            },\n            placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.confirmPassword,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                confirmPassword: text\n              }));\n            },\n            placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            type: \"password\",\n            flex: false\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          onPress: handleUpdatePassword,\n          disabled: isButtonDisabled()\n        })\n      })]\n    }), _jsx(View, {\n      style: [styles.topLeft, {\n        transform: [{\n          scale: scale\n        }]\n      }],\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Profile');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}\nexport default ChangePasswordScreen;","map":{"version":3,"names":["React","useState","useContext","View","TouchableHighlight","useWindowDimensions","ActivityIndicator","useStyles","DataInput","HeaderButton","BackSvg","AuthContext","jsx","_jsx","jsxs","_jsxs","ChangePasswordScreen","_ref","navigation","styles","_useState","newPassword","password","confirmPassword","_useState2","_slicedToArray","inputText","setInputText","username","_useContext","user","_useState3","_useState4","isLoading","setIsLoading","isButtonDisabled","_useWindowDimensions","width","height","scale","Math","min","handleUpdatePassword","_ref2","_asyncToGenerator","alert","passwordRegex","test","id","queryParams","URLSearchParams","last_password","new_password","response","fetch","toString","method","headers","Authorization","btoa","ok","error","apply","arguments","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","type","flex","title","onPress","disabled","topLeft","transform","navigate"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChangePasswordScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, TouchableHighlight, useWindowDimensions, ActivityIndicator } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\n\r\nfunction ChangePasswordScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const { user } = useContext(AuthContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.password ||\r\n      !inputText.confirmPassword \r\n    );\r\n  };\r\n  const { width, height } = useWindowDimensions();\r\n  const scale = Math.min(width *0.0009, height *0.001);\r\n  const handleUpdatePassword = async () => {\r\n    if (inputText.newPassword !== inputText.confirmPassword) {\r\n      return alert('Новый пароль не совпадает с полем полем подтверждения');\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.password)&& !passwordRegex.test(inputText.newPassword)) {\r\n      alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    const id = user?.id;\r\n    const queryParams = new URLSearchParams({\r\n      last_password: inputText.password,\r\n      new_password: inputText.newPassword,\r\n    });\r\n  \r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/users/${id}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        alert('Пароль обновлен');\r\n        setIsLoading(false);\r\n      } else {\r\n        alert('Не удалось обновить пароль');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={(text) => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder=\"Новый пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder=\"Подтвердить пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Изменить пароль\"\r\n            onPress={handleUpdatePassword}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={[styles.topLeft, { transform: [{ scale }] }]}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}