{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\nimport useStyles from \"./searchBodies.module\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SearchBody(_ref) {\n  var data = _ref.data;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isHovered = _React$useState2[0],\n    setIsHovered = _React$useState2[1];\n  var avatarUrl = data.avatarUrl,\n    username = data.username,\n    onPress = data.onPress,\n    containerStyle = data.containerStyle,\n    main = data.main,\n    id = data.id;\n  var name = 'admin';\n  var password = 'root';\n  var styles = useStyles();\n  var deleteChat = function deleteChat() {\n    fetch(\"https://linking-api.onrender.com/api/chats/delete/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Basic \" + btoa(name + \":\" + password)\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        alert(\"Чат успешно удалён\");\n        window.location.reload();\n      } else {\n        alert(\"Не удалоось удалить чат\");\n      }\n    }).catch(function (error) {\n      alert(\"Ошибка при удалении чата\", error);\n    });\n  };\n  return _jsx(TouchableHighlight, {\n    style: [styles.container, containerStyle, isHovered && !avatarUrl && {\n      backgroundColor: \"rgba(0, 118, 185, 0.35)\"\n    }],\n    onPress: onPress,\n    onMouseEnter: function onMouseEnter() {\n      return setIsHovered(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setIsHovered(false);\n    },\n    children: _jsxs(View, {\n      style: styles.rowContainer,\n      children: [avatarUrl && _jsxs(View, {\n        style: styles.avatarContainer,\n        children: [_jsx(ShowAvatar, {\n          imageUrl: avatarUrl\n        }), _jsx(Text, {\n          style: styles.username,\n          children: username\n        })]\n      }), !avatarUrl && _jsx(Text, {\n        style: styles.channelName,\n        children: username\n      }), main && _jsx(View, {\n        style: [styles.deleteContainer, {\n          transform: [{\n            scale: 0.5\n          }]\n        }],\n        children: _jsx(TouchableHighlight, {\n          onPress: deleteChat,\n          children: _jsx(DeleteSvg, {})\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","View","Text","TouchableHighlight","ShowAvatar","DeleteSvg","useStyles","jsx","_jsx","jsxs","_jsxs","SearchBody","_ref","data","_React$useState","useState","_React$useState2","_slicedToArray","isHovered","setIsHovered","avatarUrl","username","onPress","containerStyle","main","id","name","password","styles","deleteChat","fetch","method","headers","btoa","then","response","ok","alert","window","location","reload","catch","error","style","container","backgroundColor","onMouseEnter","onMouseLeave","children","rowContainer","avatarContainer","imageUrl","channelName","deleteContainer","transform","scale"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/components/searchBodies/searchBody.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableHighlight } from \"react-native-web\";\r\nimport ShowAvatar from \"../Avatar/ShowAvatar/showAvatar\";\r\nimport DeleteSvg from \"../../assets/icons/deleteSvg\";\r\nimport useStyles from \"./searchBodies.module\";\r\n\r\nexport default function SearchBody({ data }) {\r\n  const [isHovered, setIsHovered] = React.useState(false);\r\n  const { avatarUrl, username, onPress, containerStyle, main, id} = data;\r\n  const name = 'admin';\r\n  const password = 'root';\r\n  const styles = useStyles();\r\n\r\n  const deleteChat = () => {\r\n    fetch(`https://linking-api.onrender.com/api/chats/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Basic ${btoa(`${name}:${password}`)}`,\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          alert(\"Чат успешно удалён\");\r\n          window.location.reload();\r\n        } else {\r\n          alert(\"Не удалоось удалить чат\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert(\"Ошибка при удалении чата\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <TouchableHighlight\r\n      style={[styles.container, containerStyle, isHovered && !avatarUrl &&{ backgroundColor: \"rgba(0, 118, 185, 0.35)\" }, ]}\r\n      onPress={onPress}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      <View style={styles.rowContainer}>\r\n        {avatarUrl && (\r\n          <View style={styles.avatarContainer}>\r\n            <ShowAvatar imageUrl={avatarUrl} />\r\n            <Text style={styles.username}>{username}</Text>\r\n          </View>\r\n        )}\r\n        {!avatarUrl && <Text style={styles.channelName}>{username}</Text>}\r\n        {main && (\r\n          <View style={[styles.deleteContainer, { transform: [{ scale: 0.5 }] }]}>\r\n            <TouchableHighlight onPress={deleteChat}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}