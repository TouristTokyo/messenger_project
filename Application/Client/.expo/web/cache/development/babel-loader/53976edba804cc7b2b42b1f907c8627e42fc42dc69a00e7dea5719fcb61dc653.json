{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useContext, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport SearchInput from \"../components/inputs/searchInput/searchInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport SearchBody from \"../components/searchBodies/searchBody\";\nimport ShowAvatar from \"../components/Avatar/ShowAvatar/showAvatar\";\nimport BorderButton from \"../components/buttons/borderButton\";\nimport ForwardMessage from \"../components/forwardMessage/forwardMessage\";\nimport { ImageContext } from \"../context/ImageContext\";\nimport AuthContext from \"../context/AuthContext\";\nimport { MessageContext } from \"../context/MessageContext\";\nimport DeleteSvg from \"../assets/icons/deleteSvg\";\nimport { setProfileNickname, getProfileNickname } from \"../context/AsyncStorageUtil\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MainAuthScreen(_ref) {\n  var _user$savedMessages, _user$savedMessages2;\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPopup = _useState2[0],\n    setShowPopup = _useState2[1];\n  var _useState3 = useState({\n      nickname: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    updateUser = _useContext.updateUser,\n    logout = _useContext.logout;\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userText = _useState6[0],\n    setUserText = _useState6[1];\n  var username = 'admin';\n  var password = 'root';\n  var updateUserCallback = useCallback(function (updatedUser) {\n    return updateUser(updatedUser);\n  }, [updateUser]);\n  var _useContext2 = useContext(ImageContext),\n    selectedImage = _useContext2.selectedImage;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  useFocusEffect(React.useCallback(function () {\n    fetchUserData();\n    fetchProfileNickname();\n  }, []));\n  var handleLogout = function handleLogout() {\n    logout();\n    As;\n    window.location.reload();\n  };\n  var fetchUserData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://backend-web-service-test.onrender.com/api/users/\" + user.id, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Basic \" + btoa(username + \":\" + password)\n          }\n        });\n        if (response.ok) {\n          var userData = yield response.json();\n          console.log(userData);\n          updateUserCallback(userData);\n        } else {\n          console.log('Не удалось подгрузить данные пользователя');\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу:', error);\n      }\n    });\n    return function fetchUserData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchProfileNickname = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var nickname = yield getProfileNickname();\n        if (nickname && nickname !== userText) {\n          setUserText(nickname);\n        }\n      } catch (error) {}\n    });\n    return function fetchProfileNickname() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleClearForwardedMessages = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"https://backend-web-service-test.onrender.com/api/saved_message/delete_all?user_id=\" + (user == null ? void 0 : user.id), {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Basic \" + btoa(username + \":\" + password)\n          }\n        });\n        if (response.ok) {\n          console.log(\"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u044B!\");\n          window.location.reload();\n        } else {\n          console.log(\"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F!\");\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу:', error);\n      }\n    });\n    return function handleClearForwardedMessages() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var isFormValid = inputText.nickname;\n  var buttons = [{\n    onPress: function onPress(_ref5) {\n      _objectDestructuringEmpty(_ref5);\n      return navigation.navigate('Profile');\n    },\n    text: 'Мой аккаунт'\n  }, {\n    onPress: handleLogout,\n    text: 'Выйти'\n  }];\n  var handleCreateChannel = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('https://backend-web-service-test.onrender.com/api/channels/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Basic \" + btoa(username + \":\" + password)\n          },\n          body: JSON.stringify({\n            username: user.name,\n            channelName: inputText.nickname\n          })\n        });\n        if (response.ok) {\n          var channelResponse = yield response.json();\n          setShowPopup(false);\n          alert('Канал создан');\n          window.location.reload();\n        } else {\n          alert('Не удалось создать канал');\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу:', error);\n      }\n    });\n    return function handleCreateChannel() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsx(View, {\n      style: styles.messageContainer,\n      children: _jsxs(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: [user.channels.map(function (channel) {\n          return _jsx(SearchBody, {\n            data: {\n              username: channel.name,\n              onPress: function onPress() {\n                return navigation.navigate('Channel', {\n                  channelId: channel.id\n                });\n              }\n            }\n          }, channel.id);\n        }), user.chats.map(function (chat) {\n          if (chat.recipient.name === user.name) {\n            return _jsx(SearchBody, {\n              data: {\n                avatarUrl: chat.sender.image,\n                username: chat.sender.name,\n                onPress: function onPress() {\n                  return navigation.navigate('Chat', {\n                    chatUser: chat.sender\n                  });\n                },\n                main: true,\n                id: chat.id\n              }\n            }, chat.id);\n          } else {\n            return _jsx(SearchBody, {\n              data: {\n                avatarUrl: chat.recipient.image,\n                username: chat.recipient.name,\n                onPress: function onPress() {\n                  return navigation.navigate('Chat', {\n                    chatUser: chat.recipient\n                  });\n                },\n                main: true,\n                id: chat.id\n              }\n            }, chat.id);\n          }\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.profileContainer,\n      children: [_jsx(ShowAvatar, {\n        imageUrl: selectedImage,\n        profile: true\n      }), _jsx(Text, {\n        style: {\n          color: '#000000',\n          fontSize: Math.min(width * 0.03, height * 0.055),\n          textAlign: 'center',\n          marginBottom: 13,\n          fontFamily: 'Montserrat-Regular'\n        },\n        children: userText ? userText : user.name\n      }), buttons.map(function (data, index) {\n        return _jsx(View, {\n          style: {\n            width: '70%'\n          },\n          children: _jsx(BorderButton, {\n            data: data\n          })\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: styles.forwardContainer,\n      children: [(user == null ? void 0 : (_user$savedMessages = user.savedMessages) == null ? void 0 : _user$savedMessages.length) > 0 && _jsx(View, {\n        style: {\n          right: 50,\n          position: 'absolute',\n          zIndex: 1\n        },\n        children: _jsx(TouchableHighlight, {\n          onPress: handleClearForwardedMessages,\n          children: _jsx(DeleteSvg, {})\n        })\n      }), _jsx(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: user == null ? void 0 : (_user$savedMessages2 = user.savedMessages) == null ? void 0 : _user$savedMessages2.map(function (message) {\n          var _message$sender, _message$sender2, _message$sender3, _message$sender4;\n          return _jsx(View, {\n            style: {\n              marginBottom: 13\n            },\n            children: _jsx(ForwardMessage, {\n              data: {\n                imageUrl: (_message$sender = message.sender) == null ? void 0 : _message$sender.image,\n                nickname: (_message$sender2 = message.sender) == null ? void 0 : _message$sender2.name,\n                message: message.data,\n                own: ((_message$sender3 = message.sender) == null ? void 0 : _message$sender3.name) === user.name,\n                from: message.chat ? ((_message$sender4 = message.sender) == null ? void 0 : _message$sender4.name) === user.name ? message.chat.sender.name : message.chat.recipient.name : message.channel.name,\n                id: message.id\n              }\n            }, message.id)\n          });\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return setShowPopup(true);\n        },\n        children: _jsx(CreateSvg, {})\n      })\n    }), _jsx(Modal, {\n      visible: showPopup,\n      transparent: true,\n      children: _jsxs(View, {\n        style: styles.popupContainer,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u043D\\u0430\\u043B\\u0430\"\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13,\n            alignItems: 'center'\n          },\n          children: _jsx(DataInput, {\n            value: inputText.nickname,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                nickname: text\n              }));\n            },\n            placeholder: \"\",\n            type: \"nickname\",\n            flex: true\n          })\n        }), _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            return setShowPopup(false);\n          },\n          children: _jsx(HeaderButton, {\n            title: \"Создать\",\n            onPress: handleCreateChannel,\n            disabled: !isFormValid\n          })\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","View","Text","TouchableHighlight","Modal","TouchableOpacity","ScrollView","useWindowDimensions","useFocusEffect","CreateSvg","useStyles","SearchInput","HeaderButton","DataInput","SearchBody","ShowAvatar","BorderButton","ForwardMessage","ImageContext","AuthContext","MessageContext","DeleteSvg","setProfileNickname","getProfileNickname","jsx","_jsx","jsxs","_jsxs","MainAuthScreen","_ref","_user$savedMessages","_user$savedMessages2","navigation","styles","_useState","_useState2","_slicedToArray","showPopup","setShowPopup","_useState3","nickname","_useState4","inputText","setInputText","_useContext","user","updateUser","logout","_useState5","_useState6","userText","setUserText","username","password","updateUserCallback","updatedUser","_useContext2","selectedImage","_useWindowDimensions","width","height","fetchUserData","fetchProfileNickname","handleLogout","As","window","location","reload","_ref2","_asyncToGenerator","response","fetch","id","method","headers","btoa","ok","userData","json","console","log","error","alert","apply","arguments","_ref3","handleClearForwardedMessages","_ref4","isFormValid","buttons","onPress","_ref5","_objectDestructuringEmpty","navigate","text","handleCreateChannel","_ref6","body","JSON","stringify","name","channelName","channelResponse","style","containerMain","children","messageContainer","flex","scrollbarWidth","flexDirection","channels","map","channel","data","channelId","chats","chat","recipient","avatarUrl","sender","image","chatUser","main","profileContainer","imageUrl","profile","color","fontSize","Math","min","textAlign","marginBottom","fontFamily","index","forwardContainer","savedMessages","length","right","position","zIndex","message","_message$sender","_message$sender2","_message$sender3","_message$sender4","own","from","bottomLeft","visible","transparent","popupContainer","alignItems","value","setValue","_objectSpread","placeholder","type","title","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/test/screens/MainAuthScreen.js"],"sourcesContent":["import React, { useState, useContext, useEffect, useCallback } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView, useWindowDimensions } from 'react-native-web';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport SearchInput from '../components/inputs/searchInput/searchInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ForwardMessage from '../components/forwardMessage/forwardMessage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { MessageContext } from '../context/MessageContext';\r\nimport DeleteSvg from '../assets/icons/deleteSvg';\r\nimport { setProfileNickname, getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\n\r\nexport default function MainAuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user, updateUser, logout } = useContext(AuthContext);\r\n  const [userText, setUserText] = useState('');\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const updateUserCallback = useCallback(updatedUser => updateUser(updatedUser), [updateUser]);\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { width, height } = useWindowDimensions();\r\n\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchUserData();\r\n      fetchProfileNickname();\r\n    }, [])\r\n  );\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    As\r\n    window.location.reload();\r\n  }\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/users/${user.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        console.log(userData);\r\n        updateUserCallback(userData);\r\n      } else {\r\n        console.log('Не удалось подгрузить данные пользователя');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n  const handleClearForwardedMessages = async () => {\r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/saved_message/delete_all?user_id=${user?.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log(`Сообщения успешно удалены!`);\r\n        window.location.reload();\r\n      } else {\r\n        console.log(`Не удалось удалить сообщения!`);\r\n\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт'\r\n    },\r\n    {\r\n      onPress: handleLogout,\r\n      text: 'Выйти'\r\n    }\r\n  ];\r\n\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://backend-web-service-test.onrender.com/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const channelResponse = await response.json();\r\n        setShowPopup(false);\r\n        alert('Канал создан');\r\n        window.location.reload();\r\n      } else {\r\n        alert('Не удалось создать канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.messageContainer}>\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n          {user.channels.map((channel) => (\r\n            <SearchBody\r\n              key={channel.id}\r\n              data={{\r\n                username: channel.name,\r\n                onPress: () => navigation.navigate('Channel', { channelId: channel.id }),\r\n              }}\r\n            />\r\n          ))}\r\n          {user.chats.map((chat) => {\r\n            if (chat.recipient.name === user.name) {\r\n              return (\r\n                <SearchBody\r\n                  key={chat.id}\r\n                  data={{\r\n                    avatarUrl: chat.sender.image,\r\n                    username: chat.sender.name,\r\n                    onPress: () => navigation.navigate('Chat', { chatUser: chat.sender }),\r\n                    main: true,\r\n                    id: chat.id\r\n                  }}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <SearchBody\r\n                  key={chat.id}\r\n                  data={{\r\n                    avatarUrl: chat.recipient.image,\r\n                    username: chat.recipient.name,\r\n                    onPress: () => navigation.navigate('Chat', { chatUser: chat.recipient }),\r\n                    main: true,\r\n                    id: chat.id\r\n                  }}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={selectedImage} profile={true} />\r\n        <Text style={{\r\n          color: '#000000',\r\n          fontSize:  Math.min(width * 0.03, height * 0.055),\r\n          textAlign: 'center',\r\n          marginBottom: 13,\r\n          fontFamily: 'Montserrat-Regular',\r\n        }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.forwardContainer}>\r\n        {user?.savedMessages?.length > 0 && (\r\n          <View style={{ right: 50, position: 'absolute', zIndex: 1 }}>\r\n            <TouchableHighlight onPress={handleClearForwardedMessages}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          </View>\r\n        )}\r\n        <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n\r\n          {user?.savedMessages?.map((message) => {\r\n            return (\r\n              <View style={{ marginBottom: 13 }}>\r\n                <ForwardMessage\r\n                  key={message.id}\r\n                  data={{\r\n                    imageUrl: message.sender?.image,\r\n                    nickname: message.sender?.name,\r\n\r\n                    message: message.data,\r\n\r\n                    own: message.sender?.name === user.name,\r\n                    from: message.chat\r\n                    ? message.sender?.name === user.name\r\n                      ? message.chat.sender.name\r\n                      : message.chat.recipient.name\r\n                    : message.channel.name,\r\n                     id: message.id\r\n                  }}\r\n                />\r\n              </View>\r\n            );\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n          <CreateSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={\"\"}\r\n              type={\"nickname\"}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n            <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n            </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}