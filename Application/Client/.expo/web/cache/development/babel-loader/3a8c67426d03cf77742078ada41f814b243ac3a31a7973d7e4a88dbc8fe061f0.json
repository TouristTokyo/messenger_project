{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useStyles from \"./styles/greetingsScreen.module\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport BackSvg from \"../assets/icons/backSvg\";\nimport AuthContext from \"../context/AuthContext\";\nimport { setEmail } from \"../context/AsyncStorageUtil\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChangeEmailScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState({\n      email: '',\n      code: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    inputText = _useState2[0],\n    setInputText = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    receivedCode = _useState4[0],\n    setReceivedCode = _useState4[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    storeCurrentScreen = _useContext.storeCurrentScreen;\n  var username = 'admin';\n  var password = 'root';\n  useFocusEffect(React.useCallback(function () {\n    storeCurrentScreen('ChangeEmail');\n  }, []));\n  var isButtonDisabled = function isButtonDisabled() {\n    return !inputText.email || !inputText.code || inputText.code != receivedCode;\n  };\n  var isDisabled = function isDisabled() {\n    return !inputText.email;\n  };\n  var getCode = function getCode() {\n    var email = encodeURIComponent(inputText.email);\n    var apiUrl = \"http://localhost:8080/api/send_email?email=\" + email;\n    fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        Authorization: \"Basic \" + btoa(username + \":\" + password)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setReceivedCode(data);\n      if (data) {\n        alert('Код подтверждения был отправлен на указанную почту!');\n      } else {\n        alert('Не удалось отправить код');\n      }\n    }).catch(function (error) {\n      alert('Ошибка при подключении к серверу:', error);\n    });\n  };\n  var changeEmail = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!emailRegex.test(inputText.email)) {\n        alert('Не правильный формат почты');\n        return;\n      }\n      try {\n        var userId = user == null ? void 0 : user.id;\n        var email = encodeURIComponent(inputText.email);\n        var apiUrl = \"http://localhost:8080/api/users/\" + userId + \"/update/email?email=\" + email;\n        var response = yield fetch(apiUrl, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: \"Basic \" + btoa(username + \":\" + password)\n          }\n        });\n        if (response.ok) {\n          alert('Почта успешно обновлена');\n          setEmail(inputText.email);\n        } else {\n          alert('Не удалось обновить почту');\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу:', error);\n      }\n    });\n    return function changeEmail() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.textContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.email,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                email: text\n              }));\n            },\n            placeholder: \"Почта\",\n            type: \"email\",\n            flex: false\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13\n          },\n          children: _jsx(DataInput, {\n            value: inputText.code,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                code: text\n              }));\n            },\n            placeholder: \"Код\",\n            type: \"code\",\n            flex: false\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(HeaderButton, {\n          title: \"Изменить почту\",\n          onPress: changeEmail,\n          disabled: isButtonDisabled()\n        })\n      }), _jsx(View, {\n        style: {\n          marginBottom: 13\n        },\n        children: _jsx(HeaderButton, {\n          title: \"Получить код\",\n          onPress: getCode,\n          disabled: isDisabled()\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.topLeft,\n      children: _jsx(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('Profile');\n        },\n        children: _jsx(BackSvg, {})\n      })\n    })]\n  });\n}\nexport default ChangeEmailScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","Button","TouchableHighlight","Alert","useStyles","DataInput","HeaderButton","BackSvg","AuthContext","setEmail","useFocusEffect","jsx","_jsx","jsxs","_jsxs","ChangeEmailScreen","_ref","navigation","styles","_useState","email","code","_useState2","_slicedToArray","inputText","setInputText","_useState3","_useState4","receivedCode","setReceivedCode","_useContext","user","storeCurrentScreen","username","password","useCallback","isButtonDisabled","isDisabled","getCode","encodeURIComponent","apiUrl","fetch","method","headers","Authorization","btoa","then","response","json","data","alert","catch","error","changeEmail","_ref2","_asyncToGenerator","emailRegex","test","userId","id","ok","apply","arguments","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","type","flex","title","onPress","disabled","topLeft","navigate"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChangeEmailScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, Button, TouchableHighlight, Alert } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setEmail } from '../context/AsyncStorageUtil';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nfunction ChangeEmailScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n  const [receivedCode, setReceivedCode] = useState('');\r\n\r\n  const { user, storeCurrentScreen } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n        storeCurrentScreen('ChangeEmail')\r\n    }, [])\r\n);\r\n  const isButtonDisabled = () => {\r\n    return !inputText.email || !inputText.code || inputText.code != receivedCode;\r\n  };\r\n\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `http://localhost:8080/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReceivedCode(data);\r\n        if (data) {\r\n          alert('Код подтверждения был отправлен на указанную почту!');\r\n         \r\n        } else {\r\n          alert('Не удалось отправить код');\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Ошибка при подключении к серверу:', error);\r\n      });\r\n  };\r\n\r\n  const changeEmail = async () => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не правильный формат почты');\r\n      return;\r\n    }\r\n  try {\r\n    const userId = user?.id;\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `http://localhost:8080/api/users/${userId}/update/email?email=${email}`;\r\n\r\n    const response = await fetch(apiUrl, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert('Почта успешно обновлена');\r\n      setEmail(inputText.email);\r\n    } else {\r\n      alert('Не удалось обновить почту');\r\n    }\r\n  } catch (error) {\r\n    alert('Ошибка при подключении к серверу:', error);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={\"Почта\"}\r\n              type={\"email\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={\"Код\"}\r\n              type={\"code\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title={\"Изменить почту\"}\r\n            onPress={changeEmail}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title={\"Получить код\"}\r\n            onPress={getCode}\r\n            disabled={isDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangeEmailScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}