{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useContext, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport CreateSvg from \"../assets/icons/createSvg\";\nimport useStyles from \"./styles/mainAuthScreen.module\";\nimport HeaderButton from \"../components/buttons/headerButton\";\nimport DataInput from \"../components/inputs/textInput/textInput\";\nimport SearchBody from \"../components/searchBodies/searchBody\";\nimport ShowAvatar from \"../components/Avatar/ShowAvatar/showAvatar\";\nimport BorderButton from \"../components/buttons/borderButton\";\nimport ForwardMessage from \"../components/forwardMessage/forwardMessage\";\nimport { ImageContext } from \"../context/ImageContext\";\nimport AuthContext from \"../context/AuthContext\";\nimport DeleteSvg from \"../assets/icons/deleteSvg\";\nimport { getProfileNickname } from \"../context/AsyncStorageUtil\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MainAuthScreen(_ref) {\n  var _user$savedMessages, _user$savedMessages2;\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showPopup = _useState2[0],\n    setShowPopup = _useState2[1];\n  var _useState3 = useState({\n      nickname: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var _useContext = useContext(AuthContext),\n    user = _useContext.user,\n    updateUser = _useContext.updateUser,\n    logout = _useContext.logout;\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userText = _useState6[0],\n    setUserText = _useState6[1];\n  var username = 'admin';\n  var password = 'root';\n  var updateUserCallback = useCallback(function (updatedUser) {\n    return updateUser(updatedUser);\n  }, [updateUser]);\n  var _useContext2 = useContext(ImageContext),\n    selectedImage = _useContext2.selectedImage;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width,\n    height = _useWindowDimensions.height;\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setIsLoading = _useState8[1];\n  useFocusEffect(React.useCallback(function () {\n    fetchUserData();\n    fetchProfileNickname();\n  }, []));\n  var handleLogout = function handleLogout() {\n    logout();\n    window.location.reload();\n  };\n  var fetchUserData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      try {\n        var response = yield fetch(\"https://linking-api.onrender.com/api/users/\" + user.id, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Basic \" + btoa(username + \":\" + password)\n          }\n        });\n        if (response.ok) {\n          var userData = yield response.json();\n          updateUserCallback(userData);\n          setIsLoading(false);\n        } else {\n          console.log('Не удалось подгрузить данные пользователя');\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу', error);\n      }\n    });\n    return function fetchUserData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchProfileNickname = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var nickname = yield getProfileNickname();\n        if (nickname && nickname !== userText) {\n          setUserText(nickname);\n        }\n      } catch (error) {}\n    });\n    return function fetchProfileNickname() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleClearForwardedMessages = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      try {\n        var response = yield fetch(\"https://linking-api.onrender.com/api/saved_message/delete_all?user_id=\" + (user == null ? void 0 : user.id), {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Basic \" + btoa(username + \":\" + password)\n          }\n        });\n        if (response.ok) {\n          console.log(\"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0443\\u0434\\u0430\\u043B\\u0435\\u043D\\u044B!\");\n          window.location.reload();\n        } else {\n          console.log(\"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F!\");\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу', error);\n      }\n    });\n    return function handleClearForwardedMessages() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var isFormValid = inputText.nickname;\n  var buttons = [{\n    onPress: function onPress(_ref5) {\n      _objectDestructuringEmpty(_ref5);\n      return navigation.navigate('Profile');\n    },\n    text: 'Мой аккаунт'\n  }, {\n    onPress: handleLogout,\n    text: 'Выйти'\n  }];\n  var handleCreateChannel = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('https://linking-api.onrender.com/api/channels/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Basic \" + btoa(username + \":\" + password)\n          },\n          body: JSON.stringify({\n            username: user.name,\n            channelName: inputText.nickname\n          })\n        });\n        if (response.ok) {\n          setShowPopup(false);\n          alert('Канал создан');\n          window.location.reload();\n        } else {\n          alert('Не удалось создать канал');\n        }\n      } catch (error) {\n        alert('Ошибка при подключении к серверу', error);\n      }\n    });\n    return function handleCreateChannel() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.containerMain,\n    children: [_jsxs(View, {\n      style: styles.messageContainer,\n      children: [_jsx(View, {\n        style: styles.containerTop,\n        children: _jsx(Text, {\n          style: styles.headerText,\n          children: \"\\u0412\\u0430\\u0448\\u0438 \\u0447\\u0430\\u0442\\u044B\"\n        })\n      }), isLoading && _jsx(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"rgba(0, 118, 185, 0.35)\"\n        })\n      }), !isLoading && _jsx(_Fragment, {\n        children: user.chats.length > 0 ? _jsx(ScrollView, {\n          style: {\n            flex: 1,\n            scrollbarWidth: 0,\n            flexDirection: 'column'\n          },\n          children: user.chats.map(function (chat) {\n            if (chat.recipient.name === user.name) {\n              return _jsx(SearchBody, {\n                data: {\n                  avatarUrl: chat.sender.image,\n                  username: chat.sender.name,\n                  onPress: function onPress() {\n                    return navigation.navigate('Chat', {\n                      chatUser: chat.sender\n                    });\n                  },\n                  main: true,\n                  id: chat.id\n                }\n              }, chat.id);\n            } else {\n              return _jsx(SearchBody, {\n                data: {\n                  avatarUrl: chat.recipient.image,\n                  username: chat.recipient.name,\n                  onPress: function onPress() {\n                    return navigation.navigate('Chat', {\n                      chatUser: chat.recipient\n                    });\n                  },\n                  main: true,\n                  id: chat.id\n                }\n              }, chat.id);\n            }\n          })\n        }) : _jsx(View, {\n          style: styles.emptyContainer,\n          children: _jsx(Text, {\n            style: styles.emptyMessageText,\n            children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u0447\\u0430\\u0442\\u043E\\u0432\"\n          })\n        })\n      }), _jsx(View, {\n        style: styles.containerBottom,\n        children: _jsx(Text, {\n          style: styles.headerText,\n          children: \"\\u0412\\u0430\\u0448\\u0438 \\u043A\\u0430\\u043D\\u0430\\u043B\\u044B\"\n        })\n      }), isLoading && _jsx(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"rgba(0, 118, 185, 0.35)\"\n        })\n      }), !isLoading && _jsx(_Fragment, {\n        children: user.channels.length > 0 ? _jsx(ScrollView, {\n          style: {\n            flex: 1,\n            scrollbarWidth: 0,\n            flexDirection: 'column'\n          },\n          children: user.channels.map(function (channel) {\n            return _jsx(SearchBody, {\n              data: {\n                username: channel.name,\n                onPress: function onPress() {\n                  return navigation.navigate('Channel', {\n                    channelId: channel.id\n                  });\n                }\n              }\n            }, channel.id);\n          })\n        }) : _jsx(View, {\n          style: styles.emptyContainer,\n          children: _jsx(Text, {\n            style: styles.emptyMessageText,\n            children: \"\\u0412\\u044B \\u043D\\u0435 \\u0441\\u043E\\u0441\\u0442\\u043E\\u0438\\u0442\\u0435 \\u0432 \\u043A\\u0430\\u043A\\u0438\\u0445-\\u043B\\u0438\\u0431\\u043E \\u043A\\u0430\\u043D\\u0430\\u043B\\u0430\\u0445\"\n          })\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.profileContainer,\n      children: [_jsx(ShowAvatar, {\n        imageUrl: selectedImage,\n        profile: true\n      }), _jsx(Text, {\n        style: {\n          color: '#000000',\n          fontSize: Math.min(width * 0.03, height * 0.055),\n          textAlign: 'center',\n          marginBottom: 13,\n          fontFamily: 'Montserrat-Regular'\n        },\n        children: userText ? userText : user.name\n      }), buttons.map(function (data, index) {\n        return _jsx(View, {\n          style: {\n            width: '70%'\n          },\n          children: _jsx(BorderButton, {\n            data: data\n          })\n        }, index);\n      })]\n    }), _jsxs(View, {\n      style: styles.forwardContainer,\n      children: [_jsxs(View, {\n        style: styles.headerBar,\n        children: [_jsx(Text, {\n          style: styles.headerText,\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0451\\u043D\\u043D\\u044B\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\"\n        }), (user == null ? void 0 : (_user$savedMessages = user.savedMessages) == null ? void 0 : _user$savedMessages.length) > 0 && !isLoading && _jsx(TouchableHighlight, {\n          onPress: handleClearForwardedMessages,\n          children: _jsx(DeleteSvg, {})\n        })]\n      }), isLoading && _jsx(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"rgba(0, 118, 185, 0.35)\"\n        })\n      }), !isLoading && _jsx(_Fragment, {}), (user == null ? void 0 : (_user$savedMessages2 = user.savedMessages) == null ? void 0 : _user$savedMessages2.length) > 0 ? _jsx(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: user.savedMessages.map(function (message) {\n          var _message$sender, _message$sender2, _message$sender3, _message$chat$sender;\n          return _jsx(View, {\n            style: {\n              marginBottom: 13\n            },\n            children: _jsx(ForwardMessage, {\n              data: {\n                imageUrl: (_message$sender = message.sender) == null ? void 0 : _message$sender.image,\n                nickname: (_message$sender2 = message.sender) == null ? void 0 : _message$sender2.name,\n                message: message.data,\n                own: ((_message$sender3 = message.sender) == null ? void 0 : _message$sender3.name) === user.name,\n                from: message.chat ? ((_message$chat$sender = message.chat.sender) == null ? void 0 : _message$chat$sender.name) === user.name ? message.chat.recipient.name : message.chat.sender.name : message.channel.name,\n                id: message.id\n              }\n            }, message.id)\n          });\n        })\n      }) : _jsx(ScrollView, {\n        style: {\n          flex: 1,\n          scrollbarWidth: 0,\n          flexDirection: 'column'\n        },\n        children: _jsx(View, {\n          style: styles.emptyMessageContainer,\n          children: _jsx(Text, {\n            style: styles.emptyMessageText,\n            children: \"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0451\\u043D\\u043D\\u044B\\u0445 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439\"\n          })\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.bottomLeft,\n      children: _jsx(HeaderButton, {\n        title: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u043D\\u0430\\u043B\",\n        onPress: function onPress() {\n          return setShowPopup(true);\n        }\n      })\n    }), _jsx(Modal, {\n      visible: showPopup,\n      transparent: true,\n      children: _jsxs(View, {\n        style: styles.popupContainer,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u043D\\u0430\\u043B\\u0430\"\n        }), _jsx(View, {\n          style: {\n            marginBottom: 13,\n            alignItems: 'center'\n          },\n          children: _jsx(DataInput, {\n            value: inputText.nickname,\n            setValue: function setValue(text) {\n              return setInputText(_objectSpread(_objectSpread({}, inputText), {}, {\n                nickname: text\n              }));\n            },\n            placeholder: \"\",\n            type: \"nickname\",\n            flex: true\n          })\n        }), _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            return setShowPopup(false);\n          },\n          children: _jsx(HeaderButton, {\n            title: \"Создать\",\n            onPress: handleCreateChannel,\n            disabled: !isFormValid\n          })\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useContext","useCallback","View","Text","TouchableHighlight","Modal","ScrollView","useWindowDimensions","ActivityIndicator","useFocusEffect","CreateSvg","useStyles","HeaderButton","DataInput","SearchBody","ShowAvatar","BorderButton","ForwardMessage","ImageContext","AuthContext","DeleteSvg","getProfileNickname","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","MainAuthScreen","_ref","_user$savedMessages","_user$savedMessages2","navigation","styles","_useState","_useState2","_slicedToArray","showPopup","setShowPopup","_useState3","nickname","_useState4","inputText","setInputText","_useContext","user","updateUser","logout","_useState5","_useState6","userText","setUserText","username","password","updateUserCallback","updatedUser","_useContext2","selectedImage","_useWindowDimensions","width","height","_useState7","_useState8","isLoading","setIsLoading","fetchUserData","fetchProfileNickname","handleLogout","window","location","reload","_ref2","_asyncToGenerator","response","fetch","id","method","headers","btoa","ok","userData","json","console","log","error","alert","apply","arguments","_ref3","handleClearForwardedMessages","_ref4","isFormValid","buttons","onPress","_ref5","_objectDestructuringEmpty","navigate","text","handleCreateChannel","_ref6","body","JSON","stringify","name","channelName","style","containerMain","children","messageContainer","containerTop","headerText","flex","alignItems","justifyContent","size","color","chats","length","scrollbarWidth","flexDirection","map","chat","recipient","data","avatarUrl","sender","image","chatUser","main","emptyContainer","emptyMessageText","containerBottom","channels","channel","channelId","profileContainer","imageUrl","profile","fontSize","Math","min","textAlign","marginBottom","fontFamily","index","forwardContainer","headerBar","savedMessages","message","_message$sender","_message$sender2","_message$sender3","_message$chat$sender","own","from","emptyMessageContainer","bottomLeft","title","visible","transparent","popupContainer","value","setValue","_objectSpread","placeholder","type","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/MainAuthScreen.js"],"sourcesContent":["import React, { useState, useContext, useCallback } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, ScrollView, useWindowDimensions, ActivityIndicator } from 'react-native-web';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport ForwardMessage from '../components/forwardMessage/forwardMessage';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport DeleteSvg from '../assets/icons/deleteSvg';\r\nimport { getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\n\r\nexport default function MainAuthScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user, updateUser, logout } = useContext(AuthContext);\r\n  const [userText, setUserText] = useState('');\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const updateUserCallback = useCallback(updatedUser => updateUser(updatedUser), [updateUser]);\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const { width, height } = useWindowDimensions();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchUserData();\r\n      fetchProfileNickname();\r\n    }, [])\r\n  );\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    window.location.reload();\r\n  }\r\n\r\n  const fetchUserData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/users/${user.id}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        updateUserCallback(userData);\r\n        setIsLoading(false);\r\n      } else {\r\n        console.log('Не удалось подгрузить данные пользователя');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n  const handleClearForwardedMessages = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`https://linking-api.onrender.com/api/saved_message/delete_all?user_id=${user?.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(`Сообщения успешно удалены!`);\r\n        window.location.reload();\r\n      } else {\r\n        console.log(`Не удалось удалить сообщения!`);\r\n\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n\r\n\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт'\r\n    },\r\n    {\r\n      onPress: handleLogout,\r\n      text: 'Выйти'\r\n    }\r\n  ];\r\n\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://linking-api.onrender.com/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setShowPopup(false);\r\n        alert('Канал создан');\r\n        window.location.reload();\r\n      } else {\r\n        alert('Не удалось создать канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.messageContainer}>\r\n\r\n        <View style={styles.containerTop}>\r\n          <Text style={styles.headerText}>Ваши чаты</Text>\r\n        </View>\r\n        {isLoading && (\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <ActivityIndicator size=\"large\" color='rgba(0, 118, 185, 0.35)' />\r\n          </View>\r\n        )}\r\n\r\n        {!isLoading && (\r\n          <>\r\n            {user.chats.length > 0 ? (\r\n              <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                {user.chats.map((chat) => {\r\n                  if (chat.recipient.name === user.name) {\r\n                    return (\r\n                      <SearchBody\r\n                        key={chat.id}\r\n                        data={{\r\n                          avatarUrl: chat.sender.image,\r\n                          username: chat.sender.name,\r\n                          onPress: () => navigation.navigate('Chat', { chatUser: chat.sender }),\r\n                          main: true,\r\n                          id: chat.id\r\n                        }}\r\n                      />\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <SearchBody\r\n                        key={chat.id}\r\n                        data={{\r\n                          avatarUrl: chat.recipient.image,\r\n                          username: chat.recipient.name,\r\n                          onPress: () => navigation.navigate('Chat', { chatUser: chat.recipient }),\r\n                          main: true,\r\n                          id: chat.id\r\n                        }}\r\n                      />\r\n                    );\r\n                  }\r\n                })}\r\n              </ScrollView>\r\n            ) : (\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyMessageText}>У вас нет чатов</Text>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n\r\n\r\n        <View style={styles.containerBottom}>\r\n          <Text style={styles.headerText}>Ваши каналы</Text>\r\n        </View>\r\n        {isLoading && (\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <ActivityIndicator size=\"large\" color='rgba(0, 118, 185, 0.35)' />\r\n          </View>\r\n        )}\r\n        {!isLoading && (\r\n          <>\r\n            {user.channels.length > 0 ? (\r\n              <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                {user.channels.map((channel) => (\r\n                  <SearchBody\r\n                    key={channel.id}\r\n                    data={{\r\n                      username: channel.name,\r\n                      onPress: () => navigation.navigate('Channel', { channelId: channel.id }),\r\n                    }}\r\n                  />\r\n                ))}\r\n              </ScrollView>\r\n            ) : (\r\n              <View style={styles.emptyContainer}>\r\n                <Text style={styles.emptyMessageText}>Вы не состоите в каких-либо каналах</Text>\r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={selectedImage} profile={true} />\r\n        <Text style={{\r\n          color: '#000000',\r\n          fontSize: Math.min(width * 0.03, height * 0.055),\r\n          textAlign: 'center',\r\n          marginBottom: 13,\r\n          fontFamily: 'Montserrat-Regular',\r\n        }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.forwardContainer}>\r\n        <View style={styles.headerBar}>\r\n          <Text style={styles.headerText}>Сохранённые сообщения</Text>\r\n\r\n          {user?.savedMessages?.length > 0 && !isLoading && (\r\n            <TouchableHighlight onPress={handleClearForwardedMessages}>\r\n              <DeleteSvg />\r\n            </TouchableHighlight>\r\n          )}\r\n        </View>\r\n        {isLoading && (\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <ActivityIndicator size=\"large\" color='rgba(0, 118, 185, 0.35)' />\r\n          </View>\r\n        )}\r\n        {!isLoading &&(\r\n          <>\r\n          \r\n          </>\r\n        )}\r\n        { user?.savedMessages?.length > 0 ? (\r\n          <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n            {user.savedMessages.map((message) => {\r\n              return (\r\n                <View style={{ marginBottom: 13 }}>\r\n                  <ForwardMessage\r\n                    key={message.id}\r\n                    data={{\r\n                      imageUrl: message.sender?.image,\r\n                      nickname: message.sender?.name,\r\n                      message: message.data,\r\n                      own: message.sender?.name === user.name,\r\n                      from: message.chat\r\n                        ? message.chat.sender?.name === user.name\r\n                          ? message.chat.recipient.name\r\n                          : message.chat.sender.name\r\n                        : message.channel.name,\r\n                      id: message.id,\r\n                    }}\r\n                  />\r\n                </View>\r\n              );\r\n            })}\r\n          </ScrollView>\r\n        ) : (\r\n          <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n            <View style={styles.emptyMessageContainer}>\r\n              <Text style={styles.emptyMessageText}>У вас нет сохранённых сообщений</Text>\r\n            </View>\r\n          </ScrollView>\r\n        )}\r\n      </View>\r\n\r\n      <View style={styles.bottomLeft}>\r\n        <HeaderButton title='Создать канал' onPress={() => setShowPopup(true)}>\r\n        </HeaderButton>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={\"\"}\r\n              type={\"nickname\"}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n            <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n          </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}