{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectDestructuringEmpty from\"@babel/runtime/helpers/objectDestructuringEmpty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{useState,useContext,useEffect}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Modal from\"react-native-web/dist/exports/Modal\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import CreateSvg from\"../assets/icons/createSvg\";import useStyles from\"./styles/mainAuthScreen.module\";import HeaderButton from\"../components/buttons/headerButton\";import ShowAvatar from\"../components/Avatar/ShowAvatar/showAvatar\";import BorderButton from\"../components/buttons/borderButton\";import MessageBody from\"../components/messageBody/messageBody\";import MessageInput from\"../components/inputs/messageInput/messageInput\";import SettingsSvg from\"../assets/icons/settingsSvg\";import{ImageContext}from\"../context/ImageContext\";import AuthContext from\"../context/AuthContext\";import DataInput from\"../components/inputs/textInput/textInput\";import{useFocusEffect}from'@react-navigation/native';import{getProfileNickname}from\"../context/AsyncStorageUtil\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChannelScreen(_ref){var _channelData$messages;var navigation=_ref.navigation,route=_ref.route;var styles=useStyles();var channelId=route.params.channelId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPopup=_useState2[0],setShowPopup=_useState2[1];var _useState3=useState({nickname:''}),_useState4=_slicedToArray(_useState3,2),inputText=_useState4[0],setInputText=_useState4[1];var _useWindowDimensions=useWindowDimensions(),width=_useWindowDimensions.width,height=_useWindowDimensions.height;var _useContext=useContext(AuthContext),logout=_useContext.logout;var _useContext2=useContext(AuthContext),user=_useContext2.user;var _useContext3=useContext(ImageContext),selectedImage=_useContext3.selectedImage;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isMember=_useState6[0],setIsMember=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isDisable=_useState8[0],setIsDisable=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isAdmin=_useState10[0],setIsAdmin=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),userText=_useState12[0],setUserText=_useState12[1];var username='admin';var password='root';var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),channelData=_useState14[0],setChannelData=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),channelText=_useState16[0],setChannelText=_useState16[1];var _useState17=useState(true),_useState18=_slicedToArray(_useState17,2),shouldFetchChannelData=_useState18[0],setShouldFetchChannelData=_useState18[1];var fetchChannelData=function(){var _ref2=_asyncToGenerator(function*(){try{var response=yield fetch(\"https://linking-api.onrender.com/api/channels/\"+channelId,{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)}});if(response.ok){var _channelData$creator;var _channelData=yield response.json();var isCreator=(user==null?void 0:user.id)===((_channelData$creator=_channelData.creator)==null?void 0:_channelData$creator.id);var member=_channelData.members.find(function(member){return member.user.id===user.id;});var currentUser=_channelData.members.find(function(member){return member.user.id===user.id;});if(currentUser){var role=currentUser.role;if(role){if(role.admin!==undefined){setIsAdmin(role.admin);}}}setIsMember(member);setIsDisable(isCreator);setChannelData(_channelData);setChannelText(_channelData.channel.name);}else{}}catch(error){alert('Ошибка при подключении к серверу',error);}});return function fetchChannelData(){return _ref2.apply(this,arguments);};}();useFocusEffect(React.useCallback(function(){fetchProfileNickname();setShouldFetchChannelData(true);},[]));useEffect(function(){if(shouldFetchChannelData){fetchChannelData().then(function(){return setShouldFetchChannelData(false);}).catch(function(error){return alert('Не удалось подгрузить данные о канале',error);});}},[shouldFetchChannelData]);useEffect(function(){var intervalId=setInterval(function(){setShouldFetchChannelData(true);},1000);return function(){return clearInterval(intervalId);};},[]);var handleMessageSent=function handleMessageSent(){setShouldFetchChannelData(true);};var fetchProfileNickname=function(){var _ref3=_asyncToGenerator(function*(){try{var nickname=yield getProfileNickname();if(nickname&&nickname!==userText){setUserText(nickname);}}catch(error){console.log('Ошибка при подгрузке никнейма',error);}});return function fetchProfileNickname(){return _ref3.apply(this,arguments);};}();var handleLogout=function handleLogout(){console.log('trigger');logout();window.location.reload();};var isFormValid=inputText.nickname;var buttons=[{onPress:function onPress(_ref4){_objectDestructuringEmpty(_ref4);return navigation.navigate('Profile');},text:'Мой аккаунт'},{onPress:handleLogout,text:'Выйти'}];var handleJoinLeave=function(){var _ref5=_asyncToGenerator(function*(){try{var name=userText||user.name;var channelName=channelText;var apiUrl=isMember?\"https://linking-api.onrender.com/api/channels/\"+channelId+\"/leave?username=\"+name:\"https://linking-api.onrender.com/api/channels/join?username=\"+name+\"&channel_name=\"+channelName;var response=yield fetch(apiUrl,{method:isMember?'DELETE':'POST',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)}});if(response.ok){setIsMember(function(prevIsMember){return!prevIsMember;});alert(isMember?'Вы покинули канал':'Вы присоединились к каналу');window.location.reload();}else{alert(isMember?'Не удалось покинуть канал':'Не удалось присоединиться к каналу');}}catch(error){alert('Ошибка при подключении к серверу',error);}});return function handleJoinLeave(){return _ref5.apply(this,arguments);};}();var imageSource=selectedImage||user&&user.image;var handleCreateChannel=function(){var _ref6=_asyncToGenerator(function*(){try{var response=yield fetch('https://linking-api.onrender.com/api/channels/create',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)},body:JSON.stringify({username:user.name,channelName:inputText.nickname})});if(response.ok){setShowPopup(false);alert('Канал создан');window.location.reload();}else{alert('Не удалось создать канал');}}catch(error){alert('Ошибка при подключении к серверу:',error);}});return function handleCreateChannel(){return _ref6.apply(this,arguments);};}();return _jsxs(View,{style:styles.containerMain,children:[_jsxs(View,{style:styles.barChanContainer,children:[_jsx(Text,{style:styles.barText,children:channelText}),_jsx(View,{children:_jsx(HeaderButton,{title:isMember?'Покинуть':'Присоединиться',onPress:handleJoinLeave,disabled:isDisable})}),isMember&&isAdmin&&_jsx(View,{style:{marginRight:20},children:_jsx(TouchableHighlight,{onPress:function onPress(_ref7){_objectDestructuringEmpty(_ref7);return navigation.navigate('Settings',{channelId:channelData.channel.id});},children:_jsx(SettingsSvg,{})})})]}),_jsxs(View,{style:styles.profileContainer,children:[_jsx(ShowAvatar,{imageUrl:imageSource,profile:true}),_jsx(Text,{style:{color:'#000000',fontSize:Math.min(width*0.03,height*0.055),textAlign:'center',marginBottom:13,fontFamily:'Montserrat-Regular'},children:userText?userText:user.name}),buttons.map(function(data,index){return _jsx(View,{style:{width:'70%'},children:_jsx(BorderButton,{data:data})},index);})]}),_jsx(View,{style:styles.historyContainer,children:_jsx(ScrollView,{style:{flex:1,scrollbarWidth:0,flexDirection:'column'},children:channelData==null?void 0:(_channelData$messages=channelData.messages)==null?void 0:_channelData$messages.map(function(message){var _message$sender,_matchingMember$role,_message$sender2,_message$sender3,_message$sender4;var senderId=(_message$sender=message.sender)==null?void 0:_message$sender.id;var matchingMember=channelData.members.find(function(member){return member.user.id===senderId;});var role=matchingMember==null?void 0:(_matchingMember$role=matchingMember.role)==null?void 0:_matchingMember$role.name;return _jsx(MessageBody,{data:{imageUrl:(_message$sender2=message.sender)==null?void 0:_message$sender2.image,nickname:(_message$sender3=message.sender)==null?void 0:_message$sender3.name,role:role,message:message.data,date:message.date,own:((_message$sender4=message.sender)==null?void 0:_message$sender4.name)===user.name,channel:true,unauth:false,ident:message.id},currentUser:user},message.id);})})}),isMember&&_jsx(View,{style:styles.sendContainer,children:_jsx(MessageInput,{channel:true,curuser:userText?userText:user.name,chanInf:channelData,onMessageSent:handleMessageSent})}),_jsx(View,{style:styles.bottomLeft,children:_jsx(TouchableHighlight,{onPress:function onPress(){return setShowPopup(true);},children:_jsx(CreateSvg,{})})}),_jsx(Modal,{visible:showPopup,transparent:true,children:_jsxs(View,{style:styles.popupContainer,children:[_jsx(Text,{style:styles.text,children:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u043D\\u0430\\u043B\\u0430\"}),_jsx(View,{style:{marginBottom:13,alignItems:'center'},children:_jsx(DataInput,{value:inputText.nickname,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{nickname:text}));},placeholder:'',type:'nickname',flex:true})}),_jsx(TouchableHighlight,{onPress:function onPress(){return setShowPopup(false);},children:_jsx(HeaderButton,{title:\"Создать\",onPress:handleCreateChannel,disabled:!isFormValid})})]})})]});}","map":{"version":3,"names":["React","useState","useContext","useEffect","View","Text","TouchableHighlight","Modal","ScrollView","useWindowDimensions","CreateSvg","useStyles","HeaderButton","ShowAvatar","BorderButton","MessageBody","MessageInput","SettingsSvg","ImageContext","AuthContext","DataInput","useFocusEffect","getProfileNickname","jsx","_jsx","jsxs","_jsxs","ChannelScreen","_ref","_channelData$messages","navigation","route","styles","channelId","params","_useState","_useState2","_slicedToArray","showPopup","setShowPopup","_useState3","nickname","_useState4","inputText","setInputText","_useWindowDimensions","width","height","_useContext","logout","_useContext2","user","_useContext3","selectedImage","_useState5","_useState6","isMember","setIsMember","_useState7","_useState8","isDisable","setIsDisable","_useState9","_useState10","isAdmin","setIsAdmin","_useState11","_useState12","userText","setUserText","username","password","_useState13","_useState14","channelData","setChannelData","_useState15","_useState16","channelText","setChannelText","_useState17","_useState18","shouldFetchChannelData","setShouldFetchChannelData","fetchChannelData","_ref2","_asyncToGenerator","response","fetch","method","headers","btoa","ok","_channelData$creator","json","isCreator","id","creator","member","members","find","currentUser","role","admin","undefined","channel","name","error","alert","apply","arguments","useCallback","fetchProfileNickname","then","catch","intervalId","setInterval","clearInterval","handleMessageSent","_ref3","console","log","handleLogout","window","location","reload","isFormValid","buttons","onPress","_ref4","_objectDestructuringEmpty","navigate","text","handleJoinLeave","_ref5","channelName","apiUrl","prevIsMember","imageSource","image","handleCreateChannel","_ref6","body","JSON","stringify","style","containerMain","children","barChanContainer","barText","title","disabled","marginRight","_ref7","profileContainer","imageUrl","profile","color","fontSize","Math","min","textAlign","marginBottom","fontFamily","map","data","index","historyContainer","flex","scrollbarWidth","flexDirection","messages","message","_message$sender","_matchingMember$role","_message$sender2","_message$sender3","_message$sender4","senderId","sender","matchingMember","date","own","unauth","ident","sendContainer","curuser","chanInf","onMessageSent","bottomLeft","visible","transparent","popupContainer","alignItems","value","setValue","_objectSpread","placeholder","type"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChannelScreen.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, ScrollView, useWindowDimensions } from 'react-native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport SettingsSvg from '../assets/icons/settingsSvg';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport {  getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\nexport default function ChannelScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n    });\r\n    const { width, height } = useWindowDimensions();\r\n    const { logout } = useContext(AuthContext);\r\n    const { user } = useContext(AuthContext);\r\n    const { selectedImage } = useContext(ImageContext);\r\n    const [isMember, setIsMember] = useState(false);\r\n    const [isDisable, setIsDisable] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [userText, setUserText] = useState('');\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n    const [channelText, setChannelText] = useState('');\r\n    const [shouldFetchChannelData, setShouldFetchChannelData] = useState(true);\r\n\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://linking-api.onrender.com/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n                const isCreator = user?.id === channelData.creator?.id;\r\n                const member = channelData.members.find(member => member.user.id === user.id);\r\n                const currentUser = channelData.members.find(member => member.user.id === user.id);\r\n\r\n                if (currentUser) {\r\n                    const { role } = currentUser;\r\n                    if (role) {\r\n                        if (role.admin !== undefined) {\r\n                            setIsAdmin(role.admin);\r\n                        }\r\n                    }\r\n                }\r\n                setIsMember(member);\r\n                setIsDisable(isCreator);\r\n                setChannelData(channelData);\r\n                setChannelText(channelData.channel.name);\r\n            } else {\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу', error);\r\n        }\r\n    };\r\n\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchProfileNickname();\r\n            setShouldFetchChannelData(true);\r\n        }, [])\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (shouldFetchChannelData) {\r\n            fetchChannelData()\r\n                .then(() => setShouldFetchChannelData(false))\r\n                .catch((error) => alert('Не удалось подгрузить данные о канале', error));\r\n        }\r\n    }, [shouldFetchChannelData]);\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setShouldFetchChannelData(true);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    const handleMessageSent = () => {\r\n        setShouldFetchChannelData(true);\r\n    };\r\n\r\n    const fetchProfileNickname = async () => {\r\n        try {\r\n            const nickname = await getProfileNickname();\r\n            if (nickname && nickname !== userText) {\r\n                setUserText(nickname);\r\n            }\r\n        } catch (error) {\r\n            console.log('Ошибка при подгрузке никнейма', error);\r\n        }\r\n    };\r\n    const handleLogout = () => {\r\n        console.log('trigger');\r\n        logout();\r\n        window.location.reload();\r\n      }\r\n    const isFormValid = inputText.nickname;\r\n    const buttons = [\r\n        {\r\n            onPress: ({ }) => navigation.navigate('Profile'),\r\n            text: 'Мой аккаунт',\r\n        },\r\n        {\r\n            onPress: handleLogout,\r\n            text: 'Выйти',\r\n        },\r\n    ];\r\n\r\n    const handleJoinLeave = async () => {\r\n        try {\r\n            const name = userText || user.name;\r\n            const channelName = channelText;\r\n            const apiUrl = isMember\r\n                ? `https://linking-api.onrender.com/api/channels/${channelId}/leave?username=${name}`\r\n                : `https://linking-api.onrender.com/api/channels/join?username=${name}&channel_name=${channelName}`;\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: isMember ? 'DELETE' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                setIsMember((prevIsMember) => !prevIsMember);\r\n                alert(isMember ? 'Вы покинули канал' : 'Вы присоединились к каналу');\r\n                window.location.reload();\r\n            } else {\r\n                alert(isMember ? 'Не удалось покинуть канал' : 'Не удалось присоединиться к каналу');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу', error);\r\n        }\r\n    };\r\n\r\n    const imageSource = selectedImage || (user && user.image);\r\n    const handleCreateChannel = async () => {\r\n        try {\r\n            const response = await fetch('https://linking-api.onrender.com/api/channels/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    username: user.name,\r\n                    channelName: inputText.nickname,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setShowPopup(false);\r\n                alert('Канал создан');\r\n                window.location.reload();\r\n            } else {\r\n                alert('Не удалось создать канал');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelText}</Text>\r\n                <View>\r\n                    <HeaderButton title={isMember ? 'Покинуть' : 'Присоединиться'} onPress={handleJoinLeave} disabled={isDisable} />\r\n                </View>\r\n                {isMember && isAdmin && (\r\n                    <View style={{ marginRight: 20 }}>\r\n                        <TouchableHighlight onPress={({ }) => navigation.navigate('Settings', { channelId: channelData.channel.id })}>\r\n                            <SettingsSvg />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n                )}\r\n            </View>\r\n            <View style={styles.profileContainer}>\r\n                <ShowAvatar imageUrl={imageSource} profile={true} />\r\n                <Text style={{ color: '#000000', fontSize:  Math.min(width * 0.03, height * 0.055), textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n                {buttons.map((data, index) => (\r\n                    <View style={{ width: '70%' }} key={index}>\r\n                        <BorderButton  data={data} />\r\n                    </View>\r\n                ))}\r\n            </View>\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView\r\n                    style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                    {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: message.sender?.name === user.name,\r\n                                    channel: true,\r\n                                    unauth: false,\r\n                                    ident: message.id\r\n                                }}\r\n                                currentUser={user}\r\n                            />\r\n                        );\r\n                    })}\r\n\r\n                </ScrollView>\r\n            </View>\r\n            {isMember && (\r\n                <View style={styles.sendContainer}>\r\n                    <MessageInput channel={true} curuser={userText ? userText : user.name} chanInf={channelData} onMessageSent={handleMessageSent} />\r\n                </View>\r\n            )}\r\n            <View style={styles.bottomLeft}>\r\n                <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n                    <CreateSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n            <Modal visible={showPopup} transparent={true}>\r\n                <View style={styles.popupContainer}>\r\n                    <Text style={styles.text}>Название канала</Text>\r\n                    <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n                        <DataInput\r\n                            value={inputText.nickname}\r\n                            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n                            placeholder={''}\r\n                            type={'nickname'}\r\n                            flex={true}\r\n                        />\r\n                    </View>\r\n                    <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n                        <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}