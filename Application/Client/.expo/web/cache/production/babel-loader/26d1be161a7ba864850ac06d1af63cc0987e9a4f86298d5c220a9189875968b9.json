{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{useState,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import useStyles from\"./styles/greetingsScreen.module\";import DataInput from\"../components/inputs/textInput/textInput\";import HeaderButton from\"../components/buttons/headerButton\";import BackSvg from\"../assets/icons/backSvg\";import AuthContext from\"../context/AuthContext\";import{useFocusEffect}from'@react-navigation/native';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChangePasswordScreen(_ref){var navigation=_ref.navigation;var styles=useStyles();var _useState=useState({newPassword:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var username='admin';var password='root';var _useContext=useContext(AuthContext),user=_useContext.user,storeCurrentScreen=_useContext.storeCurrentScreen;var id=user==null?void 0:user.id;useFocusEffect(React.useCallback(function(){storeCurrentScreen('ChangePassword');},[]));var isButtonDisabled=function isButtonDisabled(){return!inputText.newPassword||!inputText.password||!inputText.confirmPassword;};var handleUpdatePassword=function(){var _ref2=_asyncToGenerator(function*(){if(inputText.newPassword!==inputText.confirmPassword){return alert('Новый пароль не совпадает с полем полем подтверждения');}var passwordRegex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;if(!passwordRegex.test(inputText.password)&&!passwordRegex.test(inputText.newPassword)){alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');return;}var id=user==null?void 0:user.id;var queryParams=new URLSearchParams({last_password:inputText.password,new_password:inputText.newPassword});try{var response=yield fetch(\"https://backend-web-service-test.onrender.com/api/users/\"+id+\"/update/password?\"+queryParams.toString(),{method:'PUT',headers:{'Content-Type':'application/json',Authorization:\"Basic \"+btoa(username+\":\"+password)}});if(response.ok){alert('Пароль обновлен');}else{alert('Не удалось обновить пароль');}}catch(error){alert('Ошибка при подключении к серверу:',error);}});return function handleUpdatePassword(){return _ref2.apply(this,arguments);};}();return _jsxs(View,{style:styles.containerMain,children:[_jsxs(View,{style:styles.textContainer,children:[_jsxs(View,{style:styles.inputContainer,children:[_jsx(View,{style:{marginBottom:13},children:_jsx(DataInput,{value:inputText.password,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{password:text}));},placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",type:\"password\",flex:false})}),_jsx(View,{style:{marginBottom:13},children:_jsx(DataInput,{value:inputText.newPassword,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{newPassword:text}));},placeholder:\"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",type:\"password\",flex:false})}),_jsx(View,{style:{marginBottom:13},children:_jsx(DataInput,{value:inputText.confirmPassword,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{confirmPassword:text}));},placeholder:\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",type:\"password\",flex:false})})]}),_jsx(View,{children:_jsx(HeaderButton,{title:\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",onPress:handleUpdatePassword,disabled:isButtonDisabled()})})]}),_jsx(View,{style:styles.topLeft,children:_jsx(TouchableHighlight,{onPress:function onPress(){return navigation.navigate('Profile');},children:_jsx(BackSvg,{})})})]});}export default ChangePasswordScreen;","map":{"version":3,"names":["React","useState","useContext","View","TouchableHighlight","useStyles","DataInput","HeaderButton","BackSvg","AuthContext","useFocusEffect","jsx","_jsx","jsxs","_jsxs","ChangePasswordScreen","_ref","navigation","styles","_useState","newPassword","password","confirmPassword","_useState2","_slicedToArray","inputText","setInputText","username","_useContext","user","storeCurrentScreen","id","useCallback","isButtonDisabled","handleUpdatePassword","_ref2","_asyncToGenerator","alert","passwordRegex","test","queryParams","URLSearchParams","last_password","new_password","response","fetch","toString","method","headers","Authorization","btoa","ok","error","apply","arguments","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","type","flex","title","onPress","disabled","topLeft","navigate"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChangePasswordScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, TouchableHighlight } from 'react-native';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nfunction ChangePasswordScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    newPassword: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const { user, storeCurrentScreen } = useContext(AuthContext);\r\n  const id = user?.id; \r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n        storeCurrentScreen('ChangePassword')\r\n    }, [])\r\n);\r\n  const isButtonDisabled = () => {\r\n    return (\r\n      !inputText.newPassword ||\r\n      !inputText.password ||\r\n      !inputText.confirmPassword \r\n    );\r\n  };\r\n\r\n  const handleUpdatePassword = async () => {\r\n    if (inputText.newPassword !== inputText.confirmPassword) {\r\n      return alert('Новый пароль не совпадает с полем полем подтверждения');\r\n    }\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\r\n    if (!passwordRegex.test(inputText.password)&& !passwordRegex.test(inputText.newPassword)) {\r\n      alert('Неправильный формат пароля: минимум 8 символов в длину, должен содержать минимум одну заглавную и строчную букву, минимум одну цифру, также может содержать специальный символы( !@#$%^&*)');\r\n      return;\r\n    }\r\n    const id = user?.id;\r\n    const queryParams = new URLSearchParams({\r\n      last_password: inputText.password,\r\n      new_password: inputText.newPassword,\r\n    });\r\n  \r\n    try {\r\n      const response = await fetch(`https://backend-web-service-test.onrender.com/api/users/${id}/update/password?${queryParams.toString()}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        alert('Пароль обновлен');\r\n      } else {\r\n        alert('Не удалось обновить пароль');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.password}\r\n              setValue={(text) => setInputText({ ...inputText, password: text })}\r\n              placeholder=\"Пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.newPassword}\r\n              setValue={(text) => setInputText({ ...inputText, newPassword: text })}\r\n              placeholder=\"Новый пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.confirmPassword}\r\n              setValue={(text) => setInputText({ ...inputText, confirmPassword: text })}\r\n              placeholder=\"Подтвердить пароль\"\r\n              type=\"password\"\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title=\"Изменить пароль\"\r\n            onPress={handleUpdatePassword}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangePasswordScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}