{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectDestructuringEmpty from\"@babel/runtime/helpers/objectDestructuringEmpty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{useState,useContext,useEffect}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Modal from\"react-native-web/dist/exports/Modal\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import CreateSvg from\"../assets/icons/createSvg\";import useStyles from\"./styles/mainAuthScreen.module\";import HeaderButton from\"../components/buttons/headerButton\";import DataInput from\"../components/inputs/textInput/textInput\";import SearchBody from\"../components/searchBodies/searchBody\";import ShowAvatar from\"../components/Avatar/ShowAvatar/showAvatar\";import BorderButton from\"../components/buttons/borderButton\";import MessageBody from\"../components/messageBody/messageBody\";import MessageInput from\"../components/inputs/messageInput/messageInput\";import{ImageContext}from\"../context/ImageContext\";import AuthContext from\"../context/AuthContext\";import AsyncStorage from'@react-native-async-storage/async-storage';import{useFocusEffect}from'@react-navigation/native';import{getProfileNickname}from\"../context/AsyncStorageUtil\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChatScreen(_ref){var navigation=_ref.navigation,route=_ref.route;var _useWindowDimensions=useWindowDimensions(),width=_useWindowDimensions.width,height=_useWindowDimensions.height;var chatUser=route.params.chatUser;var styles=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPopup=_useState2[0],setShowPopup=_useState2[1];var _useState3=useState({nickname:''}),_useState4=_slicedToArray(_useState3,2),inputText=_useState4[0],setInputText=_useState4[1];var _useContext=useContext(AuthContext),user=_useContext.user;var _useContext2=useContext(AuthContext),logout=_useContext2.logout;var _useContext3=useContext(ImageContext),selectedImage=_useContext3.selectedImage;var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),messages=_useState6[0],setMessages=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),chatData=_useState8[0],setChatData=_useState8[1];var username='admin';var password='root';var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),userText=_useState10[0],setUserText=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),isLoading=_useState12[0],setIsLoading=_useState12[1];var handleCreateChannel=function(){var _ref2=_asyncToGenerator(function*(){try{var response=yield fetch('https://linking-api.onrender.com/api/channels/create',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)},body:JSON.stringify({username:user.name,channelName:inputText.nickname})});if(response.ok){setShowPopup(false);alert('Канал создан');window.location.reload();}else{alert('Не удалось создать канал');}}catch(error){alert('Ошибка при подключении к серверу',error);}});return function handleCreateChannel(){return _ref2.apply(this,arguments);};}();var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),shouldFetchChatData=_useState14[0],setShouldFetchChatData=_useState14[1];useFocusEffect(React.useCallback(function(){fetchProfileNickname();setShouldFetchChatData(true);},[]));useEffect(function(){if(shouldFetchChatData){fetchChatData().then(function(){return setShouldFetchChatData(false);}).catch(function(error){return alert('Ошибка при подключении к серверу:',error);});}},[shouldFetchChatData]);useEffect(function(){var intervalId=setInterval(function(){setShouldFetchChatData(true);},1000);return function(){return clearInterval(intervalId);};},[]);var fetchChatData=function(){var _ref3=_asyncToGenerator(function*(){var firstUser=user.name;var secondUser=chatUser.name;var url=\"https://linking-api.onrender.com/api/chats/usernames?first_user=\"+firstUser+\"&second_user=\"+secondUser;try{var response=yield fetch(url,{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)}});if(response.ok){var _chatData=yield response.json();setChatData(_chatData);setIsLoading(false);}else{throw new Error('Ошибка при подгрузке чата, возможно его еще не существует');}}catch(error){}});return function fetchChatData(){return _ref3.apply(this,arguments);};}();var handleMessageSent=function handleMessageSent(){setShouldFetchChatData(true);};var handleLogout=function handleLogout(){logout();window.location.reload();};var fetchProfileNickname=function(){var _ref4=_asyncToGenerator(function*(){try{var nickname=yield getProfileNickname();if(nickname&&nickname!==userText){setUserText(nickname);}}catch(error){console.log('Ошибка при подгрузке никнейма',error);}});return function fetchProfileNickname(){return _ref4.apply(this,arguments);};}();var imageSource=selectedImage||user&&user.image;var isFormValid=inputText.nickname;var buttons=[{onPress:function onPress(_ref5){_objectDestructuringEmpty(_ref5);return navigation.navigate('Profile');},text:'Мой аккаунт'},{onPress:handleLogout,text:'Выйти'}];return _jsxs(View,{style:styles.containerMain,children:[_jsx(View,{style:styles.barContainer,children:_jsx(SearchBody,{data:{avatarUrl:chatUser.image,username:chatUser.name,onPress:fetchChatData}})}),_jsxs(View,{style:styles.profileContainer,children:[_jsx(ShowAvatar,{imageUrl:imageSource,profile:true}),_jsx(Text,{style:{color:'#000000',fontSize:Math.min(width*0.03,height*0.055),textAlign:'center',marginBottom:13,fontFamily:'Montserrat-Regular'},children:userText?userText:user.name}),buttons.map(function(data,index){return _jsx(View,{style:{width:'70%'},children:_jsx(BorderButton,{data:data})},index);})]}),_jsxs(View,{style:styles.historyContainer,children:[isLoading&&_jsx(View,{style:{flex:1,alignItems:'center',justifyContent:'center'},children:_jsx(ActivityIndicator,{size:\"large\",color:\"rgba(0, 118, 185, 0.35)\"})}),!isLoading&&_jsx(ScrollView,{style:{flex:1,scrollbarWidth:0,flexDirection:'column'},children:chatData==null?void 0:chatData.map(function(message){var _message$sender,_message$sender2;return _jsx(MessageBody,{data:{imageUrl:(_message$sender=message.sender)==null?void 0:_message$sender.image,nickname:message.sender.name,message:message.data,date:message.date,own:((_message$sender2=message.sender)==null?void 0:_message$sender2.name)===user.name,channel:false,unauth:false,ident:message.id},currentUser:user},message.id);})})]}),_jsx(View,{style:styles.sendContainer,children:_jsx(MessageInput,{channel:false,curuser:userText?userText:user.name,chanInf:chatUser.name,onMessageSent:handleMessageSent})}),_jsx(View,{style:styles.bottomLeft,children:_jsx(HeaderButton,{title:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u043D\\u0430\\u043B\",onPress:function onPress(){return setShowPopup(true);}})}),_jsx(Modal,{visible:showPopup,transparent:true,children:_jsxs(View,{style:styles.popupContainer,children:[_jsx(Text,{style:styles.text,children:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u043D\\u0430\\u043B\\u0430\"}),_jsx(View,{style:{marginBottom:13,alignItems:'center'},children:_jsx(DataInput,{value:inputText.nickname,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{nickname:text}));},placeholder:'',type:'nickname',flex:true})}),_jsx(View,{children:_jsx(TouchableHighlight,{onPress:function onPress(){return setShowPopup(false);},children:_jsx(HeaderButton,{title:\"Создать\",onPress:handleCreateChannel,disabled:!isFormValid})})})]})})]});}","map":{"version":3,"names":["React","useState","useContext","useEffect","View","Text","TouchableHighlight","Modal","ScrollView","useWindowDimensions","ActivityIndicator","CreateSvg","useStyles","HeaderButton","DataInput","SearchBody","ShowAvatar","BorderButton","MessageBody","MessageInput","ImageContext","AuthContext","AsyncStorage","useFocusEffect","getProfileNickname","jsx","_jsx","jsxs","_jsxs","ChatScreen","_ref","navigation","route","_useWindowDimensions","width","height","chatUser","params","styles","_useState","_useState2","_slicedToArray","showPopup","setShowPopup","_useState3","nickname","_useState4","inputText","setInputText","_useContext","user","_useContext2","logout","_useContext3","selectedImage","_useState5","_useState6","messages","setMessages","_useState7","_useState8","chatData","setChatData","username","password","_useState9","_useState10","userText","setUserText","_useState11","_useState12","isLoading","setIsLoading","handleCreateChannel","_ref2","_asyncToGenerator","response","fetch","method","headers","btoa","body","JSON","stringify","name","channelName","ok","alert","window","location","reload","error","apply","arguments","_useState13","_useState14","shouldFetchChatData","setShouldFetchChatData","useCallback","fetchProfileNickname","fetchChatData","then","catch","intervalId","setInterval","clearInterval","_ref3","firstUser","secondUser","url","json","Error","handleMessageSent","handleLogout","_ref4","console","log","imageSource","image","isFormValid","buttons","onPress","_ref5","_objectDestructuringEmpty","navigate","text","style","containerMain","children","barContainer","data","avatarUrl","profileContainer","imageUrl","profile","color","fontSize","Math","min","textAlign","marginBottom","fontFamily","map","index","historyContainer","flex","alignItems","justifyContent","size","scrollbarWidth","flexDirection","message","_message$sender","_message$sender2","sender","date","own","channel","unauth","ident","id","currentUser","sendContainer","curuser","chanInf","onMessageSent","bottomLeft","title","visible","transparent","popupContainer","value","setValue","_objectSpread","placeholder","type","disabled"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChatScreen.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, ScrollView, useWindowDimensions, ActivityIndicator } from 'react-native-web';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport SearchBody from '../components/searchBodies/searchBody';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\nexport default function ChatScreen({ navigation, route }) {\r\n  const { width, height } = useWindowDimensions();\r\n  const { chatUser } = route.params;\r\n  const styles = useStyles();\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [inputText, setInputText] = useState({\r\n    nickname: '',\r\n  });\r\n  const { user } = useContext(AuthContext);\r\n  const { logout } = useContext(AuthContext);\r\n  const { selectedImage } = useContext(ImageContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatData, setChatData] = useState([]);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const [userText, setUserText] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleCreateChannel = async () => {\r\n    try {\r\n      const response = await fetch('https://linking-api.onrender.com/api/channels/create', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.name,\r\n          channelName: inputText.nickname,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setShowPopup(false);\r\n        alert('Канал создан');\r\n        window.location.reload();\r\n      } else {\r\n        alert('Не удалось создать канал');\r\n      }\r\n    } catch (error) {\r\n      alert('Ошибка при подключении к серверу', error);\r\n    }\r\n  };\r\n  const [shouldFetchChatData, setShouldFetchChatData] = useState(true);\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      fetchProfileNickname();\r\n      setShouldFetchChatData(true);\r\n    }, [])\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (shouldFetchChatData) {\r\n      fetchChatData()\r\n        .then(() => setShouldFetchChatData(false))\r\n        .catch((error) => alert('Ошибка при подключении к серверу:', error))\r\n    }\r\n  }, [shouldFetchChatData]);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setShouldFetchChatData(true);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const fetchChatData = async () => {\r\n    const firstUser = user.name;\r\n    const secondUser = chatUser.name;\r\n    const url = `https://linking-api.onrender.com/api/chats/usernames?first_user=${firstUser}&second_user=${secondUser}`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const chatData = await response.json();\r\n        setChatData(chatData);\r\n        setIsLoading(false);\r\n      } else {\r\n        throw new Error('Ошибка при подгрузке чата, возможно его еще не существует');\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  };\r\n\r\n  const handleMessageSent = () => {\r\n    setShouldFetchChatData(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    window.location.reload();\r\n  }\r\n\r\n  const fetchProfileNickname = async () => {\r\n    try {\r\n      const nickname = await getProfileNickname();\r\n      if (nickname && nickname !== userText) {\r\n        setUserText(nickname);\r\n      }\r\n    } catch (error) {\r\n      console.log('Ошибка при подгрузке никнейма', error);\r\n    }\r\n  };\r\n\r\n  const imageSource = selectedImage || (user && user.image);\r\n  const isFormValid = inputText.nickname;\r\n  const buttons = [\r\n    {\r\n      onPress: ({ }) => navigation.navigate('Profile'),\r\n      text: 'Мой аккаунт',\r\n    },\r\n    {\r\n      onPress: handleLogout,\r\n      text: 'Выйти',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.barContainer}>\r\n        <SearchBody\r\n          data={{\r\n            avatarUrl: chatUser.image,\r\n            username: chatUser.name,\r\n            onPress: fetchChatData\r\n          }}\r\n        />\r\n      </View>\r\n      <View style={styles.profileContainer}>\r\n        <ShowAvatar imageUrl={imageSource} profile={true} />\r\n        <Text style={{ color: '#000000', fontSize: Math.min(width * 0.03, height * 0.055), textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n        {buttons.map((data, index) => (\r\n          <View style={{ width: '70%' }} key={index}>\r\n            <BorderButton data={data} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.historyContainer}>\r\n        {isLoading && (\r\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <ActivityIndicator size=\"large\" color='rgba(0, 118, 185, 0.35)' />\r\n          </View>\r\n        )}\r\n        {!isLoading && (\r\n          <ScrollView style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n            {chatData?.map((message) => {\r\n              return (\r\n                <MessageBody\r\n                  key={message.id}\r\n                  data={{\r\n                    imageUrl: message.sender?.image,\r\n                    nickname: message.sender.name,\r\n                    message: message.data,\r\n                    date: message.date,\r\n                    own: message.sender?.name === user.name,\r\n                    channel: false,\r\n                    unauth: false,\r\n                    ident: message.id\r\n                  }}\r\n                  currentUser={user}\r\n                />\r\n              );\r\n            })}\r\n          </ScrollView>\r\n        )}\r\n\r\n      </View>\r\n      <View style={styles.sendContainer}>\r\n        <MessageInput channel={false} curuser={userText ? userText : user.name} chanInf={chatUser.name} onMessageSent={handleMessageSent} />\r\n      </View>\r\n      <View style={styles.bottomLeft}>\r\n        <HeaderButton title='Создать канал' onPress={() => setShowPopup(true)}>\r\n        </HeaderButton>\r\n      </View>\r\n      <Modal visible={showPopup} transparent={true}>\r\n        <View style={styles.popupContainer}>\r\n          <Text style={styles.text}>Название канала</Text>\r\n          <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n            <DataInput\r\n              value={inputText.nickname}\r\n              setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n              placeholder={''}\r\n              type={'nickname'}\r\n              flex={true}\r\n            />\r\n          </View>\r\n          <View>\r\n            <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n              <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}