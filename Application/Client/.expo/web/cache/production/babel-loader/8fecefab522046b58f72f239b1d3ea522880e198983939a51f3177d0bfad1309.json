{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectDestructuringEmpty from\"@babel/runtime/helpers/objectDestructuringEmpty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{useState,useContext,useEffect,useRef}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import Modal from\"react-native-web/dist/exports/Modal\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import CreateSvg from\"../assets/icons/createSvg\";import useStyles from\"./styles/mainAuthScreen.module\";import HeaderButton from\"../components/buttons/headerButton\";import ShowAvatar from\"../components/Avatar/ShowAvatar/showAvatar\";import BorderButton from\"../components/buttons/borderButton\";import MessageBody from\"../components/messageBody/messageBody\";import MessageInput from\"../components/inputs/messageInput/messageInput\";import SettingsSvg from\"../assets/icons/settingsSvg\";import{ImageContext}from\"../context/ImageContext\";import AuthContext from\"../context/AuthContext\";import AsyncStorage from'@react-native-async-storage/async-storage';import DataInput from\"../components/inputs/textInput/textInput\";import{useFocusEffect}from'@react-navigation/native';import{setProfileNickname,getProfileNickname}from\"../context/AsyncStorageUtil\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ChannelScreen(_ref){var _channelData$messages;var navigation=_ref.navigation,route=_ref.route;var styles=useStyles();var channelId=route.params.channelId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPopup=_useState2[0],setShowPopup=_useState2[1];var _useState3=useState('Admin'),_useState4=_slicedToArray(_useState3,2),role=_useState4[0],setRole=_useState4[1];var _useState5=useState({nickname:''}),_useState6=_slicedToArray(_useState5,2),inputText=_useState6[0],setInputText=_useState6[1];var _useContext=useContext(AuthContext),logout=_useContext.logout;var _useContext2=useContext(AuthContext),user=_useContext2.user,updateUser=_useContext2.updateUser;var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),messages=_useState8[0],setMessages=_useState8[1];var _useContext3=useContext(ImageContext),selectedImage=_useContext3.selectedImage;var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isMember=_useState10[0],setIsMember=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isDisable=_useState12[0],setIsDisable=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isAdmin=_useState14[0],setIsAdmin=_useState14[1];var _useState15=useState(true),_useState16=_slicedToArray(_useState15,2),showSettings=_useState16[0],setShowSettings=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),userText=_useState18[0],setUserText=_useState18[1];var username='admin';var password='root';var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),channelData=_useState20[0],setChannelData=_useState20[1];var _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),channelText=_useState22[0],setChannelText=_useState22[1];var _useState23=useState(true),_useState24=_slicedToArray(_useState23,2),shouldFetchChannelData=_useState24[0],setShouldFetchChannelData=_useState24[1];var fetchChannelData=function(){var _ref2=_asyncToGenerator(function*(){try{var response=yield fetch(\"https://backend-web-service-test.onrender.com/api/channels/\"+channelId,{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)}});if(response.ok){var _channelData$creator;var _channelData=yield response.json();var isCreator=(user==null?void 0:user.id)===((_channelData$creator=_channelData.creator)==null?void 0:_channelData$creator.id);var member=_channelData.members.find(function(member){return member.user.id===user.id;});var currentUser=_channelData.members.find(function(member){return member.user.id===user.id;});if(currentUser){var _role=currentUser.role;if(_role){if(_role.admin!==undefined){setIsAdmin(_role.admin);}}}setIsMember(member);setIsDisable(isCreator);setChannelData(_channelData);setChannelText(_channelData.channel.name);console.log(currentUser);}else{}}catch(error){alert('Ошибка при подключении к серверу:',error);}});return function fetchChannelData(){return _ref2.apply(this,arguments);};}();useFocusEffect(React.useCallback(function(){fetchProfileNickname();setShouldFetchChannelData(true);},[]));useEffect(function(){if(shouldFetchChannelData){fetchChannelData().then(function(){return setShouldFetchChannelData(false);}).catch(function(error){return alert('Не удалось подгрузить данные о канале:',error);});}},[shouldFetchChannelData]);useEffect(function(){var intervalId=setInterval(function(){setShouldFetchChannelData(true);},1000);return function(){return clearInterval(intervalId);};},[]);var handleMessageSent=function handleMessageSent(){setShouldFetchChannelData(true);};var fetchProfileNickname=function(){var _ref3=_asyncToGenerator(function*(){try{var nickname=yield getProfileNickname();if(nickname&&nickname!==userText){setUserText(nickname);}}catch(error){console.log('Ошибка при подгрузке никнейма:',error);}});return function fetchProfileNickname(){return _ref3.apply(this,arguments);};}();useEffect(function(){loadChatMessages();console.log(channelId);},[]);useEffect(function(){saveChatMessages();},[messages]);useEffect(function(){saveChannelState();},[isMember,showSettings]);var isFormValid=inputText.nickname;var buttons=[{onPress:function onPress(_ref4){_objectDestructuringEmpty(_ref4);return navigation.navigate('Profile');},text:'Мой аккаунт'},{onPress:handleLogout,text:'Выйти'}];var handleJoinLeave=function(){var _ref5=_asyncToGenerator(function*(){try{var name=userText||user.name;var channelName=channelText;var apiUrl=isMember?\"https://backend-web-service-test.onrender.com/api/channels/\"+channelId+\"/leave?username=\"+name:\"https://backend-web-service-test.onrender.com/api/channels/join?username=\"+name+\"&channel_name=\"+channelName;var response=yield fetch(apiUrl,{method:isMember?'DELETE':'POST',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)}});if(response.ok){setIsMember(function(prevIsMember){return!prevIsMember;});alert(isMember?'Вы покинули канал':'Вы присоединились к каналу');window.location.reload();}else{alert(isMember?'Не удалось покинуть канал':'Не удалось присоединиться к каналу');}}catch(error){alert('Ошибка при подключении к серверу:',error);}});return function handleJoinLeave(){return _ref5.apply(this,arguments);};}();var handleLogout=function handleLogout(){logout();window.location.reload();};var saveChannelState=function(){var _ref6=_asyncToGenerator(function*(){try{var channelState={isMember:isMember,showSettings:showSettings};yield AsyncStorage.setItem('channelState',JSON.stringify(channelState));}catch(error){console.error('Не удалось сохранить состояние канала:',error);}});return function saveChannelState(){return _ref6.apply(this,arguments);};}();var saveChatMessages=function(){var _ref7=_asyncToGenerator(function*(){try{yield AsyncStorage.setItem('chatMessages',JSON.stringify(messages));}catch(error){console.error('Не удалось сохранить сообщения:',error);}});return function saveChatMessages(){return _ref7.apply(this,arguments);};}();var imageSource=selectedImage||user&&user.image;var loadChatMessages=function(){var _ref8=_asyncToGenerator(function*(){try{var savedMessages=yield AsyncStorage.getItem('chatMessages');if(savedMessages){setMessages(JSON.parse(savedMessages));}}catch(error){console.error('Не удалось подгрузить сообщения:',error);}});return function loadChatMessages(){return _ref8.apply(this,arguments);};}();var handleCreateChannel=function(){var _ref9=_asyncToGenerator(function*(){try{var response=yield fetch('https://backend-web-service-test.onrender.com/api/channels/create',{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Basic \"+btoa(username+\":\"+password)},body:JSON.stringify({username:user.name,channelName:inputText.nickname})});if(response.ok){setShowPopup(false);alert('Канал создан');window.location.reload();}else{alert('Не удалось создать канал');}}catch(error){alert('Ошибка при подключении к серверу:',error);}});return function handleCreateChannel(){return _ref9.apply(this,arguments);};}();return _jsxs(View,{style:styles.containerMain,children:[_jsxs(View,{style:styles.barChanContainer,children:[_jsx(Text,{style:styles.barText,children:channelText}),_jsx(View,{children:_jsx(HeaderButton,{title:isMember?'Покинуть':'Присоединиться',onPress:handleJoinLeave,disabled:isDisable})}),isMember&&isAdmin&&_jsx(View,{style:{marginRight:20},children:_jsx(TouchableHighlight,{onPress:function onPress(_ref10){_objectDestructuringEmpty(_ref10);return navigation.navigate('Settings',{channelId:channelData.channel.id});},children:_jsx(SettingsSvg,{})})})]}),_jsxs(View,{style:styles.profileContainer,children:[_jsx(ShowAvatar,{imageUrl:imageSource,profile:true}),_jsx(Text,{style:{color:'#000000',fontSize:48,textAlign:'center',marginBottom:13,fontFamily:'Montserrat-Regular'},children:userText?userText:user.name}),buttons.map(function(data,index){return _jsx(View,{style:{width:'70%'},children:_jsx(BorderButton,{data:data},index)},index);})]}),_jsx(View,{style:styles.historyContainer,children:_jsx(ScrollView,{style:{flex:1,scrollbarWidth:0,flexDirection:'column'},children:channelData==null?void 0:(_channelData$messages=channelData.messages)==null?void 0:_channelData$messages.map(function(message){var _message$sender,_matchingMember$role,_message$sender2,_message$sender3,_message$sender4;var senderId=(_message$sender=message.sender)==null?void 0:_message$sender.id;var matchingMember=channelData.members.find(function(member){return member.user.id===senderId;});var role=matchingMember==null?void 0:(_matchingMember$role=matchingMember.role)==null?void 0:_matchingMember$role.name;return _jsx(MessageBody,{data:{imageUrl:(_message$sender2=message.sender)==null?void 0:_message$sender2.image,nickname:(_message$sender3=message.sender)==null?void 0:_message$sender3.name,role:role,message:message.data,date:message.date,own:((_message$sender4=message.sender)==null?void 0:_message$sender4.name)===user.name,channel:true,unauth:false,ident:message.id},currentUser:user},message.id);})})}),isMember&&_jsx(View,{style:styles.sendContainer,children:_jsx(MessageInput,{channel:true,curuser:userText?userText:user.name,chanInf:channelData,onMessageSent:handleMessageSent})}),_jsx(View,{style:styles.bottomLeft,children:_jsx(TouchableHighlight,{onPress:function onPress(){return setShowPopup(true);},children:_jsx(CreateSvg,{})})}),_jsx(Modal,{visible:showPopup,transparent:true,children:_jsxs(View,{style:styles.popupContainer,children:[_jsx(Text,{style:styles.text,children:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u043D\\u0430\\u043B\\u0430\"}),_jsx(View,{style:{marginBottom:13,alignItems:'center'},children:_jsx(DataInput,{value:inputText.nickname,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{nickname:text}));},placeholder:'',type:'nickname',flex:true})}),_jsx(TouchableHighlight,{onPress:function onPress(){return setShowPopup(false);},children:_jsx(HeaderButton,{title:\"Создать\",onPress:handleCreateChannel,disabled:!isFormValid})})]})})]});}","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","View","Text","TouchableHighlight","Modal","TouchableOpacity","ScrollView","CreateSvg","useStyles","HeaderButton","ShowAvatar","BorderButton","MessageBody","MessageInput","SettingsSvg","ImageContext","AuthContext","AsyncStorage","DataInput","useFocusEffect","setProfileNickname","getProfileNickname","jsx","_jsx","jsxs","_jsxs","ChannelScreen","_ref","_channelData$messages","navigation","route","styles","channelId","params","_useState","_useState2","_slicedToArray","showPopup","setShowPopup","_useState3","_useState4","role","setRole","_useState5","nickname","_useState6","inputText","setInputText","_useContext","logout","_useContext2","user","updateUser","_useState7","_useState8","messages","setMessages","_useContext3","selectedImage","_useState9","_useState10","isMember","setIsMember","_useState11","_useState12","isDisable","setIsDisable","_useState13","_useState14","isAdmin","setIsAdmin","_useState15","_useState16","showSettings","setShowSettings","_useState17","_useState18","userText","setUserText","username","password","_useState19","_useState20","channelData","setChannelData","_useState21","_useState22","channelText","setChannelText","_useState23","_useState24","shouldFetchChannelData","setShouldFetchChannelData","fetchChannelData","_ref2","_asyncToGenerator","response","fetch","method","headers","btoa","ok","_channelData$creator","json","isCreator","id","creator","member","members","find","currentUser","admin","undefined","channel","name","console","log","error","alert","apply","arguments","useCallback","fetchProfileNickname","then","catch","intervalId","setInterval","clearInterval","handleMessageSent","_ref3","loadChatMessages","saveChatMessages","saveChannelState","isFormValid","buttons","onPress","_ref4","_objectDestructuringEmpty","navigate","text","handleLogout","handleJoinLeave","_ref5","channelName","apiUrl","prevIsMember","window","location","reload","_ref6","channelState","setItem","JSON","stringify","_ref7","imageSource","image","_ref8","savedMessages","getItem","parse","handleCreateChannel","_ref9","body","style","containerMain","children","barChanContainer","barText","title","disabled","marginRight","_ref10","profileContainer","imageUrl","profile","color","fontSize","textAlign","marginBottom","fontFamily","map","data","index","width","historyContainer","flex","scrollbarWidth","flexDirection","message","_message$sender","_matchingMember$role","_message$sender2","_message$sender3","_message$sender4","senderId","sender","matchingMember","date","own","unauth","ident","sendContainer","curuser","chanInf","onMessageSent","bottomLeft","visible","transparent","popupContainer","alignItems","value","setValue","_objectSpread","placeholder","type"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/test/screens/ChannelScreen.js"],"sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableHighlight, Modal, TouchableOpacity, ScrollView } from 'react-native';\r\nimport CreateSvg from '../assets/icons/createSvg';\r\nimport useStyles from './styles/mainAuthScreen.module';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport ShowAvatar from '../components/Avatar/ShowAvatar/showAvatar';\r\nimport BorderButton from '../components/buttons/borderButton';\r\nimport MessageBody from '../components/messageBody/messageBody';\r\nimport MessageInput from '../components/inputs/messageInput/messageInput';\r\nimport SettingsSvg from '../assets/icons/settingsSvg';\r\nimport { ImageContext } from '../context/ImageContext';\r\nimport AuthContext from '../context/AuthContext';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\nimport { setProfileNickname, getProfileNickname } from '../context/AsyncStorageUtil';\r\n\r\n\r\nexport default function ChannelScreen({ navigation, route }) {\r\n    const styles = useStyles();\r\n    const { channelId } = route.params;\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [role, setRole] = useState('Admin');\r\n    const [inputText, setInputText] = useState({\r\n        nickname: '',\r\n    });\r\n    const { logout } = useContext(AuthContext);\r\n    const { user, updateUser } = useContext(AuthContext);\r\n    const [messages, setMessages] = useState([]);\r\n    const { selectedImage } = useContext(ImageContext);\r\n    const [isMember, setIsMember] = useState(false);\r\n    const [isDisable, setIsDisable] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [showSettings, setShowSettings] = useState(true);\r\n    const [userText, setUserText] = useState('');\r\n    const username = 'admin';\r\n    const password = 'root';\r\n    const [channelData, setChannelData] = useState([]);\r\n    const [channelText, setChannelText] = useState('');\r\n\r\n\r\n    const [shouldFetchChannelData, setShouldFetchChannelData] = useState(true);\r\n\r\n    const fetchChannelData = async () => {\r\n        try {\r\n            const response = await fetch(`https://backend-web-service-test.onrender.com/api/channels/${channelId}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                const channelData = await response.json();\r\n                const isCreator = user?.id === channelData.creator?.id;\r\n                const member = channelData.members.find(member => member.user.id === user.id);\r\n                const currentUser = channelData.members.find(member => member.user.id === user.id);\r\n\r\n                if (currentUser) {\r\n                    const { role } = currentUser;\r\n                    if (role) {\r\n                        if (role.admin !== undefined) {\r\n                            setIsAdmin(role.admin);\r\n                        }\r\n                    }\r\n                }\r\n                setIsMember(member);\r\n                setIsDisable(isCreator);\r\n                setChannelData(channelData);\r\n                setChannelText(channelData.channel.name)\r\n                console.log(currentUser)\r\n            } else {\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n    useFocusEffect(\r\n        React.useCallback(() => {\r\n            fetchProfileNickname();\r\n            setShouldFetchChannelData(true);\r\n        }, [])\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (shouldFetchChannelData) {\r\n            fetchChannelData()\r\n                .then(() => setShouldFetchChannelData(false))\r\n                .catch((error) => alert('Не удалось подгрузить данные о канале:', error));\r\n        }\r\n    }, [shouldFetchChannelData]);\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setShouldFetchChannelData(true);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    const handleMessageSent = () => {\r\n        setShouldFetchChannelData(true);\r\n    };\r\n\r\n    const fetchProfileNickname = async () => {\r\n        try {\r\n            const nickname = await getProfileNickname();\r\n            if (nickname && nickname !== userText) {\r\n                setUserText(nickname);\r\n            }\r\n        } catch (error) {\r\n            console.log('Ошибка при подгрузке никнейма:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadChatMessages();\r\n        console.log(channelId);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        saveChatMessages();\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        saveChannelState();\r\n    }, [isMember, showSettings]);\r\n\r\n\r\n\r\n    const isFormValid = inputText.nickname;\r\n    const buttons = [\r\n        {\r\n            onPress: ({ }) => navigation.navigate('Profile'),\r\n            text: 'Мой аккаунт',\r\n        },\r\n        {\r\n            onPress: handleLogout,\r\n            text: 'Выйти',\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const handleJoinLeave = async () => {\r\n        try {\r\n            const name = userText || user.name;\r\n            const channelName = channelText;\r\n            const apiUrl = isMember\r\n                ? `https://backend-web-service-test.onrender.com/api/channels/${channelId}/leave?username=${name}`\r\n                : `https://backend-web-service-test.onrender.com/api/channels/join?username=${name}&channel_name=${channelName}`;\r\n\r\n            const response = await fetch(apiUrl, {\r\n                method: isMember ? 'DELETE' : 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n            });\r\n\r\n            if (response.ok) {\r\n                setIsMember((prevIsMember) => !prevIsMember);\r\n                alert(isMember ? 'Вы покинули канал' : 'Вы присоединились к каналу');\r\n                window.location.reload();\r\n            } else {\r\n                alert(isMember ? 'Не удалось покинуть канал' : 'Не удалось присоединиться к каналу');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        window.location.reload();\r\n      }\r\n\r\n    const saveChannelState = async () => {\r\n        try {\r\n            const channelState = {\r\n                isMember,\r\n                showSettings,\r\n            };\r\n            await AsyncStorage.setItem('channelState', JSON.stringify(channelState));\r\n        } catch (error) {\r\n            console.error('Не удалось сохранить состояние канала:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const saveChatMessages = async () => {\r\n        try {\r\n            await AsyncStorage.setItem('chatMessages', JSON.stringify(messages));\r\n        } catch (error) {\r\n            console.error('Не удалось сохранить сообщения:', error);\r\n        }\r\n    };\r\n    const imageSource = selectedImage || (user && user.image);\r\n    const loadChatMessages = async () => {\r\n        try {\r\n            const savedMessages = await AsyncStorage.getItem('chatMessages');\r\n            if (savedMessages) {\r\n                setMessages(JSON.parse(savedMessages));\r\n            }\r\n        } catch (error) {\r\n            console.error('Не удалось подгрузить сообщения:', error);\r\n        }\r\n    };\r\n    const handleCreateChannel = async () => {\r\n        try {\r\n            const response = await fetch('https://backend-web-service-test.onrender.com/api/channels/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Basic ${btoa(`${username}:${password}`)}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    username: user.name,\r\n                    channelName: inputText.nickname,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setShowPopup(false);\r\n                alert('Канал создан');\r\n                window.location.reload();\r\n            } else {\r\n                alert('Не удалось создать канал');\r\n            }\r\n        } catch (error) {\r\n            alert('Ошибка при подключении к серверу:', error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.containerMain}>\r\n            <View style={styles.barChanContainer}>\r\n                <Text style={styles.barText}>{channelText}</Text>\r\n                <View>\r\n                    <HeaderButton title={isMember ? 'Покинуть' : 'Присоединиться'} onPress={handleJoinLeave} disabled={isDisable} />\r\n                </View>\r\n                {isMember && isAdmin && (\r\n                    <View style={{ marginRight: 20 }}>\r\n                        <TouchableHighlight onPress={({ }) => navigation.navigate('Settings', { channelId: channelData.channel.id })}>\r\n                            <SettingsSvg />\r\n                        </TouchableHighlight>\r\n                    </View>\r\n                )}\r\n            </View>\r\n            <View style={styles.profileContainer}>\r\n                <ShowAvatar imageUrl={imageSource} profile={true} />\r\n                <Text style={{ color: '#000000', fontSize: 48, textAlign: 'center', marginBottom: 13, fontFamily: 'Montserrat-Regular', }}>{userText ? userText : user.name}</Text>\r\n                {buttons.map((data, index) => (\r\n                    <View style={{ width: '70%' }} key={index}>\r\n                        <BorderButton key={index} data={data} />\r\n                    </View>\r\n                ))}\r\n            </View>\r\n            <View style={styles.historyContainer}>\r\n                <ScrollView\r\n                    style={{ flex: 1, scrollbarWidth: 0, flexDirection: 'column' }}>\r\n                    {channelData?.messages?.map((message) => {\r\n                        const senderId = message.sender?.id;\r\n                        const matchingMember = channelData.members.find((member) => member.user.id === senderId);\r\n\r\n                        const role = matchingMember?.role?.name;\r\n\r\n                        return (\r\n                            <MessageBody\r\n                                key={message.id}\r\n                                data={{\r\n                                    imageUrl: message.sender?.image,\r\n                                    nickname: message.sender?.name,\r\n                                    role: role,\r\n                                    message: message.data,\r\n                                    date: message.date,\r\n                                    own: message.sender?.name === user.name,\r\n                                    channel: true,\r\n                                    unauth: false,\r\n                                    ident: message.id\r\n                                }}\r\n                                currentUser={user}\r\n                            />\r\n                        );\r\n                    })}\r\n\r\n                </ScrollView>\r\n            </View>\r\n            {isMember && (\r\n                <View style={styles.sendContainer}>\r\n                    <MessageInput channel={true} curuser={userText ? userText : user.name} chanInf={channelData} onMessageSent={handleMessageSent} />\r\n                </View>\r\n            )}\r\n            <View style={styles.bottomLeft}>\r\n                <TouchableHighlight onPress={() => setShowPopup(true)}>\r\n                    <CreateSvg />\r\n                </TouchableHighlight>\r\n            </View>\r\n            <Modal visible={showPopup} transparent={true}>\r\n                <View style={styles.popupContainer}>\r\n                    <Text style={styles.text}>Название канала</Text>\r\n                    <View style={{ marginBottom: 13, alignItems: 'center' }}>\r\n                        <DataInput\r\n                            value={inputText.nickname}\r\n                            setValue={(text) => setInputText({ ...inputText, nickname: text })}\r\n                            placeholder={''}\r\n                            type={'nickname'}\r\n                            flex={true}\r\n                        />\r\n                    </View>\r\n                    <TouchableHighlight onPress={() => setShowPopup(false)}>\r\n                        <HeaderButton title={\"Создать\"} onPress={handleCreateChannel} disabled={!isFormValid} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}