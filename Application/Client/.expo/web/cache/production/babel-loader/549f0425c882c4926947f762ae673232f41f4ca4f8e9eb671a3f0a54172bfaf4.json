{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React,{useState,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import useStyles from\"./styles/greetingsScreen.module\";import DataInput from\"../components/inputs/textInput/textInput\";import HeaderButton from\"../components/buttons/headerButton\";import BackSvg from\"../assets/icons/backSvg\";import AuthContext from\"../context/AuthContext\";import{setEmail}from\"../context/AsyncStorageUtil\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChangeEmailScreen(_ref){var navigation=_ref.navigation;var styles=useStyles();var _useState=useState({email:'',code:''}),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),receivedCode=_useState4[0],setReceivedCode=_useState4[1];var _useContext=useContext(AuthContext),user=_useContext.user;var username='admin';var password='root';var isButtonDisabled=function isButtonDisabled(){return!inputText.email||!inputText.code||inputText.code!=receivedCode;};var isDisabled=function isDisabled(){return!inputText.email;};var getCode=function getCode(){var email=encodeURIComponent(inputText.email);var apiUrl=\"https://linking-api.onrender.com/api/send_email?email=\"+email;fetch(apiUrl,{method:'GET',headers:{Authorization:\"Basic \"+btoa(username+\":\"+password)}}).then(function(response){return response.json();}).then(function(data){setReceivedCode(data);if(data){alert('Код подтверждения был отправлен на указанную почту!');}else{alert('Не удалось отправить код');}}).catch(function(error){alert('Ошибка при подключении к серверу',error);});};var changeEmail=function(){var _ref2=_asyncToGenerator(function*(){var emailRegex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;if(!emailRegex.test(inputText.email)){alert('Не правильный формат почты');return;}try{var userId=user==null?void 0:user.id;var email=encodeURIComponent(inputText.email);var apiUrl=\"https://linking-api.onrender.com/api/users/\"+userId+\"/update/email?email=\"+email;var response=yield fetch(apiUrl,{method:'PUT',headers:{'Content-Type':'application/json',Authorization:\"Basic \"+btoa(username+\":\"+password)}});if(response.ok){alert('Почта успешно обновлена');setEmail(inputText.email);}else{alert('Не удалось обновить почту');}}catch(error){alert('Ошибка при подключении к серверу',error);}});return function changeEmail(){return _ref2.apply(this,arguments);};}();return _jsxs(View,{style:styles.containerMain,children:[_jsxs(View,{style:styles.textContainer,children:[_jsxs(View,{style:styles.inputContainer,children:[_jsx(View,{style:{marginBottom:13},children:_jsx(DataInput,{value:inputText.email,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{email:text}));},placeholder:\"Почта\",type:\"email\",flex:false})}),_jsx(View,{style:{marginBottom:13},children:_jsx(DataInput,{value:inputText.code,setValue:function setValue(text){return setInputText(_objectSpread(_objectSpread({},inputText),{},{code:text}));},placeholder:\"Код\",type:\"code\",flex:false})})]}),_jsx(View,{children:_jsx(HeaderButton,{title:\"Изменить почту\",onPress:changeEmail,disabled:isButtonDisabled()})}),_jsx(View,{style:{marginBottom:13},children:_jsx(HeaderButton,{title:\"Получить код\",onPress:getCode,disabled:isDisabled()})})]}),_jsx(View,{style:styles.topLeft,children:_jsx(TouchableHighlight,{onPress:function onPress(){return navigation.navigate('Profile');},children:_jsx(BackSvg,{})})})]});}export default ChangeEmailScreen;","map":{"version":3,"names":["React","useState","useContext","View","TouchableHighlight","useStyles","DataInput","HeaderButton","BackSvg","AuthContext","setEmail","jsx","_jsx","jsxs","_jsxs","ChangeEmailScreen","_ref","navigation","styles","_useState","email","code","_useState2","_slicedToArray","inputText","setInputText","_useState3","_useState4","receivedCode","setReceivedCode","_useContext","user","username","password","isButtonDisabled","isDisabled","getCode","encodeURIComponent","apiUrl","fetch","method","headers","Authorization","btoa","then","response","json","data","alert","catch","error","changeEmail","_ref2","_asyncToGenerator","emailRegex","test","userId","id","ok","apply","arguments","style","containerMain","children","textContainer","inputContainer","marginBottom","value","setValue","text","_objectSpread","placeholder","type","flex","title","onPress","disabled","topLeft","navigate"],"sources":["C:/Users/ilias/OneDrive/Рабочий стол/messenger_project/Application/Client/screens/ChangeEmailScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View,TouchableHighlight } from 'react-native-web';\r\nimport useStyles from './styles/greetingsScreen.module';\r\nimport DataInput from '../components/inputs/textInput/textInput';\r\nimport HeaderButton from '../components/buttons/headerButton';\r\nimport BackSvg from '../assets/icons/backSvg';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { setEmail } from '../context/AsyncStorageUtil';\r\n\r\nfunction ChangeEmailScreen({ navigation }) {\r\n  const styles = useStyles();\r\n  const [inputText, setInputText] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n  const [receivedCode, setReceivedCode] = useState('');\r\n  const { user } = useContext(AuthContext);\r\n  const username = 'admin';\r\n  const password = 'root';\r\n  const isButtonDisabled = () => {\r\n    return !inputText.email || !inputText.code || inputText.code != receivedCode;\r\n  };\r\n  const isDisabled = () => {\r\n    return !inputText.email;\r\n  };\r\n\r\n  const getCode = () => {\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://linking-api.onrender.com/api/send_email?email=${email}`;\r\n\r\n    fetch(apiUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setReceivedCode(data);\r\n        if (data) {\r\n          alert('Код подтверждения был отправлен на указанную почту!');\r\n         \r\n        } else {\r\n          alert('Не удалось отправить код');\r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        alert('Ошибка при подключении к серверу', error);\r\n      });\r\n  };\r\n\r\n  const changeEmail = async () => {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(inputText.email)) {\r\n      alert('Не правильный формат почты');\r\n      return;\r\n    }\r\n  try {\r\n    const userId = user?.id;\r\n    const email = encodeURIComponent(inputText.email);\r\n    const apiUrl = `https://linking-api.onrender.com/api/users/${userId}/update/email?email=${email}`;\r\n\r\n    const response = await fetch(apiUrl, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`,\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert('Почта успешно обновлена');\r\n      setEmail(inputText.email);\r\n    } else {\r\n      alert('Не удалось обновить почту');\r\n    }\r\n  } catch (error) {\r\n    alert('Ошибка при подключении к серверу', error);\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <View style={styles.containerMain}>\r\n      <View style={styles.textContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.email}\r\n              setValue={(text) => setInputText({ ...inputText, email: text })}\r\n              placeholder={\"Почта\"}\r\n              type={\"email\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n          <View style={{ marginBottom: 13 }}>\r\n            <DataInput\r\n              value={inputText.code}\r\n              setValue={(text) => setInputText({ ...inputText, code: text })}\r\n              placeholder={\"Код\"}\r\n              type={\"code\"}\r\n              flex={false}\r\n            />\r\n          </View>\r\n        </View>\r\n\r\n        <View>\r\n          <HeaderButton\r\n            title={\"Изменить почту\"}\r\n            onPress={changeEmail}\r\n            disabled={isButtonDisabled()}\r\n          />\r\n        </View>\r\n        <View style={{ marginBottom: 13 }}>\r\n          <HeaderButton\r\n            title={\"Получить код\"}\r\n            onPress={getCode}\r\n            disabled={isDisabled()}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.topLeft}>\r\n        <TouchableHighlight onPress={() => navigation.navigate('Profile')}>\r\n          <BackSvg />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ChangeEmailScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}